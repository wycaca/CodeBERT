1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can undergrads take number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT , COURSEalias0.ENFORCED_REQUIREMENT , COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How big is number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE "%requirement0%" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which upper-level classes are credit0 credits ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias1, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_OFFERINGalias1.SEMESTER = COURSE_OFFERINGalias0.SEMESTER AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number1 AND ( NOT ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When Prof. instructor0 teaches number0 are there classes on Friday ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE AREAalias0.AREA LIKE "%area0%" AND PROGRAM_COURSEalias0.WORKLOAD < ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM COURSE AS COURSEalias1 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 ) ORDER BY PROGRAM_COURSEalias0.WORKLOAD ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who usually teaches department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes next semester are available as requirement0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 GROUP BY COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take department0 number0 right now ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take department0 number0 in semester0 year0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 an enforced prerequisite for anything ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE ( AREAalias0.AREA LIKE "%topic0%" OR COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND ( AREAalias0.AREA LIKE "%topic1%" OR COURSEalias0.DESCRIPTION LIKE "%topic1%" OR COURSEalias0.NAME LIKE "%topic1%" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes is Dr. instructor0 teaching next semester ?<CODESPLIT>SELECT COUNT( * ) > 0 , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD > 3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What courses does Prof. instructor0 teach in semester0 year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses are worth credit0 credits ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = credit0 AND COURSEalias0.DEPARTMENT = "department0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes do n't have lab sessions ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = 2017 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Tell me more about department0 number0 .<CODESPLIT>SELECT DISTINCT PROGRAM_REQUIREMENTalias0.ADDITIONAL_REQ , PROGRAM_REQUIREMENTalias0.CATEGORY , PROGRAM_REQUIREMENTalias0.MIN_CREDIT , PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 , PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENTalias0 WHERE PROGRAMalias0.NAME LIKE "%program0%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_REQUIREMENTalias0.PROGRAM_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes do I need to take in order to declare a major in department0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE "%department0%" AND PROGRAM_COURSEalias0.CATEGORY LIKE "PreMajor" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are level0 -level classes offered in Spring term or Summer term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "SP" , "SU" , "SS" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes can I use for my requirement0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>I 'm thinking about taking a area0 course and want to know where I can start .<CODESPLIT>SELECT DISTINCT PROGRAM_COURSEalias0.CATEGORY FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What other courses does Prof. instructor0 teach besides number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER <> number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes has Dr. instructor0 taught in the past ?<CODESPLIT>SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias2 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID < OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID < OFFERING_INSTRUCTORalias2.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias1.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID AND OFFERING_INSTRUCTORalias2.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are all the upper-level classes credit0 credits ?<CODESPLIT>SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.CREDITS <> credit0 AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are any of the courses I 've taken area0 courses ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.FRIDAY , COURSE_OFFERINGalias0.MONDAY , COURSE_OFFERINGalias0.SATURDAY , COURSE_OFFERINGalias0.SUNDAY , COURSE_OFFERINGalias0.THURSDAY , COURSE_OFFERINGalias0.TUESDAY , COURSE_OFFERINGalias0.WEDNESDAY , SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ORDER BY SEMESTERalias0.SEMESTER_ID DESC LIMIT 10 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which professors do n't teach classes with labs ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER <> "semester0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Will there be an topic0 misc0 this year ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE ( COURSEalias0.DESCRIPTION LIKE "%misc0%" OR COURSEalias0.NAME LIKE "%misc0%" ) AND ( COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take department0 number0 in semester0 year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( COURSEalias0.NUMBER = number0 OR COURSEalias0.NUMBER = number1 ) AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 INNER JOIN COURSE AS COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE ( COURSEalias1.NUMBER = number0 OR COURSEalias1.NUMBER = number1 ) AND COURSEalias1.DEPARTMENT = "department0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does instructor0 teach any upper-level courses ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE INSTRUCTORalias0.NAME LIKE "%instructor0%" AND PROGRAM_COURSEalias0.CATEGORY LIKE "ULCS" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does department0 number0 count for requirement0 ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.END_TIME , COURSE_OFFERINGalias0.FRIDAY , COURSE_OFFERINGalias0.MONDAY , COURSE_OFFERINGalias0.SATURDAY , COURSE_OFFERINGalias0.START_TIME , COURSE_OFFERINGalias0.SUNDAY , COURSE_OFFERINGalias0.THURSDAY , COURSE_OFFERINGalias0.TUESDAY , COURSE_OFFERINGalias0.WEDNESDAY FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "EECS" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What level0 -level classes are offered next semester ?<CODESPLIT>SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE "%topic0%" AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = "WN" AND SEMESTERalias1.YEAR = 2016 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When does number0 meet in the semester0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What time will number0 and number1 be over as I need to leave by 5:00 P.M. each day to get to work on time .<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.END_TIME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND ( COURSEalias0.NUMBER = number0 OR COURSEalias0.NUMBER = number1 ) AND COURSE_OFFERINGalias0.END_TIME < "17:00:00" AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What special topics classes are there next semester0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does instructor0 teach any upper-level courses ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE "%topic0%" AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = 2017 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of the courses I 've taken , which is considered the hardest ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = 2017 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches department0 number0 next semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT , COURSEalias0.ENFORCED_REQUIREMENT , COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has taught , is teaching , or will teach topic0 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE "%topic0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Tell me more about department0 number0 .<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is Prof. instructor0 teaching number0 next semester0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2017 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What upper-level electives are offered in the Fall and Winter ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( SEMESTERalias0.SEMESTER = "FA" OR SEMESTERalias0.SEMESTER = "WN" ) AND COURSEalias0.DEPARTMENT = "EECS" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are there any upper level classes that do not require number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE ( COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND COURSEalias0.DEPARTMENT = "EECS" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What kind of workload does number0 have ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID , SEMESTERalias0.SEMESTER ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is Prof. instructor0 the only person who teaches topic0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD < 3 ORDER BY PROGRAM_COURSEalias0.WORKLOAD ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can undergrads take number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE ( COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND COURSEalias0.DEPARTMENT = "EECS" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes this semester are a prerequisite to most other classes ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = 2017 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When is the next time instructor0 will teach number0 ?<CODESPLIT>SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = number0 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = "WN" AND SEMESTERalias1.YEAR = 2016 ) ORDER BY SEMESTERalias0.SEMESTER_ID ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there a project for number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.HAS_PROJECTS FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take level0 -level classes in the Spring or Summer term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = "N" AND COURSE_OFFERINGalias0.MONDAY = "N" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which level0 -level courses do n't have labs ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( SEMESTERalias0.SEMESTER = "FA" OR SEMESTERalias0.SEMESTER = "WN" ) AND COURSEalias0.DEPARTMENT = "EECS" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>I 'm thinking about taking a area0 course and want to know where I can start .<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM AREA AS AREAalias0 , COURSE AS COURSEalias0 WHERE AREAalias0.AREA LIKE "%area0%" AND COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What class can I take now that 's a prerequisite for most other classes ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.CREDITS = credit0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How big is number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me topic0 courses of credit0 credits .<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE ( COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND COURSEalias0.CREDITS = credit0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses in topic0 satisfy the requirement0 requirement ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( AREAalias0.AREA LIKE "%topic0%" OR COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which topic0 courses have no prerequisites ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses can I take in the Spring or Summer semester to satisfy my requirement0 requirement ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 being offered next semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE ( AREAalias0.AREA LIKE "%topic0%" OR COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND ( AREAalias0.AREA LIKE "%topic1%" OR COURSEalias0.DESCRIPTION LIKE "%topic1%" OR COURSEalias0.NAME LIKE "%topic1%" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How often does the class meet for department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD < 3 ORDER BY PROGRAM_COURSEalias0.WORKLOAD ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has department0 number0 ever been offered over the semester0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me some easy level0 -level courses .<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME NOT LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the easiest courses ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there an department0 level0 -level course that is worth credit0 credits ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = number1 AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What time do department0 number0 lectures start next semester ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which programs require department0 number0 ?<CODESPLIT>SELECT DISTINCT PROGRAMalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 a prerequisite for department0 number1 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.CREDITS = credit0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 hard ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.NAME LIKE "%topic0%" AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 section number1 offered in the semester0 year0 semester ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = number1 AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many sections are there for department0 number0 ?<CODESPLIT>SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What 's the difference between department0 number0 and department0 number1 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.DESCRIPTION , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE ( COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ) OR ( COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take level0 -level classes in the Spring or Summer term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = credit0 AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER < level0 + 100 AND COURSEalias0.NUMBER >= level0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there a section of department0 number0 after time0 P.M. ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.FRIDAY FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has instructor0 ever taught department0 number0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes do n't have lab sessions ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%Core%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the department0 classes I have to take to graduate as a CS major ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 INNER JOIN COURSE AS COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has department0 number0 ever been offered over the semester0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE "%department0%" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 an enforced prerequisite for anything ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was the last time department0 number0 was offered ?<CODESPLIT>SELECT DISTINCT SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ORDER BY SEMESTERalias0.YEAR DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many sections are there for department0 number0 ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.HAS_LAB = "Y" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many times has department0 number0 been offered ?<CODESPLIT>SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lectures does department0 number0 have each week ?<CODESPLIT>SELECT DERIVED_FIELDalias0 + DERIVED_FIELDalias1 + DERIVED_FIELDalias2 + DERIVED_FIELDalias3 + DERIVED_FIELDalias4 + DERIVED_FIELDalias5 + DERIVED_FIELDalias6 FROM ( SELECT SUM( CASE WHEN DERIVED_TABLEalias0.FRIDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias0 , SUM( CASE WHEN DERIVED_TABLEalias0.MONDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias1 , SUM( CASE WHEN DERIVED_TABLEalias0.SATURDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias2 , SUM( CASE WHEN DERIVED_TABLEalias0.SUNDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias3 , SUM( CASE WHEN DERIVED_TABLEalias0.THURSDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias4 , SUM( CASE WHEN DERIVED_TABLEalias0.TUESDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias5 , SUM( CASE WHEN DERIVED_TABLEalias0.WEDNESDAY = "Y" THEN 1 ELSE 0 END ) AS DERIVED_FIELDalias6 FROM ( SELECT COURSE_OFFERINGalias0.* FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 LIMIT 1 ) AS DERIVED_TABLEalias0 ) AS DERIVED_TABLEalias1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many classes across all departments are being offered next semester ?<CODESPLIT>SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does anyone other than Prof. instructor0 teach number0 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME NOT LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the requirement0 classes ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "%CS-LSA%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What courses are required for the major but not in the department0 department ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT <> "department0" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me the requirements for a program0 degree .<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "%CS-LSA%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Name the department0 level0 -level course that have credit0 credits .<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR , STUDENT_RECORDalias0.GRADE FROM COURSE AS COURSEalias0 , SEMESTER AS SEMESTERalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes will be offered in the next 6 semesters ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE "%area0%" AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take level0 -level classes in the Spring or Summer term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.CREDITS FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the prerequisites for department0 number0 and number1 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME , PROGRAM_COURSEalias0.WORKLOAD FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE "%requirement0%" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the course prerequisites for department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE ( ( COURSEalias0.NUMBER < level0 + 100 AND COURSEalias0.NUMBER >= level0 ) OR ( COURSEalias0.NUMBER < level1 + 100 AND COURSEalias0.NUMBER >= level1 ) ) AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM COURSE AS COURSEalias1 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE ( ( COURSEalias1.NUMBER < level0 + 100 AND COURSEalias1.NUMBER >= level0 ) OR ( COURSEalias1.NUMBER < level1 + 100 AND COURSEalias1.NUMBER >= level1 ) ) AND COURSEalias1.DEPARTMENT = "department0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What grades have I gotten in courses taught by Prof. instructor0 ?<CODESPLIT>SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When is number0 offered next semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE "%area0%" AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses are offered this semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ORDER BY COURSEalias0.DEPARTMENT ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What 's my current GPA ?<CODESPLIT>SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I see the difficulty for all of the CS-LSA courses ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "CS-LSA" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When Prof. instructor0 teaches number0 are there classes on Friday ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are any upper elective courses offered for CS ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.END_TIME , COURSE_OFFERINGalias0.FRIDAY , COURSE_OFFERINGalias0.MONDAY , COURSE_OFFERINGalias0.SATURDAY , COURSE_OFFERINGalias0.START_TIME , COURSE_OFFERINGalias0.SUNDAY , COURSE_OFFERINGalias0.THURSDAY , COURSE_OFFERINGalias0.TUESDAY , COURSE_OFFERINGalias0.WEDNESDAY FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE "%topic0%" AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which days of the week is department0 number0 taught ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.FRIDAY , COURSE_OFFERINGalias0.MONDAY , COURSE_OFFERINGalias0.SATURDAY , COURSE_OFFERINGalias0.SUNDAY , COURSE_OFFERINGalias0.THURSDAY , COURSE_OFFERINGalias0.TUESDAY , COURSE_OFFERINGalias0.WEDNESDAY FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ORDER BY SEMESTERalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What department0 classes are offered in semester0 term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND SEMESTERalias0.SEMESTER = "semester0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does department0 number0 count for requirement0 ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID , SEMESTERalias0.SEMESTER ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "FA" , "WN" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the prereqs for the course where firstname0 lastname0 is the GSI ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.CATEGORY FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY IN ( "requirement0" , "requirement1" ) AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 GROUP BY COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is number0 offered in semester0 year0 in the afternoon ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= "12:00:00" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Will Prof. instructor0 teach number0 next semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses will Prof. instructor0 be teaching over the next year ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "%CS%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there a section of department0 number0 after time0 P.M. ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > "time0" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2017 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which upper level elective classes next semester do not meet on Fridays ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = "N" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there an department0 number0 section not on Monday next semester ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.MONDAY = "N" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are there any advisory prerequisites for topic0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many of the prerequisites for department0 number0 have I met ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE ( AREAalias0.AREA LIKE "%topic0%" OR COURSEalias0.DESCRIPTION LIKE "%topic0%" OR COURSEalias0.NAME LIKE "%topic0%" ) AND ( AREAalias0.AREA LIKE "%topic1%" OR COURSEalias0.DESCRIPTION LIKE "%topic1%" OR COURSEalias0.NAME LIKE "%topic1%" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What 's the easiest class I can take to fulfill the requirement0 requirement ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What prerequisites do I still need to take in order to take department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.STUDENT_ID = 1 ) AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are there any level0 -level classes in Spring or Summer term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has taught , is teaching , or will teach department0 number0 ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many sections of department0 number0 are after 10 A.M. ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > "10:00:00" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professors teach department0 number0 in semester0 year0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there a credit0 -credit upper level class in semester0 year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.CREDITS = credit0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What upper-level department0 classes are offering this semester0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which department0 classes can be counted as requirement0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE "%department0%" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "%CS-LSA%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are any of the courses I 've taken area0 courses ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.CREDITS = credit0 AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Did Prof. instructor0 teach department0 number0 in semester0 year0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is there any section of department0 number0 that is between time1 and time0 ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.END_TIME , COURSE_OFFERINGalias0.SECTION_NUMBER , COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= "time0" AND COURSE_OFFERINGalias0.START_TIME >= "time1" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 a prerequisite for department0 number1 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What level0 -level classes are offered next semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>I need an easy department0 class .<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE "%department0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD < 3 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which classes are available this semester0 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME NOT LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What times is number0 taught during the semester0 terms ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.END_TIME , COURSE_OFFERINGalias0.FRIDAY , COURSE_OFFERINGalias0.MONDAY , COURSE_OFFERINGalias0.SATURDAY , COURSE_OFFERINGalias0.START_TIME , COURSE_OFFERINGalias0.SUNDAY , COURSE_OFFERINGalias0.THURSDAY , COURSE_OFFERINGalias0.TUESDAY , COURSE_OFFERINGalias0.WEDNESDAY FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER IN ( "SP" , "semester0" , "SS" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What upper level electives are offered before noon ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= "12:00:00" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which topic0 courses have no prerequisites ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "%CS-LSA%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has never taught department0 number0 ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What classes has Dr. instructor0 taught in the past ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSE_OFFERINGalias0.SEMESTER < ( SELECT SEMESTERalias0.SEMESTER_ID FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2016 ) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can department0 number0 be taken as requirement0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How long has department0 number0 been offered for ?<CODESPLIT>SELECT DISTINCT SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ORDER BY SEMESTERalias0.YEAR ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What 's my current GPA ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are some of the level0 / level1 -level department0 courses with the least workload ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%Core%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Name the department0 level0 -level course that have credit0 credits .<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 essential to my graduation ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND SEMESTERalias0.SEMESTER = "semester0" AND ( SELECT COUNT( DISTINCT SEMESTERalias1.SEMESTER ) FROM COURSE AS COURSEalias1 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias1 ON SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.COURSE_ID = COURSEalias1.COURSE_ID ) = 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which semester will number0 be offered next ?<CODESPLIT>SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = "WN" AND SEMESTERalias1.YEAR = 2016 ) ORDER BY SEMESTERalias0.SEMESTER_ID ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is number0 offered in the next 2 years ?<CODESPLIT>SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR IN ( 2016 , 2017 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 more difficult than department0 number1 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number1 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD < PROGRAM_COURSEalias1.WORKLOAD AND PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What grades have I gotten in courses taught by Prof. instructor0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE ( COURSEalias0.NUMBER = number0 OR COURSEalias0.NUMBER = number1 ) AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID ORDER BY PROGRAM_COURSEalias0.WORKLOAD DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What 's the hardest class ?<CODESPLIT>SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MAX( PROGRAM_COURSEalias1.WORKLOAD ) FROM COURSE AS COURSEalias1 , PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE COURSEalias1.COURSE_ID = PROGRAM_COURSEalias1.COURSE_ID AND COURSEalias1.DEPARTMENT = "department0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many times has Prof. instructor0 taught number0 ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 offered every semester ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT IN ( SELECT DISTINCT SEMESTERalias1.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of all the department0 number0 classes which ones are in the morning .<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 being offered next semester ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 only offered in the semester0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER <> "semester0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 always taught by either Prof. instructor0 or Prof. instructor1 ?<CODESPLIT>SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE ( INSTRUCTORalias0.NAME NOT LIKE "%instructor0%" AND INSTRUCTORalias0.NAME NOT LIKE "%instructor1%" ) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses will Prof. instructor0 be teaching over the next year ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When will topic0 be offered next ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = "N" AND COURSE_OFFERINGalias0.MONDAY = "Y" AND COURSE_OFFERINGalias0.THURSDAY = "N" AND COURSE_OFFERINGalias0.TUESDAY = "N" AND COURSE_OFFERINGalias0.WEDNESDAY = "Y" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches department0 number0 this semester0 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lecture sections are offered for department0 number0 next semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID WHERE COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has taught department0 number0 most recently ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.SEMESTER = ( SELECT MAX( SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 AND SEMESTERalias0.YEAR < 2016 ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me the requirements for a program0 degree .<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND NOT ( SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.YEAR = year0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has never taught department0 number0 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches upper-level classes ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who were the GSIs for department0 number0 last semester ?<CODESPLIT>SELECT DISTINCT STUDENTalias0.FIRSTNAME , STUDENTalias0.LASTNAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN GSI AS GSIalias0 ON GSIalias0.COURSE_OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = GSIalias0.STUDENT_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2015 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Will there be an topic0 misc0 this year ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.CREDITS = credit0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "ULCS" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many upper-level classes are credit0 credits ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.CREDITS = credit0 AND PROGRAM_COURSEalias0.CATEGORY LIKE "ULCS" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does department0 number0 have class on Friday ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.FRIDAY FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What department0 classes do not meet on Friday ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.FRIDAY = "N" AND COURSEalias0.DEPARTMENT = "department0" AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When Prof. instructor0 teaches number0 are there classes on Friday ?<CODESPLIT>SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = number0 AND COURSE_OFFERINGalias0.FRIDAY = "N" AND INSTRUCTORalias0.NAME LIKE "%instructor0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has department0 number0 ever been offered over the semester0 ?<CODESPLIT>SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.FRIDAY = "N" AND INSTRUCTORalias0.NAME LIKE "%instructor0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does department0 number0 have a lab when Prof. instructor0 teaches it ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE "%CS%" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which upper-level classes are credit0 credits ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.HAS_LAB = "Y" AND COURSEalias0.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which upper-level classes have projects but no exams ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.HAS_EXAMS = "N" AND COURSEalias0.HAS_PROJECTS = "Y" AND PROGRAM_COURSEalias0.CATEGORY LIKE "ULCS" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does department0 number0 have a lab when Prof. instructor0 teaches it ?<CODESPLIT>SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.HAS_EXAMS = "N" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 hard ?<CODESPLIT>SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.HAS_EXAMS = "N" AND INSTRUCTORalias0.NAME LIKE "%instructor0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Do all upper-level classes have exams ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.HAS_FINAL_EXAM FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.SEMESTER = ( SELECT MAX( SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias1.OFFERING_ID = COURSE_OFFERINGalias1.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 AND INSTRUCTORalias1.NAME LIKE "%instructor0%" AND SEMESTERalias0.YEAR < 2016 ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND INSTRUCTORalias0.NAME LIKE "%instructor0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the department0 classes I have to take to graduate as a CS major ?<CODESPLIT>SELECT DISTINCT COURSE_OFFERINGalias0.END_TIME , COURSE_OFFERINGalias0.FRIDAY , COURSE_OFFERINGalias0.MONDAY , COURSE_OFFERINGalias0.SATURDAY , COURSE_OFFERINGalias0.START_TIME , COURSE_OFFERINGalias0.SUNDAY , COURSE_OFFERINGalias0.THURSDAY , COURSE_OFFERINGalias0.TUESDAY , COURSE_OFFERINGalias0.WEDNESDAY FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE "%topic0%" AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches topic0 this semester ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE ( ( SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ) OR ( SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2017 ) ) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is department0 number0 hard ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many department0 classes are being offered next semester ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= "12:00:00" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many sections are there for department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT PROGRAM_COURSEalias0.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE "%requirement0%" ) ) AND COURSEalias0.NUM_ENROLLED = ( SELECT MAX( COURSEalias1.NUM_ENROLLED ) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT PROGRAM_COURSEalias2.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 WHERE PROGRAM_COURSEalias2.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias3.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias3 WHERE PROGRAM_COURSEalias3.CATEGORY = "requirement0" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average difficulty of requirement0 classes ?<CODESPLIT>SELECT AVG( PROGRAM_COURSEalias0.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches the easiest requirement0 course ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR , STUDENT_RECORDalias0.GRADE FROM COURSE AS COURSEalias0 , SEMESTER AS SEMESTERalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches courses that fulfill a requirement0 program requirement ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE PROGRAMalias0.NAME LIKE "%requirement0%" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has taught a course in which a student minoring in department0 has gotten an grade0 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID WHERE ( STUDENT_RECORDalias0.GRADE LIKE "%grade0%" OR STUDENT_RECORDalias0.GRADE LIKE "%grade0%" ) AND STUDENTalias0.MINOR = "department0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who taught department0 number0 when firstname0 lastname0 took it ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND STUDENTalias0.FIRSTNAME LIKE "firstname0" AND STUDENTalias0.LASTNAME LIKE "lastname0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the prereqs for the course where firstname0 lastname0 is the GSI ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN GSI AS GSIalias0 ON GSIalias0.COURSE_OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = GSIalias0.STUDENT_ID WHERE STUDENTalias0.FIRSTNAME LIKE "firstname0" AND STUDENTalias0.LASTNAME LIKE "lastname0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What area0 courses are offered in Spring or Summer year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 GROUP BY COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who teaches area0 courses ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE "%area0%" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What prerequisites for number0 are area0 courses ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE "%area0%" AND COURSEalias1.DEPARTMENT = "department0" AND COURSEalias1.NUMBER = number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are any of the courses I 've taken requirement0 courses ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has taught , is teaching , or will teach department0 number0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE "%area0%" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does number0 usually have 2 or 3 lectures a week ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.DERIVED_FIELDalias1 FROM ( SELECT AREAalias0.AREA AS DERIVED_FIELDalias0 , COUNT( * ) AS DERIVED_FIELDalias1 FROM AREA AS AREAalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE STUDENT_RECORDalias0.GRADE LIKE "grade0" AND STUDENT_RECORDalias0.STUDENT_ID = 1 GROUP BY AREAalias0.AREA ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias1 = ( SELECT COUNT( * ) AS DERIVED_FIELDalias2 FROM AREA AS AREAalias1 , STUDENT_RECORD AS STUDENT_RECORDalias1 WHERE STUDENT_RECORDalias1.COURSE_ID = AREAalias1.COURSE_ID AND STUDENT_RECORDalias1.GRADE LIKE "grade0" AND STUDENT_RECORDalias1.STUDENT_ID = 1 GROUP BY AREAalias1.AREA ORDER BY DERIVED_FIELDalias2 DESC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What grades have I gotten in courses taught by Prof. instructor0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = "department0" AND SEMESTERalias0.SEMESTER = "semester0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which department is topic0 in ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE "%topic0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which department0 classes can be counted as requirement0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MAX( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 INNER JOIN COURSE AS COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = "department0" ) AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of the courses I 've taken , which is considered the hardest ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MAX( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = PROGRAM_COURSEalias1.COURSE_ID WHERE STUDENT_RECORDalias1.STUDENT_ID = 1 ) AND STUDENT_RECORDalias0.STUDENT_ID = 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Does department0 number0 have morning classes ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>I need to leave for work at 5:00 every day , so if I take number0 and number1 , can I do that ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = "N" AND COURSE_OFFERINGalias0.MONDAY = "Y" AND COURSE_OFFERINGalias0.THURSDAY = "N" AND COURSE_OFFERINGalias0.TUESDAY = "N" AND COURSE_OFFERINGalias0.WEDNESDAY = "Y" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What area0 courses are offered in Winter or Fall year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE ( ( SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ) OR ( SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2017 ) ) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take level0 -level classes in the Spring or Summer term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What courses does Prof. instructor0 teach in semester0 year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE ( ( SEMESTERalias0.SEMESTER = "FA" AND SEMESTERalias0.YEAR = 2016 ) OR ( SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.YEAR = 2017 ) ) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the prereqs for the course where firstname0 lastname0 is the GSI ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = "EECS" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%ULCS%" AND SEMESTERalias0.SEMESTER IN ( "SP" , "SS" , "SU" ) AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What courses offered in Fall or Winter meet the requirement0 requirement ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND SEMESTERalias0.SEMESTER IN ( "FA" , "WN" ) AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me topic0 courses of credit0 credits .<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND PROGRAM_COURSEalias0.CATEGORY LIKE "%requirement0%" AND PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND SEMESTERalias0.SEMESTER IN ( "FA" , "WN" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What courses offered in Spring or Summer meet the requirement0 requirement ?<CODESPLIT>SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias2 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID < OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID < OFFERING_INSTRUCTORalias2.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias1.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID AND OFFERING_INSTRUCTORalias2.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are there any level0 -level classes in Fall or Winter term ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "FA" , "WN" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many level0 -level classes are being offered in Spring and Summer term ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE "%topic0%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professors teach department0 number0 in semester0 year0 ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID , SEMESTERalias0.SEMESTER ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "FA" , "WN" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can I take department0 number0 over the semester0 ?<CODESPLIT>SELECT COUNT( * ) > 0 FROM ( SELECT STUDENT_RECORDalias0.COURSE_ID FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.EARN_CREDIT = "Y" AND STUDENT_RECORDalias0.STUDENT_ID = 1 ) AS DERIVED_TABLEalias0 , COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) AND COURSEalias0.COURSE_ID NOT IN ( SELECT DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID NOT IN ( DERIVED_TABLEalias0.COURSE_ID ) ) AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER = number0 AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What area0 courses are offered in Winter or Fall year0 ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE "%area0%" AND SEMESTERalias0.SEMESTER IN ( "WN" , "FA" ) AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>During the semester0 year0 will the department0 number0 class be available ?<CODESPLIT>SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE "%instructor0%" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = "semester0" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many upper-level classes are credit0 credits ?<CODESPLIT>SELECT COUNT( DISTINCT COURSE_PREREQUISITEalias0.COURSE_ID ) , COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND SEMESTERalias0.SEMESTER = "WN" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 GROUP BY COURSE_PREREQUISITEalias0.PRE_COURSE_ID ORDER BY COUNT( COURSE_PREREQUISITEalias0.COURSE_ID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many level0 -level classes are being offered in Fall and Winter term ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NAME , COURSEalias0.NUMBER , SEMESTERalias0.SEMESTER ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = "department0" AND COURSEalias0.NUMBER BETWEEN level0 AND level0 + 100 AND SEMESTERalias0.SEMESTER IN ( "FA" , "WN" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 ;