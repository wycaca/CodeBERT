1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the flights that arrive at airport_code0 from various cities<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights leaving city_name1 month_number0 day_number0 coming back to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most expensive one way fare from city_name0 to city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many of airline_code0 's night flights are class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please give me information concerning airline_code0 a flight from city_name1 to city_name0 the earliest one in the morning as possible<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares for flights between city_name0 and airport_code0 provided by airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to see flights from city_name0 to city_name1 that arrive before arrival_time0 and i'd like to see flights from city_name2 to city_name1 that arrive before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name1 to city_name0 on saturday morning on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights between city_name2 and either city_name0 or city_name1 that depart between departure_time1 and departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_code0 fly from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the airline_code0 flights from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a airline_code0 flight from city_name2 to city_name0 with a stopover in city_name1 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any nonstop flights leaving from city_name1 arriving in city_name0 on month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND DATE_DAYalias1.YEAR = year0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.DAY_NUMBER = day_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how can i get from city_name1 to city_name0 and back in the same day and have the most hours on the ground in city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any flights between city_name1 and city_name0 using a aircraft_code0 aircraft<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.AIRCRAFT_CODE = "aircraft_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what does meal_code0 stand for for meals<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_DESCRIPTION , FOOD_SERVICEalias0.MEAL_NUMBER FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE FOOD_SERVICEalias0.MEAL_CODE = "meal_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights from city_name1 to city_name0 returning on tuesday month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a round trip flight from city_name1 to city_name0 on wednesday month_number0 day_number0 arriving at arrival_time0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a flight between city_name3 and city_name2 with a stopover at city_name0 city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the takeoffs and landings at airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE AND AIRPORTalias1.AIRPORT_CODE = "airport_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of aircraft is used on the class_type0 class airline_code0 flight from city_name2 to city_name1 with a city_name0 stopover<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 to city_name0 thursday evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much is a class_type0 class ticket from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code2" ) ) AND ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in city_name0 city_name1 i would like information on ground transportation<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like flights on airline_code0 from city_name0 philadelphia to city_name1 arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly from city_name0 to city_name1 what airlines fly from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airlines from city_name0 state_code0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the lowest round trip fare from city_name0 to any city<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND CITYalias1.STATE_CODE = "state_code0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the code for class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of a round trip flight from city_name1 to city_name0 beginning on month_number0 day_number0 and returning on may sixth<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a flight from city_name1 to city_name0 leaving at departure_time0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any nonstop flights from city_name1 to city_name0 that arrive before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to fly nonstop from city_name1 to city_name0 and get there at arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me day_name0 nonstop flights from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the type of aircraft for airline_code0 flight flight_number0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you give me information on transportation from the airport in city_name0 to downtown city_name0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare going from city_name1 to city_name0 one way on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on airline_code0 how many flights leaving city_name1 on month_number0 day_number0 to city_name0 nonstop<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find travel arrangements for a round trip flight from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights do you have from city_name0 to city_name1 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines have flight_days0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_CODE = "state_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me airline abbreviations<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the available flights from city_name1 to city_name0 with economy fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is fare code fare_basis_code0 the same as booking_class0 class<CODESPLIT>SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BOOKING_CLASS = "booking_class0" AND FARE_BASISalias0.FARE_BASIS_CODE = "fare_basis_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me the flights that are nonstop between city_name1 and city_name0 that leave between departure_time1 and departure_time0 in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( FAREalias1.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need to spend much of a day on the ground in city_name0 find me an early flight from city_name1 and the lastest possible flight back from city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all airline_code0 class_type0 class flights<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>latest flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight tonight from city_name2 to city_name1 with a stop in city_name0 and i want meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the one way flight from city_name0 to city_name1 with the highest fare<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show flights class_type0 class on airline_code0 from city_name0 to airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the day_number0 flight into city_name0 from city_name1 on month_number0 day_number0 and the last flight from city_name0 to city_name1 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show all day_name0 morning flights from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the early weekday flights from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( DAYSalias3.DAY_NAME = "day_name0" AND DAYSalias4.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias4.DAYS_CODE ) AND DAYSalias2.DAY_NAME = "day_name2" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias2.DAYS_CODE ) AND DAYSalias1.DAY_NAME = "day_name3" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND DAYSalias0.DAY_NAME = "day_name4" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to know what type of aircraft will be used on the morning of month_number0 day_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show flights from city_name1 to city_name0 that arrive before arrival_time0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many passengers can a manufacturer0 basic_type0 hold<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND AIRCRAFTalias0.MANUFACTURER = "manufacturer0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 state_name1 to city_name0 state_name0 leaving this sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>ground transportation city_name0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>ground transportation please in the city of airport_code0 between airport and downtown<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights departing from airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly from city_name0 to city_name1 on airline_code0 at the latest time possible in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>class_type0 class from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the distance from airport_code0 airport to city_name0<CODESPLIT>SELECT DISTINCT AIRPORT_SERVICEalias0.MILES_DISTANT FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do you have an afternoon flight leaving in the afternoon going from city_name2 to city_name0 with a stopover in city_name1<CODESPLIT>SELECT DISTINCT AIRPORTalias0.MINIMUM_CONNECT_TIME FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a ticket on a plane from city_name0 to city_name1 i would like a class_type0 class or lowest fare ticket<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) OR FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please tell me the cheapest fare from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like an early morning flight from city_name1 into city_name0 on month_number0 day_number0 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of airline is flight airline_code0 flight_number0 from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airline has the smallest plane leaving city_name1 and arriving in city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest one way fare between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights from city_name0 to city_name1 and from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a nonstop flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airline_code0 flights to city_name0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights do you have from city_name2 state_name1 to city_name1 state_name0 that connect in city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the first flight after departure_time0 from city_name1 for city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias1.DEPARTURE_TIME = departure_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.CONNECTIONS > connections0 AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what do you have going from city_name1 to city_name0 serving meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from city_name1 to city_name0 on thursday morning nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list round trip flights between city_name1 and city_name0 using airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_STOPalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights city_name1 to city_name0 on thursday arrival by arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is days_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to find flights from city_name1 to city_name0 after departure_time0 o'clock on monday june fourteenth please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me one way flights from city_name1 to city_name0 departing before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) OR ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias2.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias2 WHERE ( ( FLIGHTalias2.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = "city_name1" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name1 to city_name0 arrive next saturday before arrival_time1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what does fare code fare_basis_code0 mean<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>okay for now i would like information on a flight on month_number0 day_number0 from city_name1 to city_name0 leaving early in the morning about departure_time3 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights to city_name0 after 12pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airlines fly from city_name2 to city_name0 by way of city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need an early flight from city_name1 to city_name0 please and i would like meal_description0 served on that<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all direct flights from city_name1 to city_name0 departing before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights from city_name1 to city_name0 on sunday and the flights from city_name2 to city_name0 on sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name1 to city_name0 arriving between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights departing from airport_code0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what round trip flights between city_name1 and city_name0 qualify for fare code fare_basis_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like an afternoon flight from city_name2 to city_name1 with a stopover in city_name0 arriving i'd say about mealtime<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want a flight from city_name1 to city_name0 that at least has stops0 stop<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the restriction_code0 restriction<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 to city_name0 which will get me into city_name0 by arrival_time0 or as soon thereafter as possible<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>okay that one 's great too now we're going to go on month_number0 day_number0 city_name1 to city_name0 the latest nighttime departure one way<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights from city_name1 to city_name0 on wednesday evening or day_name0 mornings<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what do you have tomorrow morning from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do you have a night flight from city_name1 to city_name0 on month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time2 AND departure_time3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name1 to city_name0 on saturday morning on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flight from city_name1 to city_name0 that departs 9 hours before arriving<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE ( CITYalias3.CITY_NAME = "city_name1" AND CITYalias3.STATE_CODE = "state_code0" ) ) ) ) AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name1" AND CITYalias1.STATE_CODE = "state_code0" ) ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flight from city_name0 to city_name1 arrives earliest in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>let 's see how much would a direct flight from city_name1 to city_name0 be on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , STATE AS STATEalias2 , STATE AS STATEalias3 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND STATEalias2.STATE_CODE = CITYalias2.STATE_CODE AND STATEalias2.STATE_NAME = "state_name0" AND STATEalias3.STATE_CODE = CITYalias3.STATE_CODE AND STATEalias3.STATE_NAME = "state_name1" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me round trip fares between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE , GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airlines fly from city_name2 to city_name0 by way of city_name1<CODESPLIT>SELECT COUNT( DISTINCT AIRLINEalias0.AIRLINE_CODE ) FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airline_code0 flight_number0 city_name1 to city_name0 what is the fare<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights and fares on month_number0 day_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a list of the round trip flights between city_name1 and city_name0 on the day_number0 or the day_number1 of month_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ) AND FAREalias1.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the flights from city_name1 to city_name0 that return around 7pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the latest afternoon flight departing city_name1 and arriving in city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which flight from city_name0 to city_name1 carries the smallest number of passengers<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to see the flight_days0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights direct only from city_name2 to city_name0 or city_name1 that arrive before arrival_time0 local time<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>round trip fares from city_name0 to city_name1 less than round_trip_cost0 dollars<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.BASIC_TYPE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRLINE AS AIRLINEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRLINEalias0.AIRLINE_NAME LIKE "airline_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights arriving in city_name0 monday evening from city_name1 that class_type0 class<CODESPLIT>SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.FARE_BASIS_CODE = "fare_basis_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>may i have a listing of flights from city_name0 to city_name1 state_name0 departing in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.COUNTRY_NAME = "country_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me information on a flight on month_number0 day_number0 from city_name1 to city_name0 as early as possible<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flight_days0 flights of airline_code0 from city_name1 to city_name0 with class_type0 class service<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>a class_type0 class flight on airline_code0 to city_name0 on tuesday in the next week<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights from city_name1 city_name2 to city_name0 that arrive between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there an airline that advertises having more flights than any other airline<CODESPLIT>SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.AIRLINE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights which leave city_name1 tomorrow and arrive in city_name0 after arrival_time0 o'clock pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights on airline_code0 and airline_code1 that go to city_name0 in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show all day_name0 morning flights from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what type of aircraft is used on the first flight from city_name0 to city_name1 in the morning<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me flights from city_name0 to city_name1 on airline_code0 that offer class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can i take a single airline from city_name2 to city_name0 to city_name1 back to city_name2<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name2" AND FLIGHTalias1.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias2.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the round trip fare on airline_code0 flight_number0 from city_name1 to city_name0 and return<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>and how much does it cost to travel from airport_code0 airport to downtown<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest class_type0 fare from city_name0 to city_name1 round trip<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lowest one way fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a nonstop flight from city_name1 to city_name0 that gets in around 7pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>only show airline_code0 flights<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the class_type0 flights between city_name1 and city_name0 leaving month_number0 day_number0 and returning month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name0 month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me all nonstops from city_name1 to city_name0 that arrive on a day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long does it take to get from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please give me information concerning airline_code0 a flight from city_name1 to city_name0 the earliest one in the morning as possible<CODESPLIT>SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE GROUP BY FLIGHTalias0.AIRLINE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares for flights from city_name1 to city_name0 on tuesday and wednesday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights both direct and connecting from city_name0 to either city_name1 or oakland that depart after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the nonstop flights from city_name1 to city_name0 leaving after departure_time0 and arriving before arrival_time0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the latest afternoon flight i can get from city_name1 to city_name0 on class_type0 class<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airline_code0 flight flight_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_name0 airlines fly from city_name2 to city_name0 city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are currently available between city_name2 and city_name0 city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are snacks served on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name1 to city_name0 on friday with meal_description0 served<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>class_type0 class airline_code0 flight from city_name1 to city_name0 on wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flight goes from city_name1 to city_name0 class_type0 class on airline_code0 arriving on month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FARE_BASIS AS FARE_BASISalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) OR ( ( DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>morning flights out of city_name1 arriving city_name0 afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name2 to city_name1 with a stop in city_name0 on a meal_description0 flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias2.STATE_CODE = "state_code0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me flight schedules from city_name0 to city_name1<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the nonstop flights from city_name1 to city_name0 arriving on saturday month_number0 day_number0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 to city_name0 and i don't want any stopovers and i'd like to fly only during the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND ( FLIGHTalias0.STOPS = stops0 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me a list of all the airlines that offer class_type0 class service<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE ( ( AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias1.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name1" ) ) ) ) AND AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias2.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias2 WHERE ( FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = "city_name1" ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = "city_name2" ) ) ) ) ) AND AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias0.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name2" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where do the flights from city_name0 to city_name1 stop<CODESPLIT>SELECT DISTINCT FLIGHT_STOPalias0.STOP_AIRPORT FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>when do planes leave city_name0 for city_name1<CODESPLIT>SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BOOKING_CLASS = "booking_class0" AND FARE_BASISalias0.FARE_BASIS_CODE = "fare_basis_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what time are the flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which cities does airline_code0 service<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights to city_name0 in the evening<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is your last trip on month_number0 day_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what type of aircraft is used for the airline_code0 flight leaving at departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the distance between city_name0 airport and downtown city_name0<CODESPLIT>SELECT DISTINCT AIRPORT_SERVICEalias0.MILES_DISTANT FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do i get a meal on the city_name0 to airport_code0 flight airline_code0 flight_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from airport_code1 to airport_code0 on month_number0 day_number0 year0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( AIRPORTalias1.AIRPORT_CODE = "airport_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are there from city_name1 to city_name0 flight_days0 with economy class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias2 , AIRPORT AS AIRPORTalias3 , FLIGHT AS FLIGHTalias1 WHERE AIRPORTalias2.AIRPORT_CODE = "airport_code0" AND AIRPORTalias3.AIRPORT_CODE = "airport_code1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORTalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias3.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what nonstop flights between city_name1 and city_name0 leave city_name1 after departure_time0 o'clock pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the schedule for airlines leaving city_name1 going to city_name0 for next monday<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE FOOD_SERVICEalias0.MEAL_CODE IN ( SELECT FLIGHTalias0.MEAL_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any airline_code0 flights flying into city_name0 between arrival_time1 and arrival_time0 in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there an airline that has a flight from city_name2 to city_name0 with a stop in city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on tuesday i'd like to find a flight from city_name1 to city_name0 that arrives before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to know the latest flight on wednesday you have leaving from city_name1 to city_name0 which offers a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare on the first flight from city_name1 to city_name0 on thursday morning<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.BASIC_TYPE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_CODE IN ( SELECT EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE FROM EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE IN ( SELECT FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the airlines that use airport_code0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>looking for a flight from state_code0 to city_name0 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias6.DAYS_CODE FROM DAYS AS DAYSalias6 WHERE DAYSalias6.DAY_NAME = "day_name0" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias3.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias3 WHERE FLIGHT_FAREalias3.FARE_ID IN ( SELECT FAREalias3.FARE_ID FROM FARE AS FAREalias3 WHERE ( FAREalias3.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias3.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias3 WHERE FARE_BASISalias3.BASIS_DAYS IN ( SELECT DAYSalias7.DAYS_CODE FROM DAYS AS DAYSalias7 WHERE DAYSalias7.DAY_NAME = "day_name0" ) ) AND FAREalias3.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias8.DAYS_CODE FROM DAYS AS DAYSalias8 WHERE DAYSalias8.DAY_NAME = "day_name1" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias4.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias4 WHERE FLIGHT_FAREalias4.FARE_ID IN ( SELECT FAREalias4.FARE_ID FROM FARE AS FAREalias4 WHERE ( FAREalias4.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias4.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias4 WHERE FARE_BASISalias4.BASIS_DAYS IN ( SELECT DAYSalias9.DAYS_CODE FROM DAYS AS DAYSalias9 WHERE DAYSalias9.DAY_NAME = "day_name1" ) ) AND FAREalias4.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias4.DAYS_CODE FROM DAYS AS DAYSalias4 WHERE DAYSalias4.DAY_NAME = "day_name2" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias2.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE FLIGHT_FAREalias2.FARE_ID IN ( SELECT FAREalias2.FARE_ID FROM FARE AS FAREalias2 WHERE ( FAREalias2.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias2.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias2 WHERE FARE_BASISalias2.BASIS_DAYS IN ( SELECT DAYSalias5.DAYS_CODE FROM DAYS AS DAYSalias5 WHERE DAYSalias5.DAY_NAME = "day_name2" ) ) AND FAREalias2.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME = "day_name3" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias1.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FARE_ID IN ( SELECT FAREalias1.FARE_ID FROM FARE AS FAREalias1 WHERE ( FAREalias1.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME = "day_name3" ) ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = "day_name4" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME = "day_name4" ) ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does the city_name0 airport have a name<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the itinerary of the connecting flight from city_name1 to city_name0 that departs city_name1 at departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airlines fly from city_name2 to city_name0 by way of city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code2" ) ) AND ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the latest flight to airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cheapest one way flights between city_name1 and city_name0 which arrive after arrival_time0 on a day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does any airline have a propulsion0 flight between city_name1 and city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest flight from city_name1 to city_name0 leaving on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a round trip flight from city_name1 to city_name0 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the latest flight tomorrow on airline_code0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to leave city_name1 and arrive in city_name0 at arrival_time0 o'clock in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the total schedule for airline_code0 's flights to all airports<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there an airline that has a flight from city_name2 to city_name0 with a stop in city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a nonstop flight from city_name1 to city_name0 that serves meal_description0 what 's available<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do you have an afternoon flight leaving in the afternoon going from city_name2 to city_name0 with a stopover in city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there transport_type0 service available at city_name0 airport<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show flights and fare information from city_name2 connecting through city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the type of aircraft that airline_code0 uses<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lowest one way fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find travel arrangements for a round trip flight from city_name1 to city_name0 after departure_time1 o'clock pm before departure_time0 o'clock pm<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , DAYS AS DAYSalias5 , DAYS AS DAYSalias6 , DAYS AS DAYSalias7 , DAYS AS DAYSalias8 , DAYS AS DAYSalias9 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FARE_BASIS AS FARE_BASISalias4 , FARE_BASIS AS FARE_BASISalias5 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( ( ( ( ( ( DAYSalias8.DAY_NAME = "day_name0" AND DAYSalias9.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias8.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias9.DAYS_CODE ) AND DAYSalias7.DAY_NAME = "day_name2" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias7.DAYS_CODE ) AND DAYSalias6.DAY_NAME = "day_name3" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias6.DAYS_CODE ) AND DAYSalias5.DAY_NAME = "day_name4" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias5.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DAYSalias4.DAY_NAME = "day_name1" AND FARE_BASISalias5.BASIS_DAYS = DAYSalias4.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias5.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DAYSalias3.DAY_NAME = "day_name0" AND FARE_BASISalias4.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias4.FARE_BASIS_CODE ) AND DAYSalias2.DAY_NAME = "day_name2" AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE ) AND DAYSalias1.DAY_NAME = "day_name3" AND FARE_BASISalias2.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) AND DAYSalias0.DAY_NAME = "day_name4" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>great now what i want to find out is on month_number0 day_number0 from city_name0 to city_name1 do you have a flight least expensive fare around 5 o'clock in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly to city_name1 for under one_direction_cost0 dollars please show me the airfares between city_name0 and city_name1<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the cheapest flights from city_name1 to city_name0 arriving on month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name2 to city_name1 with a stop in city_name0 on a meal_description0 flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is fare code booking_class0<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the earliest nonstop flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me all flights from city_name1 to city_name0 that arrive on a day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines fly into and out of city_name0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines have flight_days0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 OR FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights does airline_code0 have with a class of service code fare_basis_code0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND NOT ( AIRLINEalias0.AIRLINE_NAME LIKE "airline_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the ground transportation from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_NAME = "city_name1" AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights for airline_code0 on month_number0 day_number0 in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights both direct and connecting to either city_name0 or city_name1 from city_name2 that arrive before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you please tell me the type of aircraft used flying from city_name1 to city_name0 on airline_code0 flight flight_number0 leaving at departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flight_days0 flights from city_name1 to city_name0 with class_type0 class service<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights and fares on month_number0 day_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 on airline_code0 departing at departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.STOPS = stops0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find travel arrangements for a round trip flight from city_name1 to city_name0 arriving after arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are available with fare_basis_code0 fares from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me airline_code0 flights leaving city_name0 on saturday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airline_code0 flights leave from city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name1 to city_name0 leaving day_name0 and day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares between city_name1 and city_name0 on monday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias4.DAYS_CODE ) AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias2.DAYS_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show me flights available from city_name1 to city_name0 on a weekday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airline has the most class_type0 class flights<CODESPLIT>SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID GROUP BY FLIGHTalias0.AIRLINE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 to city_name0 next wednesday arriving in the evening and returning the next day<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights between city_name1 and city_name0 state_name0 which leave after departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in city_name0 i'd like to transport_type0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me a list of flights from city_name1 to city_name0 leaving after departure_time0 and arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name0 on sunday on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me economy fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many class_type0 class flights does airline_code0 have leaving from all cities today<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights stop in city_name0 before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which cities does airline_code0 service<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in city_name0 i'd like to transport_type0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to see all the flights with their fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID , FLIGHTalias0.AIRLINE_CODE , FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of aircraft is used on the class_type0 class airline_code0 flight from city_name2 to city_name1 with a city_name0 stopover<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flight classes for airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show me airline_code0 nonstop flights between city_name1 and city_name0 departing around 5 in the evening<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please find a flight from city_name2 to city_name1 that makes a stop in city_name0 on month_number0 day_number0 one way with meal_description0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the schedule of flights from city_name1 to city_name0 for month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do you have any flights from city_name3 to city_name0 city_name1 that stop over in city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name3" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest departure time from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to fly from city_name0 to city_name1 tomorrow morning as early as possible what 's available<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND ( FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest class_type0 class fare from city_name1 to city_name0 on airline_code0 on month_number0 day_number0<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is a trip from city_name0 airport to downtown city_name0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the last flight out of city_name1 to city_name0 in the evening on day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias2.STATE_CODE = "state_code0" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 round trip less than round_trip_cost0 dollars<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could i have listings of flights from city_name1 to city_name0 country_name0 leaving on wednesday<CODESPLIT>SELECT DISTINCT AIRPORT_SERVICEalias0.MINUTES_DISTANT FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which flight from city_name0 to city_name1 carries the smallest number of passengers<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( FLIGHTalias1.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias1.FLIGHT_NUMBER = flight_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT AS FLIGHTalias3 , FLIGHT_FARE AS FLIGHT_FAREalias1 , FLIGHT_LEG AS FLIGHT_LEGalias1 WHERE ( ( FLIGHTalias3.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias3.FLIGHT_NUMBER = flight_number1 ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias2.FLIGHT_ID = FLIGHT_LEGalias1.FLIGHT_ID AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias3.AIRLINE_CODE = "airline_code0" AND FLIGHTalias3.FLIGHT_ID = FLIGHT_LEGalias1.LEG_FLIGHT ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights does airline_code0 have from city_name1 to city_name0 after departure_time0 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what does the fare code fare_basis_code0 and fare_basis_code1 mean<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_AIRLINE , FAREalias0.FARE_BASIS_CODE , FAREalias0.FARE_ID , FAREalias0.FROM_AIRPORT , FAREalias0.ONE_DIRECTION_COST , FAREalias0.RESTRICTION_CODE , FAREalias0.ROUND_TRIP_COST , FAREalias0.ROUND_TRIP_REQUIRED , FAREalias0.TO_AIRPORT FROM FARE AS FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" OR FAREalias0.FARE_BASIS_CODE = "fare_basis_code1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i am looking to get one air fare from city_name1 to city_name0 on a basic_type0 leaving month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 flights from city_name1 to city_name0 which arrive on wednesday after arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the least expensive flight leaving city_name1 on sunday after departure_time0 and arriving city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.DEPARTURE_TIME > departure_time0 AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are between airport_code0 and city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.BASIC_TYPE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>may i please see airlines and flight numbers from city_name1 to city_name0 on the same date month_number0 day_number0 also arriving in city_name0 before arrival_time0 thank you<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a list of the flights from city_name2 to city_name0 city_name1 on sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list fares for all the flights from city_name1 to city_name0 on month_number0 the day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines fly from city_name0 to city_name1 state_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare from city_name0 to city_name1 class_type0 class one way<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 OR FLIGHTalias0.DEPARTURE_TIME = departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the nonstop flights from city_name1 to city_name0 on a day_name0 along with the fares that are less than one_direction_cost0 dollars<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the earliest morning flight from city_name1 to city_name0 on wednesday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what fare codes cover flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me class_type0 class round trip flights from city_name0 to city_name1 i want the cheapest class_type0 class fare please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the flights arriving in city_name0 from city_name1 before arrival_time0 on month_number0 day_number1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much does it cost to fly from city_name1 to city_name0 on a day_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list nonstop airline_code0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight in the morning from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight arriving in city_name0 from city_name1 on friday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( ( ( FLIGHTalias1.DEPARTURE_TIME > FLIGHTalias1.ARRIVAL_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) OR ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias1.DEPARTURE_TIME > FLIGHTalias1.ARRIVAL_TIME ) ) ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you list all nonstop flights between city_name1 and city_name0 that leave in the afternoon and arrive soon after arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the nonstop flights from city_name1 to city_name0 arriving on saturday month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flight_days0 flights from city_name1 to city_name0 departing departure_time0 o'clock pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flight_days0 flights between city_name1 and city_name0 as well as city_name1 and city_name0 using airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR NOT ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name2 after departure_time0 and go to city_name0 city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which are the flights from city_name2 to city_name0 or city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias2.STATE_CODE = "state_code0" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are all the available meals<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>economy fares city_name0 to city_name1 round trip<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me city served both by airline_code0 and airline_code1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly from city_name0 to city_name1 on airline_code0 at the latest time possible in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are all the available meals<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 flights from city_name1 to city_name0 that arrive in city_name0 between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a airline_code0 flight from city_name1 to city_name0 arriving around noon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most expensive flight from city_name0 to city_name1 round trip<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MAX( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of a round trip ticket flying from city_name2 to city_name0 dallas to city_name1 leaving month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list all flights into city_name0 before arrival_time0 on airline_code1 and airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airlines have flights with service class fare_basis_code0<CODESPLIT>SELECT COUNT( DISTINCT AIRLINEalias0.AIRLINE_CODE ) FROM AIRLINE AS AIRLINEalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what're the cheapest nonstop flights from city_name0 to city_name1 one way<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.STOPS = stops0 ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airline_code0 flight_number0 leaving city_name1 at departure_time0 what is the arrival time in city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights from city_name0 state_name0 to city_name1 that are the cheapest one way<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines have class_type0 class flights today<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the flights from city_name1 to city_name0 arriving after lunch time<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list airports in state_name2 state_name1 and state_name0 please<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to find a flight from city_name1 to city_name0 on airline_code0 and arriving at about 8 o'clock in the evening could you please tell me the aircraft and the flight number thank you<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long does it take to get from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many fare codes belong to economy class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare from city_name0 to city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines fly from city_name1 to city_name0 via other cities<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there an city_name0 flight to city_name1 connecting<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>yes on the airline_code0 flight leaving city_name1 at departure_time0 arriving city_name0 arrival_time0 what type of equipment is used on that flight<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i am interested in booking an early flight from city_name0 into city_name1 and returning in the late evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights from city_name1 to city_name0 for tomorrow night or evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.STOPS > stops0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does any airline have an afternoon flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where does flight airline_code0 flight_number0 from city_name1 to city_name0 stop<CODESPLIT>SELECT DISTINCT FLIGHT_STOPalias0.STOP_AIRPORT FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the least expensive airfare flight on sunday to city_name0 from city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are available on airline_code0 from city_name1 to city_name0 on monday morning<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest meal_description0 flight from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need the cheapest direct flight from city_name0 to city_name1 leaving on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.TIME_ELAPSED FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the number of flights leaving city_name2 for city_name0 city_name1 before departure_time0 in the morning<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = "airline_code0" AND AIRLINEalias0.AIRLINE_NAME LIKE "airline_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all direct flights from city_name1 to city_name0 departing before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( ( FLIGHTalias0.CONNECTIONS > connections0 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me the latest return flight from city_name1 to city_name0 on the same day<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights does airline_code0 have from city_name1 to city_name0 after departure_time0 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 and arrive in city_name0 after arrival_time1 on thursday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display types of aircraft departing from city_name1 to city_name0 before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list any flight available leaving city_name1 california tuesday arriving city_name0 wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave airport_code0 for city_name0 and arrive arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>tell me about flights leaving from city_name1 and going to city_name0 state_name0 next monday i need to know about flights that arrive in city_name0 between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time2 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest one way fare from any city to another<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DAYSalias0.DAY_NAME = "day_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights arriving in city_name0 monday evening from city_name1 that class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does flight airline_code0 flight_number0 from city_name1 to city_name0 fly on day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to know the time of the latest flight i can take from city_name1 to city_name0 where i can get a meal_description0 meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of airplane is flight airline_code0 flight_number0 from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 using basic_type0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me flights from city_name1 to city_name0 on wednesday and thursday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the flights that leave city_name1 and arrive in city_name0 by arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>of all airlines which airline has the most arrivals in city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DAYSalias0.DAY_NAME = "day_name0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name1 to city_name0 arrive next saturday before arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 flights from city_name1 to city_name0 which arrive on wednesday after arrival_time1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>round trip fares from city_name0 to city_name1 less than round_trip_cost0 dollars<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list nonstop airline_code0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the flights available from city_name1 to city_name0 arriving in city_name0 on arrival_time0 o'clock wednesday morning on or by arrival_time0 o'clock wednesday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights arriving in city_name0 around 5pm next monday please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airports does city_name0 have<CODESPLIT>SELECT COUNT( DISTINCT AIRPORTalias0.AIRPORT_CODE ) FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to leave from city_name0 on tuesday and i'd like to leave sometime in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights depart city_name2 after departure_time0 and fly to city_name1 via city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_name0 airlines fly from city_name2 to city_name0 city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list airline_code0 flights from city_name1 to city_name0 on day_name0 or day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the fare on the airline_code0 flight_number0 from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name2 arrive in city_name0 city_name1 before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>okay i need to see economy flights on airline_code0 between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much does it cost to fly directly from city_name0 to city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.CONNECTIONS = connections0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights on month_number0 day_number0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the least expensive class_type0 class flight between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias2.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias2 , FARE AS FAREalias3 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias2 , FLIGHT_FARE AS FLIGHT_FAREalias3 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias3.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias2.FARE_ID AND FLIGHT_FAREalias3.FARE_ID = FAREalias3.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias3.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the cheapest fares from city_name1 to city_name0 leaving on day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cheapest round trip flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the flights from city_name1 to city_name0 on a day_name0 which are nonstop and cost less than round_trip_cost0 dollars<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , STATE AS STATEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on flight airline_code0 flight_number0 from city_name1 to city_name0 what time and what city does the plane stop in between<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_CODE , FLIGHT_STOPalias0.ARRIVAL_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>class_type0 class from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you tell me the cheapest fare from city_name1 to city_name0 on day_number0 of month_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name3" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list fares for all the flights from city_name1 to city_name0 on month_number0 the day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name0 to airport_code0 departing after departure_time0 airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display all fare codes<CODESPLIT>SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to go from city_name2 to city_name0 round trip and make a stop at city_name1 may i have the cheapest fare<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_CODE = "aircraft_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the schedule of ground transportation from the airport in city_name0 into downtown<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any propulsion0 flights from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRCRAFTalias0.PROPULSION = "propulsion0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>from city_name1 to city_name0 on airline_code0 arrive around 8pm tomorrow<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines have class_type0 class flights today<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 at departure_time0 and arrive in city_name0 at arrival_time0 in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name2 to city_name0 to city_name1 on monday july eighth<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you transport_type0 at airport_name0 airport in city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the cheapest one way flight from city_name1 to city_name0 leaving city_name1 after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name3" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the least expensive flight available from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = "day_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name0 month_number0 day_number0 after departure_time0 and arrive in city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias0.STATE_CODE = "state_code1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need to go to city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you give me the schedule of flights for airline_code0 and airline_code1 to airport_code0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT AS AIRPORTalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( ( FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias1.AIRLINE_CODE = "airline_code1" ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a list of round trip flights between city_name1 and city_name0 state_name0 for the day_number0 and the day_number1 of month_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 , STATE AS STATEalias0 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ) AND FAREalias1.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could i have listings of flights from city_name1 to city_name0 country_name0 leaving on wednesday<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the arrival time in city_name0 for the departure_time0 flight leaving city_name1<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all nonstop flights on wednesday from city_name1 to city_name0 before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights on sunday from city_name1 to city_name0 and list nonstop flights on sunday from city_name2 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a to know the type of aircraft leaving from city_name1 bound to city_name0 on friday this week<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias0.FLIGHT_NUMBER = flight_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the flight from city_name1 to city_name0 at departure_time0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are there from city_name1 to city_name0 flight_days0 with economy class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me day_name0 nonstop flights from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS > connections0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i am interested in booking an early flight from city_name0 into city_name1 and returning in the late evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on tuesday what flights leave city_name1 to city_name0 state_name0 and leave after departure_time0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a flight between city_name3 and city_name2 with a stopover in city_name0 city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the airline_code0 flights with meals which depart city_name1 on sunday for city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights from city_name1 to city_name0 that have meals on airline_code0 saturday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is airport_name0 airport<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_NAME LIKE "airport_name0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which flight is a one way fare at one_direction_cost0 dollars from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ONE_DIRECTION_COST = one_direction_cost0 AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest one way fare from any city to another<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there transport_type0 service at airport_code0 airport<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MAX( FLIGHTalias2.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND NOT ( FLIGHTalias2.ARRIVAL_TIME < FLIGHTalias2.DEPARTURE_TIME ) ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much is a class_type0 class ticket from city_name1 to city_name0 leaving on friday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name0 state_name0 to airport_code0 next saturday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airline besides airline_name0 flies between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND NOT ( AIRLINEalias0.AIRLINE_NAME LIKE "airline_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights leaving city_name0 on airline_code0 on sunday after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from city_name1 to city_name0 on thursday morning nonstop<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what economy flights are available from city_name1 to city_name0 on month_number0 day_number0 year0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.ECONOMY = "economy0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>when does airline_code0 fly from city_name1 to city_name0 on day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me airline_code0 fares for next sunday from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i am interested in booking an early flight from city_name0 into city_name1 and returning in the late evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>cheapest one way fare from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name1 to city_name0 on saturday or sunday airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time1 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to leave city_name1 next tuesday and arrive in city_name0 around 6pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the class_type0 fares for flights from city_name1 to city_name0 tuesday afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a flight between city_name3 and city_name2 with a stopover at city_name0 city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights that arrive in city_name0 in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which flights leaving city_name1 to city_name0 on monday afternoon have economic class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" ) OR ( FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" ) ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of aircraft will i be flying on if i take a class_type0 class airline_code0 flight from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the least expensive flight available from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias2.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how far is airport_code0 airport from downtown<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias2.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are there from city_name1 to city_name0 on airline_code0 that arrive in city_name0 before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do you have a flight from city_name1 to city_name0 nonstop on a manufacturer0 basic_type0 arriving city_name0 around 7pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND AIRCRAFTalias0.MANUFACTURER = "manufacturer0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me one way flights from city_name1 to city_name0 departing before departure_time0 class_type0 class<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is booking class booking_class0<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT FARE_BASISalias0.FARE_BASIS_CODE ) FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.ECONOMY = "economy0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the costs and times for flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID , FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you show me flights from city_name1 to city_name0 on tuesday night<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) OR ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you please tell me the type of aircraft used flying from city_name1 to city_name0 on airline_code0 flight flight_number0 leaving at departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 WHERE AIRCRAFTalias1.CAPACITY > ALL ( SELECT DISTINCT AIRCRAFTalias2.CAPACITY FROM AIRCRAFT AS AIRCRAFTalias2 WHERE AIRCRAFTalias1.PROPULSION = "propulsion0" ) ) AND AIRCRAFTalias0.CAPACITY > ALL ( SELECT DISTINCT AIRCRAFTalias3.CAPACITY FROM AIRCRAFT AS AIRCRAFTalias3 WHERE AIRCRAFTalias3.PROPULSION = "propulsion0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name1 to city_name0 on friday with a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of transport_type0 service in city_name0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me the cheapest round trip airfare from city_name1 to city_name0 on month_number0 the day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the cheapest of the city_name1 to city_name0 flights which are after departure_time0 in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights arriving at city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the total seating capacity of all aircraft of airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the cheapest flight from city_name1 to city_name0 on wednesday which leaves before departure_time0 and serves meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please tell me the cheapest fare from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>looking for a flight from state_code0 to state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name1 to city_name0 on saturday or sunday airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me direct morning flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flight from state_code0 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights from city_name0 to city_name1 state_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me ground transportation information for airport_code0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most expensive flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 on monday night and arrive at city_name0 later in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights and fares from city_name0 to city_name1 round trip leaving saturday returning next saturday<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 state_name1 and arrive in city_name0 state_name0 on monday before arrival_time0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you show me economy class one way fares for flights from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FARE_BASISalias1.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 flights from city_name1 to city_name0 that arrive in city_name0 between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are there from city_name1 to city_name0 tomorrow evening that serve meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to find a flight from city_name1 to city_name0 state_name0 that leaves in the afternoon on monday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please tell me the times of the flights between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE , AIRPORTalias0.AIRPORT_LOCATION , AIRPORTalias0.AIRPORT_NAME , AIRPORTalias0.COUNTRY_NAME , AIRPORTalias0.MINIMUM_CONNECT_TIME , AIRPORTalias0.STATE_CODE , AIRPORTalias0.TIME_ZONE_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 on airline_code0 departing at departure_time0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need to fly from city_name2 to city_name0 but i'd like to stop over at city_name1 can you tell me a schedule of flights that will do that<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.STOPS = stops0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights city_name0 to airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 to city_name0 next wednesday arriving in the evening and returning the next day<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time2 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the time of all flights from city_name1 to city_name0 on sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_code0 have a flight from city_name1 to city_name0 on wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me the latest return flight from city_name1 to city_name0 on the same day<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights do you have between city_name2 and city_name1 with a stopover in city_name0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the total seating capacity of all aircraft of airline_code0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE , AIRCRAFTalias0.CAPACITY FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of a class_type0 class ticket going from city_name0 to city_name1 leaving month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights from city_name1 to city_name0 which arrive after arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME <= departure_time0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the costs of flights from city_name1 to city_name0 tomorrow<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airline_code0 flights from city_name1 to city_name0 arrive at city_name0 before arrival_time1 on saturday<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what does meal_code0 stand for for meals<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me any show me what the class_type0 class fares are of the flights from city_name1 to city_name0 on monday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where does airline_code0 fly to from city_name0<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 to city_name0 day_name0 month_number0 day_number0 arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much does it cost to fly directly from city_name0 to city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the total number of flights between all airports by airline_code0<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 for city_name0 and depart before departure_time0 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like an early flight from city_name1 to city_name0 monday morning<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights from city_name1 to city_name0 that arrive at arrival_time0 o'clock next tuesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the flights from city_name1 to city_name0 after departure_time0 on a day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are all day_name0 flights from city_name1 to city_name0 on airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name1" ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name2 arrive in city_name0 city_name1 before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please tell me the cheapest fare from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what economy flights are available from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FARE_BASISalias1.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the cheapest one way flights from city_name1 to city_name0 leaving city_name1 between departure_time1 and departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name1" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a listing of flights from city_name2 state_name1 to city_name1 state_name0 leaving tomorrow and i would like to have a stopover in city_name0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do you have an early morning direct flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 to city_name0 on airline_code0 and leave around 9am tell me what aircraft are used by this flight and tell me the flight number<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to travel from city_name1 to city_name0 on us air flight_number0 please tell me the times<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights has airline_code0 into and out of city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights from city_name0 to anywhere on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much does it cost to go from downtown to logan airport<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any other cities that i can fly from city_name1 to city_name0 through that i can get a flight earlier than departure_time0 in the morning<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights go from city_name1 to city_name0 before departure_time0 o'clock sunday afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights on sunday from city_name1 to city_name0 nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.STOPS = stops0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights which leave city_name1 tomorrow and arrive in city_name0 after arrival_time0 o'clock pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>also show me the first flight from city_name0 to city_name1 on a day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me a flight leaving city_name0 at departure_time0 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight from city_name1 to city_name0 class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 to city_name0 state_name0 next monday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>shortest flight from city_name0 state_name0 to city_name1 state_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , STATE AS STATEalias2 , STATE AS STATEalias3 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND STATEalias2.STATE_CODE = CITYalias2.STATE_CODE AND STATEalias2.STATE_NAME = "state_name0" AND STATEalias3.STATE_CODE = CITYalias3.STATE_CODE AND STATEalias3.STATE_NAME = "state_name1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a meal on airline_code0 flight flight_number0 from city_name2 to city_name0 city_name1<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the aircraft type with the greatest seating capacity<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) OR ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( ( ( ( FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) ) ) ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights that go from city_name2 to city_name0 state_name0 by way of city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , STATE AS STATEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to find a flight from city_name2 state_name0 to city_name0 i would like a stopover in city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights from city_name0 to city_name1 and from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all right would you let me know type of aircraft airline_code0 is using on the flights from city_name1 to city_name0 i would like to know the type of aircraft that they use on these flights before departure_time0 in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_STOPalias0.FLIGHT_ID FROM FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE FLIGHT_STOPalias0.STOP_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name2" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name0 to city_name2 and the flights from city_name1 to city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" ) ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find a flight between city_name1 and city_name0 the flight should leave in the afternoon and arrive near 5pm the flight should also be nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights to city_name0 arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the earliest flight tomorrow from city_name1 to city_name0 on a airline other than airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what time does flight airline_code0 flight_number0 depart<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what time does the day_name0 morning departure_time0 flight leaving city_name1 arrive in city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the one way fares from city_name0 to city_name1 nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what type of aircraft leaves from city_name1 to city_name0 at departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me the cheapest round trip airfare from city_name1 to city_name0 on month_number0 the day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airlines are airline_code0 and airline_code1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = "airline_code0" OR AIRLINEalias0.AIRLINE_CODE = "airline_code1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airline_code0 flights to city_name0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly from city_name0 to city_name1 what time are the flights in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the number of flights arriving in city_name0 city_name1 from city_name2 before arrival_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the flights and departure times for flights leaving city_name0 for city_name1 after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME , FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>before departure_time0 o'clock on tuesday is there a basic_type0 that flies from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights arriving at city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 using basic_type0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what time zone is city_name0 in<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to arrange for two friends to fly into city_name0 next saturday evening one of the people is coming from city_name1 and the other is coming from city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a one way ticket from city_name1 to city_name0 either wednesday evening or thursday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i wish to book a flight from city_name1 to city_name0 class_type0 discount fare<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly the cheapest rate available from city_name0 to city_name1 on wednesday morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>tell me about airline_code0 flight flight_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the flight number and the time for the cheapest fare that is the least expensive class_type0 class fare from city_name1 to city_name0 leaving after departure_time0 monday night<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME , FLIGHTalias0.FLIGHT_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( ( ( DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( ( DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.DEPARTURE_TIME > departure_time0 AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE ) AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many stops on airline_code0 flight_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.STOPS FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what type of aircraft leaves from city_name1 to city_name0 at departure_time0 during a weekday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there an city_name0 flight to city_name1 connecting<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are available from city_name2 to city_name0 city_name1 in the afternoons<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from city_name1 to city_name0 that serve only meal_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.MEAL_CODE = "meal_code0" OR FLIGHTalias0.MEAL_CODE = "meal_code1" ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 from city_name1 to city_name0 on saturday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please list all of the classes of flights there are<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many booking classes are there<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airlines have class_type0 class service between city_name1 and city_name0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many of airline_code0 's night flights are class_type0 class<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a round trip flight from city_name1 to city_name0 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , STATE AS STATEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what do you have on monday from airport_code0 to city_name0 california<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name1 to city_name0 late night on tuesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , STATE AS STATEalias2 , STATE AS STATEalias3 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND STATEalias2.STATE_CODE = CITYalias2.STATE_CODE AND STATEalias2.STATE_NAME = "state_name0" AND STATEalias3.STATE_CODE = CITYalias3.STATE_CODE AND STATEalias3.STATE_NAME = "state_name1" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight that i can take from city_name2 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" ) OR ( FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" ) ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need information on flights from city_name0 state_name0 to city_name1 state_name1 i am interested in only those flights on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show flights class_type0 class on airline_code0 from city_name0 to airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.STATE_CODE = "state_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the different classes of service and the prices for airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) OR ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( ( ( ( FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) ) ) ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 state_name1 to city_name0 state_name0 leaving in the afternoon on tuesday<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT AS FLIGHTalias2 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias2.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias2.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in flight meal city_name1 to city_name0 saturday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are my meal options from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want a flight from city_name1 to city_name0 that at least has stops0 stop<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias0.FLIGHT_NUMBER = flight_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airline_code0 flights leave city_name0 state_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how far is airport_code0 airport from downtown<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find travel arrangements for a round trip flight from city_name1 to city_name0 arriving after arrival_time1 before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) ) AND ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) OR FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name2" ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest aircraft available flying from city_name1 to city_name0 arriving on month_number0 day_number1<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias1.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias1.DEPARTURE_TIME > FLIGHTalias1.ARRIVAL_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) OR ( DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( ( FLIGHTalias1.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias1.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias1.DEPARTURE_TIME > FLIGHTalias1.ARRIVAL_TIME ) ) ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need to know if there are any direct flights from city_name1 state_name1 to city_name0 state_name0 leaving preferably tomorrow morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name1" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of airplanes are used by airline_code0 flying between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>very well i'm working on scenario three i'm interested in a flight on a basic_type0 from city_name1 to city_name0 state_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airport in city_name0 is closest to downtown<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 WHERE AIRPORT_SERVICEalias1.MILES_DISTANT = ( SELECT MIN( AIRPORT_SERVICEalias2.MILES_DISTANT ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias2 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" ) AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight from city_name2 to city_name0 city_name1 leaving month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a flight from city_name1 to city_name0 leaving at departure_time0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the last flight from airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights on thursday from city_name1 to city_name0 which arrive in city_name0 before arrival_time0 and serve a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are available from city_name1 to city_name0 with one way economy fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights on airline_code0 and airline_code1 that go to city_name0 in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are available from city_name1 to city_name0 with one way economy fares<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) OR ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number1 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number1 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ) AND FARE_BASISalias2.ECONOMY = "economy0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights that leave on day_name0 mornings from city_name0 to city_name1 and include whether meals are offered and what the prices are<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what types of aircraft can i get a class_type0 class ticket from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_code0 have a flight from city_name1 to city_name0 arriving at arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on tuesday what flights leave city_name1 to city_name0 state_name0 and leave after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the cheapest flights between city_name1 and city_name0 which arrive between month_number0 and arrival_time0 o'clock on tuesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) OR ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) ) ) AND ( FLIGHTalias1.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias1.ARRIVAL_TIME >= arrival_time1 ) ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want a flight that leaves from city_name1 to city_name0 that leaves in the afternoon or evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) OR ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the abbreviation for airline_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.DEPARTURE_TIME > departure_time0 AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 on a manufacturer0 basic_type0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND AIRCRAFTalias0.MANUFACTURER = "manufacturer0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares between city_name1 and city_name0 on monday morning<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any nonstop flights leaving from city_name1 to city_name0 month_number0 day_number0 with who airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flight_days0 flight schedule between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_DAYS = "flight_days0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the least expensive flight from city_name0 to city_name1 on a day_name0 with class_type0 class fare<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND DAYSalias0.DAY_NAME = "day_name0" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DAYS AS DAYSalias2 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 WHERE ( ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND DAYSalias2.DAY_NAME = "day_name0" AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flight with the smallest seating capacity which leaves city_name1 and arrives in city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 WHERE ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias2.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the arrival time in city_name0 for the departure_time0 flight leaving city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many fares are there one way from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airline_code0 flights go from city_name1 to city_name0 before departure_time0 in the morning that have a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the airline_code0 flights leaving or arriving at city_name0 between arrival_time1 and arrival_time0 in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show me flights which cost less than or equal to one_direction_cost0 dollars from city_name1 to city_name0 leaving on a day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = "day_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ONE_DIRECTION_COST <= one_direction_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares for flights between city_name0 and airport_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list departure times from city_name1 to city_name0 which are later than departure_time1 o'clock and earlier than departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights from city_name1 to city_name0 leaving after departure_time1 and before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name2 to city_name1 and city_name0<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the round trip fares for flights from city_name1 to city_name0 arriving after arrival_time0 on airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_code0 have a flight from city_name1 to city_name0 arriving at arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.STOPS = stops0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the day_name0 flights from city_name1 to city_name0 on airline_code0 in the evening<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the day_number0 flight into city_name0 from city_name1 on month_number0 day_number0 and the last flight from city_name0 to city_name1 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias2.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights and fares from city_name1 to city_name0 on airline_code0 number flight_number0 on a day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a flight leaving city_name1 month_number0 day_number0 and arriving in city_name0 colorado month_number0 day_number0 leaving in the afternoon<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me a list of flights from city_name1 to city_name0 leaving after departure_time0 and arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the cheapest flight from city_name0 to city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest class_type0 class fare from city_name1 to city_name0 on airline_code0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is airline_code0 's schedule of morning flights to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the flights from city_name1 to city_name0 on a day_name0 which are nonstop and cost less than round_trip_cost0 dollars<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DAYSalias0.DAY_NAME = "day_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the last flight out of city_name1 to city_name0 in the evening on day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all round trip flights between city_name1 and city_name0 class_type0 class fare<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>okay i'd like a nonstop flight from city_name1 to city_name0 that arrives in city_name0 in the early afternoon on tuesday june first<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest round trip fare on airline_code0 flight_number0 round trip city_name0 city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.FLIGHT_NUMBER = flight_number0 ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights from city_name1 to city_name0 on a day_name0 before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name1 to city_name0 leaving on a day_name0 and show me all flights from city_name0 to city_name1 leaving on day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long does it take to get from airport_code0 airport into the city of city_name0<CODESPLIT>SELECT DISTINCT AIRPORT_SERVICEalias0.MINUTES_DISTANT FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the most expensive fare<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the schedule for flights between city_name1 and city_name0 on the evening of month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flight from city_name1 to city_name0 that departs 9 hours before arriving<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TIME_ELAPSED = time_elapsed0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights from airport_code0 washington airport to city_name0 that depart in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airline_code0 flights to city_name0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare going from city_name2 to city_name0 city_name1 one way on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines have nonstop flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the schedule of ground transportation from the airport in city_name0 into downtown<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could you please tell me the first flight leaving city_name1 to city_name0 on a basic_type0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( AIRCRAFTalias1.BASIC_TYPE = "basic_type0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the costs of flights from city_name1 to city_name0 tomorrow<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what fare codes cover flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what price is a transport_type0 service to city_name0 's airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name1 to city_name0 next wednesday night after departure_time2 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the latest flight from city_name1 to city_name0 that serves a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the first flight from city_name1 to city_name0 on thursday september fifth that leaves after departure_time0<CODESPLIT>SELECT DISTINCT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_CODE = "state_code0" ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what do you have tomorrow morning from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.PROPULSION = "propulsion0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to find a flight from city_name1 to city_name0 on wednesday and i have to be in city_name0 by one so i'd like a flight out of here no later than departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME <= departure_time0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>could i have a list of flights in class_type0 class on monday from city_name1 to city_name0 starting at departure_time0 and afterwards<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights from city_name0 to airport_code0 nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights between city_name2 and either city_name0 or city_name1 that depart between departure_time1 and departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" ) ) ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name0 to state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me information on a flight on month_number0 day_number0 from city_name1 to city_name0 as early as possible<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias2.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND NOT ( FLIGHTalias2.ARRIVAL_TIME < FLIGHTalias2.DEPARTURE_TIME ) ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what time does the day_name0 morning departure_time0 flight leaving city_name1 arrive in city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the shortest flight from city_name1 to city_name0 which arrives in city_name0 wednesday before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) OR ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) ) ) AND FLIGHTalias1.ARRIVAL_TIME < arrival_time0 ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to get a flight from city_name1 to city_name0 with a stopover in airport_code0 for month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights from city_name1 and all the flights from city_name2 that arrive at city_name0 around noon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are available from city_name1 to city_name0 class_type0 class on airline_code0 arriving month_number0 day_number1 before arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FARE_BASIS AS FARE_BASISalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) OR ( ( DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name0 to airport_code0 departing after departure_time0 airline_code0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a connecting flight on airline_code0 on month_number0 day_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.CONNECTIONS > connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airline is the flight originating in city_name1 on month_number0 day_number0 at departure_time0 and arriving in city_name0 at arrival_time0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a direct flight from city_name1 to city_name0 that arrives in city_name0 around 12 noon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>and flight from city_name1 to city_name0 leaving after departure_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights to city_name0 that are less than round_trip_cost0 dollars round trip<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the difference between fare code booking_class1 and fare code booking_class0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name2 to city_name0 or city_name1 that arrive before or around noon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines have flight_days0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flight_days0 flights out of city_name0 that have class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the earliest nonstop flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from airport_code0 to city_name0 leaving after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly from city_name1 to city_name0 next day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights does airline_code0 have from city_name0 to city_name1<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of a round trip ticket class_type0 class between airport_code0 and airport_code1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the airlines that use airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which of the flights from city_name0 to city_name1 on month_number0 day_number0 year0 carries the smallest number of passengers<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.AIRCRAFT_CODE = "aircraft_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all overnight flights from city_name0 to city_name1 and list their fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the nonstop flights on airline_code0 or airline_code1 air from city_name1 to city_name0 on saturday month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lowest fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the least expensive flight available from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the most expensive one way flight from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show all flights from city_name0 to airport_code0 airport next sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want a flight from city_name1 to city_name0 one way leaving after departure_time0 on wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) OR FLIGHTalias0.ARRIVAL_TIME = arrival_time2 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the air restrictions on flights from city_name0 to city_name1 for the airfare of one_direction_cost0 dollars<CODESPLIT>SELECT DISTINCT RESTRICTIONalias0.RESTRICTION_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , RESTRICTION AS RESTRICTIONalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = one_direction_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND RESTRICTIONalias0.RESTRICTION_CODE = FAREalias0.RESTRICTION_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the cheapest flight from city_name0 to city_name1 leaving month_number0 day_number0 and returning may sixth<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the most expensive one way class_type0 class fare from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i am interested in booking an early morning flight from city_name0 into city_name1 on month_number0 day_number0 and returning late in the evening of month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what type of aircraft leaves from city_name1 to city_name0 at departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much will it cost taking class_type0 from city_name1 to city_name0 on month_number0 day_number0 flying airline_code0 flight_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what city is airport_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest round trip class_type0 flight between city_name1 and city_name0 leaving month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a flight from city_name1 to city_name0 on friday morning after departure_time0 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to travel from city_name1 to city_name0 around midnight could you give me the flights<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME >= departure_time0 OR FLIGHTalias0.DEPARTURE_TIME < departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list possible round trip flight_days0 flights between city_name1 and city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_NUMBER = flight_number0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cheapest class_type0 flight between city_name1 and city_name0 leaving month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FARE_BASISalias2.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a plane that arrives in city_name0 by arrival_time1 o'clock pm on friday and leaves from city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the class_type0 flights between city_name1 and city_name0 leaving month_number0 day_number0 and returning month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the flights arriving around noon in city_name0 from city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE = "state_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the cheapest one way flights from city_name1 to city_name0 leaving city_name1 between departure_time1 and departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest airline_code0 flight that i can get class_type0 class from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights arrive in city_name0 on sunday on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights which depart from city_name2 fly to city_name1 via city_name0 and arrive by arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flight_days0 airline_code0 flights are there between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to find a flight from city_name2 state_name0 to city_name0 i would like a stopover in city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the earliest morning flight from city_name1 to city_name0 on wednesday morning<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( DAYSalias3.DAY_NAME = "day_name0" AND DAYSalias4.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias4.DAYS_CODE ) AND DAYSalias2.DAY_NAME = "day_name2" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias2.DAYS_CODE ) AND DAYSalias1.DAY_NAME = "day_name3" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND DAYSalias0.DAY_NAME = "day_name4" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 flights from city_name1 to city_name0 which arrive on wednesday after arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on airline_code0 flight flight_number0 from city_name1 to city_name0 can you tell me what type of aircraft used before departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there stops0 stop with the airline_code0 city_name1 leaving at departure_time0 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.STOPS = stops0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show me airlines with round trip flights from city_name2 to city_name1 stop city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the day_name0 flights from city_name1 to city_name0 arriving in city_name0 between arrival_time1 and 1245pm<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the nonstop flights and fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a nonstop flight from airport_code0 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is the airline_code0 flight flight_number0 from city_name1 to city_name0 a nonstop flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list all flights on airline_code1 and airline_code0 that go into city_name0 and all flights on airline_code0 and airline_code1 that fly out of city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to book the cheapest one way flight from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how far is the airport from downtown city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.CONNECTIONS > connections0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight going from city_name0 to city_name1 on monday august nineteenth<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airlines have flights with service class fare_basis_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the earliest flight from city_name0 to airport_code0 that serves meal_description0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on the flight from city_name1 to city_name0 on airline_code0 leaving at departure_time0 what type of aircraft is used<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which nonstop flight from city_name1 to city_name0 leaves in the afternoon and arrives at arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you list flights from city_name2 to city_name0 with the lowest one way fares that leave on saturday<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me the flights that are nonstop between city_name1 and city_name0 that leave between departure_time1 and departure_time0 in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are between airport_code0 and city_name0<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is airport_code0 city_name0<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_NAME FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of transport_type0 service at city_name0 airport<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like an early morning flight from city_name1 into city_name0 on month_number0 day_number0 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the flights from city_name1 to city_name0 on day_name0 night that serve meals<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 on monday night and arrive at city_name0 later in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>last nonstop flight from city_name1 to city_name0 on monday night<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does any airline have a propulsion0 flight between city_name1 and city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.PROPULSION = "propulsion0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all all flights from city_name1 to city_name0 on wednesday which leave before departure_time0 and serve meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights from city_name1 to city_name0 after departure_time0 thursday nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>okay for now i would like information on a flight on month_number0 day_number0 from city_name1 to city_name0 leaving early in the morning about departure_time3 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of airplane goes from city_name2 to city_name1 monday stopping in city_name0 in the afternoon class_type0 class flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many stops on airline_code0 flight_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights direct only from city_name2 to city_name0 or city_name1 that arrive before arrival_time0 local time<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display all flights from city_name0 and city_name1 flights should leave after departure_time0 arrive after arrival_time0 nonstop flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights on sunday going from city_name1 to city_name0 nonstop class_type0 class leaving after departure_time0<CODESPLIT>SELECT DISTINCT AIRPORT_SERVICEalias0.MILES_DISTANT FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>names of airports<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" OR GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type1" ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is meal_description0 served on flight airline_code0 flight_number0 from city_name1 to city_name0 coach class<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the cheapest one way flight from city_name1 to city_name0 leaving city_name1 after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me nonstop flights from city_name1 to city_name0 with class_type0 class fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of the transport_type0 at airport_code0 airport<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the most expensive flight between city_name1 and city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights leaving city_name1 month_number0 day_number0 coming back to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 to city_name0 with at least one stop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.STOPS > stops0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>great now what i want to find out is on month_number0 day_number0 from city_name0 to city_name1 do you have a flight least expensive fare around 5 o'clock in the morning<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of plane flies from city_name1 to city_name0 after departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares for flights between city_name0 and airport_code0 provided by airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>between city_name1 and city_name0 i'd like a flight that takes the least amount of stops to get to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all airline_code0 class_type0 class flights<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights class_type0 class from city_name1 to city_name0 leaving on tuesday after departure_time1 o'clock in the morning and before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights that go from city_name1 to city_name0 on tuesday and go from city_name0 to city_name1 on sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights come from city_name0 to city_name1 on month_number0 day_number1<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights go from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like an afternoon flight from city_name2 to city_name1 with a stopover in city_name0 arriving i'd say about mealtime<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me class_type0 class round trip flights from city_name0 to city_name1 i want the cheapest class_type0 class fare please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.STOPS = stops0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name1" ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , STATE AS STATEalias2 , STATE AS STATEalias3 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.STOPS = stops0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND STATEalias3.STATE_CODE = CITYalias3.STATE_CODE AND STATEalias3.STATE_NAME = "state_name0" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND STATEalias2.STATE_CODE = CITYalias2.STATE_CODE AND STATEalias2.STATE_NAME = "state_name1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights direct only from city_name2 to city_name0 or city_name1 that arrive before arrival_time0 local time<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND NOT ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights from city_name1 to city_name0 after departure_time0 on month_number0 day_number0 economy class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.ECONOMY = "economy0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a flight from city_name1 to city_name0 flight flight_number0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights from city_name1 city_name2 to city_name0 that arrive between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>hi i want a round trip ticket to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the class_type0 economy class night service from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the cheapest fare in the database<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what city is airport_code0<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the last flight from city_name0 to city_name1 in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a red eye flight from city_name1 to city_name0 on wednesday the nineteenth of may<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the airlines from airport_code0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show flights from city_name0 to city_name1 on airline_code0 airlines with fare information<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the one way flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , CITY AS CITYalias4 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_LEG AS FLIGHT_LEGalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( ( FLIGHTalias1.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias1.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to arrange a trip to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the flights that leave from city_name1 to city_name0 early thursday morning before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>on month_number0 day_number0 city_name1 to city_name0 airline_code0 flight flight_number0<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE ( ( STATEalias0.STATE_NAME = "state_name0" OR STATEalias0.STATE_NAME = "state_name1" ) OR STATEalias0.STATE_NAME = "state_name2" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me nonstop flights from city_name1 to city_name0 with class_type0 class fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>do i get a meal on the city_name0 to airport_code0 flight airline_code0 flight_number0<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights fly from city_name1 to city_name0 on this monday tuesday wednesday thursday and friday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias2 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DAYSalias2.DAY_NAME = "day_name0" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list all flights on airline_code0 and airline_code1 that go to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights come from city_name0 to city_name1 on month_number0 day_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights on airline_code0 from city_name0 in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which flight from city_name0 to city_name1 carries the smallest number of passengers<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 WHERE ( AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias2 , FLIGHT AS FLIGHTalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias2.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please tell me which airline has the most departures from city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me one way flights from city_name1 to city_name0 wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 OR FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list lowest cost flight from city_name1 to city_name0 that serves a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the flight schedule of the aircraft_code0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( AIRCRAFTalias0.AIRCRAFT_CODE = "aircraft_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights arriving in city_name0 monday evening from city_name1 that class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights from city_name1 to city_name0 which arrive on monday after arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me one way flights from city_name1 to city_name0 departing before departure_time0 class_type0 class<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me all nonstops from city_name1 to city_name0 that arrive on a day_name1<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>describe city_name0 airport<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the latest class_type0 class flight of the day leaving city_name1 for city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name0 to city_name1 arriving in city_name1 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.STOPS FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show departures and arrivals in city_name0 for american airlines<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>round trip flights from city_name1 to city_name0 nonstop flights if possible<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to go from city_name2 to city_name0 round trip and make a stop at city_name1 may i have the cheapest fare<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_STOPalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights go from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights are there on wednesday evening from city_name0 to airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights from city_name1 to city_name0 saturday morning that have meals<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any early flights from city_name1 to city_name0 on day_name0 mornings<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all round trips from city_name1 to city_name0 leaving on day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = "day_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need to go from city_name0 to city_name1 and then to city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the least expensive flight from city_name0 to city_name1 on a day_name0 with class_type0 class fare<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights from city_name0 on airline_code0 which depart after departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show me airline_code0 nonstop flights between city_name1 and city_name0 departing around 5 in the evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me nonstop flights from city_name1 to city_name0 with class_type0 class fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all connecting flights on airline_code0 between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights which leave city_name1 tomorrow and arrive in city_name0 after arrival_time0 o'clock pm<CODESPLIT>SELECT DISTINCT FLIGHT_STOPalias0.FLIGHT_ID , FLIGHT_STOPalias0.STOP_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( FLIGHTalias1.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias1.FLIGHT_NUMBER = flight_number1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me prices and times for class_type0 class travel from city_name0 to city_name1 next summer<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID , FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from airport_code0 to city_name0 this afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the day_number0 flight from city_name0 into city_name1 on month_number0 day_number0 and the last flight from city_name1 back to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias2.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airlines fly from city_name0 to city_name1 and from city_name1 to city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the last flight from city_name2 to city_name0 city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the flight number for the airline_code0 flight from city_name1 to city_name0 is it flight_number1 or is it flight_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias0.FLIGHT_NUMBER = flight_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights from city_name1 to city_name0 on wednesday evening or day_name0 mornings<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>from city_name0 to city_name1 departing in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = "state_code0" AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me flights from anywhere to city_name0 arriving after arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of a ticket going from city_name1 to city_name0 month_number0 day_number0 year0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much is an economy ticket from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_CODE = "state_code0" AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me all flights from city_name1 to city_name0 that arrive on a day_name1<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_NAME LIKE "airport_name0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = "transport_type0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the seating capacity for the basic_type0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.BASIC_TYPE = "basic_type0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is your earliest morning flight from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much is the cheapest flight from city_name2 to city_name0 with a stop in city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_STOPalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the cheapest flights from city_name1 to city_name0 that arrive after 12pm on a day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) AND DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) OR ( DAYSalias1.DAY_NAME = "day_name1" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) ) ) AND FLIGHTalias1.ARRIVAL_TIME > arrival_time0 ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights from city_name1 to city_name0 arrive at city_name0 at arrival_time1 next wednesday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_BASIS_CODE FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in flight meal city_name1 to city_name0 saturday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.DEPARTURE_TIME < departure_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a day_name0 night flight from city_name1 to city_name0 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a list of the flights from city_name2 to city_name0 city_name1 on sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the class_type1 class and class_type0 fares for flights from city_name1 to city_name0 arriving around 7pm next thursday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time1 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time2 ) AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND ( ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) OR ( FARE_BASISalias0.CLASS_TYPE = "class_type1" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all fares between city_name1 and city_name0 that are less than one_direction_cost0 dollars one way<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 WHERE ( ( FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the class_type0 class fare on airline_code0 flight flight_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which flights from city_name0 to city_name1 have the lowest class_type0 class fares<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights arrive in city_name0 on sunday on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the first flight from city_name0 to airport_name0 airport for tomorrow<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_NAME LIKE "airport_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( AIRPORTalias1.AIRPORT_NAME LIKE "airport_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to leave around 7 o'clock in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me class_type0 class flights from city_name1 to city_name0 leaving on a day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = "day_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are connecting flights from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS > connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the code for class_type0 class<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_BASIS_CODE FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all airline_code0 flights from city_name1 to city_name0 which arrive on wednesday after arrival_time1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the lowest round trip fare from airport_code0 to any city<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( AIRCRAFTalias0.BASIC_TYPE = "basic_type0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you show me evening flights from city_name1 to city_name0 that serve meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how much is a airline_code0 city_name0 to city_name1 flight_days0 nonstop flight<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_code0 fly early in the morning between airport_code0 and airport_code1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND AIRPORTalias1.AIRPORT_CODE = "airport_code1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me morning flights from city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list airline_code0 flights from city_name1 to city_name0 on day_name0 or day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many stops are on all flights from city_name1 to city_name0 that depart before departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.STOPS FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many nonstop flights going from city_name1 to city_name0 month_number0 day_number0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = "airline_code0" AND AIRLINEalias0.AIRLINE_NAME LIKE "airline_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>month_number0 day_number0 what is the cost of a round trip ticket traveling class_type0 class on airline_code0 leaving from city_name1 going to city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all flights from city_name0 less than one_direction_cost0 dollars<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i want to fly from city_name1 at departure_time0 and arrive in city_name0 at arrival_time0 in the morning<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare from city_name0 to city_name1 class_type0 class one way<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the earliest flight from city_name1 to city_name0 on friday that serves meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = "meal_description0" ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the flight schedule from city_name1 to city_name0 on day_name0 nights<CODESPLIT>SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( ( ( FLIGHTalias1.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias1.DEPARTURE_TIME >= departure_time1 ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias1.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias1.DEPARTURE_TIME >= departure_time3 ) AND DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>okay what i would like to know is does airline_code0 flight flight_number0 from city_name2 to city_name1 with a stop in city_name0 serve meal_description0 that 's airline_code0 flight flight_number0 or flight_number1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like the time of your earliest flight in the morning from city_name1 to city_name0 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights arriving in city_name0 on month_number0 day_number1 leaving either from city_name1 or city_name2<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a fare from city_name0 to city_name1 under one_direction_cost0 dollars<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airlines have flights with service class fare_basis_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the departure time of the latest flight of airline_code0 from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the cheapest class_type0 class airfare from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>for each airline flying between city_name0 and city_name1 what is the earliest flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>instead of denver can i have the same flight from city_name1 to city_name0 but stopping in airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all the types of aircraft<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>all airline_code0 flights to everywhere if you can<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a listing of flights from city_name1 to city_name0 country_name0 departing thursday in the morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = ( SELECT MIN( FLIGHTalias1.STOPS ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what price is a transport_type0 service to city_name0 's airport_code0<CODESPLIT>SELECT DISTINCT RESTRICTIONalias0.RESTRICTION_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , RESTRICTION AS RESTRICTIONalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND RESTRICTIONalias0.RESTRICTION_CODE = FAREalias0.RESTRICTION_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to know the latest flight on wednesday you have leaving from city_name1 to city_name0 which offers a meal<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>cheapest one way fare from city_name1 to city_name0 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>let 's see how much would a direct flight from city_name1 to city_name0 be on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.CONNECTIONS = connections0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a listing of flights from city_name2 state_name1 to city_name1 state_name0 leaving tomorrow and i would like to have a stopover in city_name0 please<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name0" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name1" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a nonstop flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what does airline_code0 mean<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.STOPS = ( SELECT MAX( FLIGHTalias1.STOPS ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the cost of airline_code0 flight flight_number0 from city_name1 to city_name0 thursday night<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show me the cost of flight airline_code0 flight_number0 from city_name1 to city_name0 and flight airline_code0 flight_number1 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias0.FLIGHT_NUMBER = flight_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all round trip flights between city_name1 and city_name0 on the day_number0 of month_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DAYSalias1.DAY_NAME = "day_name0" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flight_days0 flights between city_name0 and city_name1 and between city_name1 and city_name0 using airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , STATE AS STATEalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , STATE AS STATEalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias2.STATE_CODE AND STATEalias1.STATE_NAME = "state_name0" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all flights direct only from city_name2 to city_name0 or city_name1 that arrive before arrival_time0 local time<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the most expensive way i can fly to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>airlines that fly to city_name0 from city_name1 on friday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many airline_code0 flights are there to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what ground transportation is available from the city_name0 airport to downtown and how much does it cost<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE , GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all nonstop flights from city_name1 to city_name0 which arrive before arrival_time1 on tuesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>tell me about flights leaving from city_name1 and going to city_name0 state_name0 next monday i need to know about flights that arrive in city_name0 between arrival_time1 and arrival_time0<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please show all flights from city_name0 to airport_code0 airport next sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what 's the price of the least expensive class_type0 class round trip ticket on airline_code0 from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airlines have nonstop early afternoon flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) OR ( FLIGHTalias0.AIRLINE_CODE = "airline_code1" ) ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need an early flight from city_name1 to city_name0 please and i would like meal_description0 served on that<CODESPLIT>SELECT COUNT( DISTINCT AIRLINEalias0.AIRLINE_CODE ) FROM AIRLINE AS AIRLINEalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what round trip tickets are there from city_name1 to city_name0 on airline_code0 that arrive before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which airlines provide direct flights between city_name0 and city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = "state_code0" AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i have two friends that would like to visit me on wednesday here in city_name0 one of them lives in city_name1 and the other lives in city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name2" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does flight airline_code0 flight_number0 from city_name0 to city_name1 have a meal<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 for city_name0 and depart before departure_time0 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights arrive in city_name0 on sunday on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the abbreviation for airline_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you show me one way economy fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>anything from city_name2 or city_name3 with a stopover in city_name1 going to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name3" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flight classes for airline_code0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.STOPS = stops0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me round trip flights from city_name0 to city_name1 that offer class_type0 class service on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the flights from city_name0 to city_name1 city_name2 on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" ) ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>of the flights available from city_name0 to city_name1 on month_number0 day_number0 which airline has the least expensive flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = "city_name0" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = "city_name1" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FARE_BASISalias1.CLASS_TYPE = "class_type0" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what do you have going from city_name1 to city_name0 serving meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to find a nonstop flight from city_name1 to city_name0 that leaves sometime in the afternoon and arrives in city_name0 before evening<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the flights from city_name1 to city_name0 with stops0 stop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.STOPS = stops0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares for flights serving a meal from city_name1 to city_name0 before departure_time0 on thursday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please give me the flight times the morning on airline_code0 for month_number0 day_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most expensive one way fare from city_name0 to city_name1 on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is airline_code0 flight flight_number1 flight_number0 from city_name1 to city_name0 with stops0 stop available tomorrow morning<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_LEG AS FLIGHT_LEGalias0 , FLIGHT_LEG AS FLIGHT_LEGalias1 WHERE ( ( ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias1.FLIGHT_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_LEGalias1.LEG_FLIGHT AND FLIGHTalias2.FLIGHT_NUMBER = flight_number0 ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_NUMBER = flight_number1 ) AND FLIGHTalias0.STOPS = stops0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all of the flight_days0 flights arriving in city_name0 between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all direct flights from city_name0 to either city_name1 or city_name2<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name2" ) ) ) AND FLIGHTalias0.CONNECTIONS = connections0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like an afternoon flight from city_name0 state_name0 to city_name1 state_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = "state_name1" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the least expensive one way ticket from city_name1 to city_name0 leaving on month_number0 day_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>and how much does it cost to travel from airport_code0 airport to downtown<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cheapest one way flights between city_name1 and city_name0 which arrive after arrival_time0 on a day_name1<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_NAME = "city_name0" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from city_name1 to city_name0 with the lowest one way fares that leaves on saturday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = "airport_code0" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flights from city_name1 to city_name0 on saturday or sunday airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND ( ( FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.DAY_NUMBER = day_number0 ) OR ( FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND DATE_DAYalias1.YEAR = year0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 ) ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>my question is i want to go to city_name0 and i live in city_name1 and i would like to fly on airline_code0 do you have an early flight<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is a flight that goes from city_name1 to city_name0 and arrives at city_name0 at arrival_time1 on a day_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DAYSalias0.DAY_NAME = "day_name1" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME = arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me all class_type0 class fares from city_name1 to city_name0 leaving on a day_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the fare from city_name2 to city_name0 city_name1 on airline_code0 flight flight_number0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name2" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please tell me how many nonstop flights there are from city_name0 to city_name1<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>flight flight_number0 from city_name1 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need an early flight from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list nonstop flights from airport_code0 to airport_code1 that depart in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>get last flight from city_name1 to city_name0 on wednesday or first flight from city_name1 to city_name0 on thursday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) OR ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias2.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias2 WHERE ( ( FLIGHTalias2.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = "city_name1" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>get last flight from city_name1 to city_name0 on wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name1 to city_name0 state_name0 next monday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need flight information for a flight departing from city_name1 to city_name0 departing tuesday at departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need flight and fare information for thursday departing prior to departure_time0 from city_name1 going to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need flight numbers and airlines for flights departing from city_name1 to city_name0 on thursday departing before departure_time0<CODESPLIT>SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list airports in state_name2 state_name1 and state_name0 please<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.ECONOMY = "economy0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the state_name0 airport<CODESPLIT>SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a ticket from city_name0 state_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a one way ticket from city_name1 to city_name0 either wednesday evening or thursday morning<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) OR ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( ( ( ( FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) ) ) ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>now show me all round trip flights from city_name1 to city_name0 that arrive before arrival_time0 in city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORTalias1.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please list the shortest stops0 stop flight from city_name1 state_name1 to city_name0 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.ECONOMY = "economy0" ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias2.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE FLIGHT_FAREalias2.FLIGHT_ID IN ( SELECT FLIGHTalias2.FLIGHT_ID FROM FLIGHT AS FLIGHTalias2 WHERE ( FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = "city_name0" ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = "city_name1" ) ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE ( FAREalias1.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.ECONOMY = "economy0" ) AND FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name1" ) ) ) ) ) ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>and from city_name1 to city_name0 before departure_time0 flight_days0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the nonstop flights and fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me weekday flights from city_name1 to city_name0 one way<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias6.DAYS_CODE FROM DAYS AS DAYSalias6 WHERE DAYSalias6.DAY_NAME = "day_name0" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias3.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias3 WHERE FLIGHT_FAREalias3.FARE_ID IN ( SELECT FAREalias3.FARE_ID FROM FARE AS FAREalias3 WHERE ( FAREalias3.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias3.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias3 WHERE FARE_BASISalias3.BASIS_DAYS IN ( SELECT DAYSalias7.DAYS_CODE FROM DAYS AS DAYSalias7 WHERE DAYSalias7.DAY_NAME = "day_name0" ) ) AND FAREalias3.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias8.DAYS_CODE FROM DAYS AS DAYSalias8 WHERE DAYSalias8.DAY_NAME = "day_name1" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias4.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias4 WHERE FLIGHT_FAREalias4.FARE_ID IN ( SELECT FAREalias4.FARE_ID FROM FARE AS FAREalias4 WHERE ( FAREalias4.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias4.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias4 WHERE FARE_BASISalias4.BASIS_DAYS IN ( SELECT DAYSalias9.DAYS_CODE FROM DAYS AS DAYSalias9 WHERE DAYSalias9.DAY_NAME = "day_name1" ) ) AND FAREalias4.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias4.DAYS_CODE FROM DAYS AS DAYSalias4 WHERE DAYSalias4.DAY_NAME = "day_name2" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias2.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE FLIGHT_FAREalias2.FARE_ID IN ( SELECT FAREalias2.FARE_ID FROM FARE AS FAREalias2 WHERE ( FAREalias2.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias2.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias2 WHERE FARE_BASISalias2.BASIS_DAYS IN ( SELECT DAYSalias5.DAYS_CODE FROM DAYS AS DAYSalias5 WHERE DAYSalias5.DAY_NAME = "day_name2" ) ) AND FAREalias2.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME = "day_name3" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias1.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FARE_ID IN ( SELECT FAREalias1.FARE_ID FROM FARE AS FAREalias1 WHERE ( FAREalias1.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME = "day_name3" ) ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) OR ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = "day_name4" ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME = "day_name4" ) ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list city_name0<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from airport_code0 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me the last flight from airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from city_name0 on saturday afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( FAREalias1.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list type of aircraft for all flights from city_name0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.BASIC_TYPE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_CODE IN ( SELECT EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE FROM EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE IN ( SELECT FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what flights leave city_name1 and arrive in city_name0 after arrival_time1 on thursday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) OR ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND ( ( FAREalias0.ROUND_TRIP_COST IS NOT NULL ) AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list flights from city_name1 to city_name0 on saturday of fare basis code of fare_basis_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE = "fare_basis_code0" AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list seating capacities of airline_code0 flights from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_CODE IN ( SELECT EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE FROM EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE IN ( SELECT FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list airline_code0 flights from city_name0 to city_name1 with aircraft type<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the round trip flights from city_name1 to city_name0 next wednesday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the fares for round trip flights from city_name1 to city_name0 next wednesday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the fares from city_name1 to city_name0 next sunday<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the meal flights departing early saturday morning from city_name1 to city_name0 nonstop<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.STOPS = stops0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the flights from city_name1 to city_name0 saturday morning that have meals<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me flights from city_name1 to city_name0 that have meals on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a round trip flight from city_name1 to city_name0 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias2.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE FLIGHT_FAREalias2.FLIGHT_ID IN ( SELECT FLIGHTalias2.FLIGHT_ID FROM FLIGHT AS FLIGHTalias2 WHERE ( ( FLIGHTalias2.FLIGHT_DAYS IN ( SELECT DAYSalias4.DAYS_CODE FROM DAYS AS DAYSalias4 WHERE DAYSalias4.DAY_NAME IN ( SELECT DATE_DAYalias4.DAY_NAME FROM DATE_DAY AS DATE_DAYalias4 WHERE DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = "city_name1" ) ) ) ) ) ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM FARE AS FAREalias1 WHERE ( FAREalias1.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) ) ) ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like to fly from city_name0 to city_name1 on airline_code0 at the latest time possible in the evening<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE ( FAREalias1.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ) AND FAREalias1.ROUND_TRIP_REQUIRED = "round_trip_required0" ) AND FAREalias0.ROUND_TRIP_REQUIRED = "round_trip_required0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>is there a fare from city_name0 to city_name1 under one_direction_cost0 dollars<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>city_name1 to city_name0 and city_name2 to city_name0 on sunday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>city_name1 to city_name0 afternoon day_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias1.AIRPORT_CODE = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND DAYSalias0.DAY_NAME = "day_name0" AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>a flight from city_name1 to city_name0 arriving between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT RESTRICTIONalias0.RESTRICTION_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , RESTRICTION AS RESTRICTIONalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FAREalias0.ONE_DIRECTION_COST = one_direction_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND RESTRICTIONalias0.RESTRICTION_CODE = FAREalias0.RESTRICTION_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i wish to book a flight from city_name1 to city_name0 class_type0 discount fare<CODESPLIT>SELECT DISTINCT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_CODE = "state_code0" ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many flights does airline_code0 have leaving airport_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name0" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a connecting flight from city_name1 to city_name0 leaving after departure_time0 o'clock<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.CONNECTIONS > connections0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>month_number0 day_number0 what is the cost of a round trip ticket traveling class_type0 class on airline_code0 leaving from city_name1 going to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.CLASS_TYPE = "class_type0" ) ) OR ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.CLASS_TYPE = "class_type1" ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are meals ever served on airline_code0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND NOT ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are snacks served on airline_code0<CODESPLIT>SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( FOOD_SERVICEalias0.MEAL_CODE IN ( SELECT FLIGHTalias0.MEAL_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ) AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = "meal_description0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>between city_name1 and city_name0 i'd like a flight that takes the least amount of stops to get to city_name1<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name1" ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lowest fares from city_name0 to city_name1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name1" ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest fare from airport_code0 to city_name0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORTalias1.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights leaving city_name0 between departure_time1 and departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what airlines serve city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 OR FLIGHTalias0.TIME_ELAPSED >= time_elapsed0 ) AND FLIGHTalias0.DEPARTURE_TIME > FLIGHTalias0.ARRIVAL_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show me airline abbreviations<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FLIGHT_DAYS = "flight_days0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all flights arriving or leaving city_name0 between arrival_time1 and arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what ground transportation is available from airport_code0 airport into city_name0<CODESPLIT>SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( GROUND_SERVICEalias0.AIRPORT_CODE IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) AND GROUND_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the nonstop flights from city_name1 to city_name0 leaving after departure_time0 and arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.STOPS = stops0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i would like a flight on tuesday which leaves from city_name1 to city_name0 state_name0 and that leaves in the afternoon<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what type of aircraft is used for the airline_code0 flight leaving at departure_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( AIRCRAFTalias0.AIRCRAFT_CODE = "aircraft_code0" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight leaving city_name1 to city_name0 leaving next wednesday and returning the following day<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) OR ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights on day_name0 that travel from city_name1 state_name1 to city_name0 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = "day_name0" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias1.STATE_CODE FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = "city_name1" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name1" ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights on thursday leaving from city_name1 state_name0 to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = "city_name1" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights from city_name1 to city_name0 state_name0 leaving on friday<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name0" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i need a flight from city_name0 to airport_code0 airport that arrives on saturday before arrival_time1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FARE_BASISalias0.CLASS_TYPE = "class_type0" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the flights between city_name1 and city_name0 state_name0 which leave after departure_time0<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the nonstop flights between city_name0 and city_name1 state_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name1" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.STOPS = stops0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>can you find me a flight from city_name0 to city_name1 city next day_name0 before arriving before arrival_time0<CODESPLIT>SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORTalias1.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias1 WHERE AIRPORTalias1.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = "airport_code0" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ) ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does airline_code0 fly early in the morning between airport_code0 and airport_code1<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like a round trip flight from city_name1 to city_name0 on wednesday month_number0 day_number0 arriving at arrival_time0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = "airline_code0" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = "city_name0" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = "city_name1" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = "airline_code0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find airline_code0 flight from city_name1 to city_name0 around 630pm<CODESPLIT>SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.BASIC_TYPE = "basic_type0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please find a flight round trip from city_name2 to city_name1 state_name0 with a stopover in city_name0 not exceeding the price of round_trip_cost0 dollars for month_number0 day_number0 year0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year1 ) ) ) AND FAREalias0.ROUND_TRIP_COST <= round_trip_cost0 ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ) ) ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_STOPalias0.FLIGHT_ID FROM FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE FLIGHT_STOPalias0.STOP_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = "city_name1" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name2" ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>please find a flight from city_name2 to city_name1 that makes a stop in city_name0 on month_number0 day_number0 one way with meal_description0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = "city_name0" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = "state_name0" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = "city_name1" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the fares for flights between city_name0 and airport_code0<CODESPLIT>SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE ( ( AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias1.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name0" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name1" ) ) ) ) AND AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias2.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias2 WHERE ( FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = "city_name1" ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = "city_name2" ) ) ) ) ) AND AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias0.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name2" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>i'd like to book two flights to city_name0<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me a flight from city_name0 to any airport in the city_name1 area<CODESPLIT>SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = "city_name1" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = "city_name0" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name1" ) ) ) ) ) ;1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest city in state_name0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "state_name0" ) AND CITYalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through the state with the largest city in the us<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY AVG ( CITYalias0.POPULATION ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how big is state_name0<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in state_name0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the smallest population<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cities in state_name0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the capital capital0<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the lakes in state_name0<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name the major lakes in state_name0<CODESPLIT>SELECT DERIVED_TABLEalias1.STATE_NAME FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias1.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the states<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states do river_name0 river flow through<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest population<CODESPLIT>SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have a city named city_name0<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in each state whose lowest point is sea level<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the longest river in the usa<CODESPLIT>SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river flowing through state_name0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "state_name0" ) AND RIVERalias0.TRAVERSE = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers are in state_name0<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states neighbor state_name0<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many capitals does state_name0 have<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the state that borders the most states<CODESPLIT>SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state is city_name0 in<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the state with the largest area<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in city_name0<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest city in state_name0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "state_name0" ) AND CITYalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states lie on the largest river in the united states<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are in state_name0<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states have points higher than the highest point in state_name0<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest elevation in state_name0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the states that border state_name0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the city with the largest population<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the smallest population density<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state is the biggest<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the highest points of states surrounding state_name0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the river that flows through the most states<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ORDER BY HIGHLOWalias0.HIGHEST_ELEVATION DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the state with the lowest population density<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river that passes the states that border the state that borders the most states<CODESPLIT>SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH IN ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias0 ) FROM ( SELECT MAX( RIVERalias1.LENGTH ) AS DERIVED_FIELDalias0 , RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias2.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias2 GROUP BY BORDER_INFOalias2.BORDER ) AS DERIVED_TABLEalias0 ) ) ) GROUP BY RIVERalias1.TRAVERSE ) AS DERIVED_TABLEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the highest point in state_name0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states have no bordering state<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the smallest state bordering state_name0<CODESPLIT>SELECT DERIVED_TABLEalias1.STATE_NAME FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias1.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the smallest population density<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through the state with the largest city in the us<CODESPLIT>SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION < ( SELECT HIGHLOWalias1.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high is highest_point0<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the largest city in the state with the largest area<CODESPLIT>SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the river_name0 river<CODESPLIT>SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through states that border the state with the largest population<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "state_name0" ) AND RIVERalias0.TRAVERSE = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many capitals does state_name0 have<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many cities are there in the united states<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are there<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many citizens does the biggest city have in the usa<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many river_name0 rivers are there<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of city_name0 state_name0<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the biggest city in state_name0 state<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_ALTITUDE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = "mountain_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the capital of state_name0<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the united states<CODESPLIT>SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers do not run through country_name0<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states are in the usa<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border state_name0<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the state with the largest population<CODESPLIT>SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states do not have rivers<CODESPLIT>SELECT COUNT( DISTINCT STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have a higher point than the highest point of the state with the largest capital city in the us<CODESPLIT>SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ( SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the longest river in the usa<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 AND RIVERalias0.TRAVERSE = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state is the largest city in state_name0 in<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the capital city in state_name0<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the smallest population density<CODESPLIT>SELECT STATEalias0.CAPITAL FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the cities in states through which the river_name0 runs<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the cities of the state with the highest point<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the highest points of all the states<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in state_name0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have a higher point than the highest point of the state with the largest capital city in the us<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 AND RIVERalias0.RIVER_NAME = "river_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the population densities of each us state<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state bordering state_name0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the populations of states which border state_name0<CODESPLIT>SELECT STATEalias0.POPULATION FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the populations of the major cities of state_name0<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what city has the most people<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is capital of the state with the lowest point<CODESPLIT>SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest american city in a state with a river<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest capital city in the us<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of states that have cities named city_name0<CODESPLIT>SELECT STATEalias0.CAPITAL FROM CITY AS CITYalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND STATEalias0.STATE_NAME = CITYalias0.STATE_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the state with the largest population<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the largest state<CODESPLIT>SELECT DISTINCT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the most populous state<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the longest river<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the combined area of all 50 states<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the density of the state_name0<CODESPLIT>SELECT SUM( DERIVED_TABLEalias0.LENGTH ) FROM ( SELECT DISTINCT RIVERalias0.RIVER_NAME , RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 ) AS DERIVED_TABLEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest mountain in the us<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the state with capital capital0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the usa<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers traverses the state which borders the most states<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in smallest state through which the river_name0 runs<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in the smallest state in the usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state bordering state_name0<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the river that flows through the most states<CODESPLIT>SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias0 , RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 GROUP BY RIVERalias1.RIVER_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 , RIVERalias2.RIVER_NAME FROM RIVER AS RIVERalias2 GROUP BY RIVERalias2.RIVER_NAME ) AS DERIVED_TABLEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the largest state<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the states that border state_name0<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the state with the most major cities<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 GROUP BY CITYalias0.STATE_NAME ORDER BY COUNT( CITYalias0.CITY_NAME ) DESC LIMIT 1 ) ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the river_name0 river<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point in usa<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest capital city in the us<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ORDER BY HIGHLOWalias0.LOWEST_ELEVATION LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most dense state in the usa<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most populous state through which the river_name0 runs<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "river_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population density of the largest state<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border state_name1 and border state_name0<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name all the rivers in state_name0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the state with the highest point<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the river that flows through the most states<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the largest state<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the smallest population density<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias1.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest state bordering state_name0<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in each state whose lowest point is sea level<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "river_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the state with the smallest area<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the total length of all rivers in the usa<CODESPLIT>SELECT SUM( DERIVED_TABLEalias0.LENGTH ) FROM ( SELECT DISTINCT RIVERalias0.RIVER_NAME , RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 ) AS DERIVED_TABLEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what river flows through the most states<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVERalias0.RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what river runs through the state with the most cities<CODESPLIT>SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers are in states that border state_name0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers traverses the state which borders the most states<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state bordering state_name0 has the largest population<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state contains the highest point of those the river_name0 river traverses<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest capital<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the longest river<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the most major cities<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 GROUP BY CITYalias0.STATE_NAME ORDER BY COUNT( 1 ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state is the largest city in state_name0 in<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the state with the smallest population<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which capitals are not major cities<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in each state whose lowest point is sea level<CODESPLIT>SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER = "state_name0" AND BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the most populous state<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the state that borders the most states<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias2.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias2 GROUP BY BORDER_INFOalias2.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the height of mount mountain_name0<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the state with the most major cities<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 WHERE CITYalias1.POPULATION > 150000 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the largest population density<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states contain at least one major rivers<CODESPLIT>SELECT DISTINCT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where are mountains<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in each state whose lowest point is sea level<CODESPLIT>SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the smallest city<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the density of the state that the largest river in the united states runs through<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the highest peak not in state_name0<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.STATE_NAME <> "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the state with the most cities<CODESPLIT>SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers do not run through country_name0<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 , BORDER_INFO AS BORDER_INFOalias1 , BORDER_INFO AS BORDER_INFOalias2 , BORDER_INFO AS BORDER_INFOalias3 WHERE BORDER_INFOalias1.BORDER = BORDER_INFOalias0.STATE_NAME AND BORDER_INFOalias2.BORDER = BORDER_INFOalias1.STATE_NAME AND BORDER_INFOalias3.BORDER = BORDER_INFOalias2.STATE_NAME AND BORDER_INFOalias3.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through states that border the state with the capital capital0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through states with fewest cities<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MIN( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state capital has the smallest population<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the highest elevation<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the lowest elevation<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in the smallest state in the usa<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ) AND HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the most major rivers<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the smallest average urban population<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY AVG ( CITYalias0.POPULATION ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have major rivers<CODESPLIT>SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = "mountain_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states have a river<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states have a major city named city_name0<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" AND CITYalias0.POPULATION > 150000 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in a state that borders state_name0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers do not traverse the state with the capital capital0<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the shortest river in state_name0<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ) AND HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the smallest state in the us<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the largest state through which the river_name0 runs<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM RIVER AS RIVERalias0 , STATE AS STATEalias1 WHERE RIVERalias0.RIVER_NAME = "river_name0" AND STATEalias1.STATE_NAME = RIVERalias0.TRAVERSE ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the shortest river in the usa<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest state bordering state_name0<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest city of the smallest state in the us<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point in usa<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MAX( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) AND STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state that borders the state with the lowest point in the usa<CODESPLIT>SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE ( HIGHLOWalias0.STATE_NAME = BORDER_INFOalias0.BORDER ) AND ( STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ) AND HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ORDER BY STATEalias0.AREA DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the largest state that borders state_name0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state is capital0 the capital of<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the state with the largest population<CODESPLIT>SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state that borders the state with the highest population<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.POPULATION = ( SELECT MAX( STATEalias3.POPULATION ) FROM STATE AS STATEalias3 ) ) ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.BORDER IN ( SELECT STATEalias4.STATE_NAME FROM STATE AS STATEalias4 WHERE STATEalias4.POPULATION = ( SELECT MAX( STATEalias5.POPULATION ) FROM STATE AS STATEalias5 ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the highest point<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME AND STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MIN( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state borders the least states excluding state_name0 and excluding state_name1<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name the 50 capitals in the usa<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have a city named city_name0<CODESPLIT>SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state borders the state with the smallest population<CODESPLIT>SELECT COUNT( DISTINCT BORDER_INFOalias0.STATE_NAME ) FROM BORDER_INFO AS BORDER_INFOalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state is the state with the most rivers<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lakes in states bordering state_name0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are in state_name0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in smallest state through which the river_name0 runs<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states does the river_name0 run through<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "river_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the river_name0 river<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river that does not run through state_name0<CODESPLIT>SELECT STATEalias0.POPULATION / STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that border states that border state_name0<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME IN ( SELECT BORDER_INFOalias2.BORDER FROM BORDER_INFO AS BORDER_INFOalias2 WHERE BORDER_INFOalias2.STATE_NAME = "state_name0" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border at least one other state<CODESPLIT>SELECT COUNT( DISTINCT BORDER_INFOalias0.STATE_NAME ) FROM BORDER_INFO AS BORDER_INFOalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the height of the highest mountain in state_name0<CODESPLIT>SELECT MAX( DISTINCT HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border state_name1 and border state_name0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "river_name0" ) AND STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ) ) ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high is highest_point0<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the combined area of all 50 states<CODESPLIT>SELECT SUM( STATEalias0.POPULATION ) FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major lakes in united states <CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > 750 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name all the lakes of us<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major rivers cross state_name0<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 AND RIVERalias0.TRAVERSE = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the shortest river<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states are next to major rivers<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state borders the least states excluding state_name0 and excluding state_name1<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.STATE_NAME WHERE STATEalias0.STATE_NAME <> "state_name0" AND STATEalias0.STATE_NAME <> "state_name1" GROUP BY STATEalias0.STATE_NAME HAVING COUNT( BORDER_INFOalias0.BORDER ) = ( SELECT MIN( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias0 , STATEalias1.STATE_NAME FROM STATE AS STATEalias1 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias1 ON STATEalias1.STATE_NAME = BORDER_INFOalias1.STATE_NAME WHERE STATEalias1.STATE_NAME <> "state_name0" AND STATEalias1.STATE_NAME <> "state_name1" GROUP BY STATEalias1.STATE_NAME ) AS DERIVED_TABLEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the smallest state<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) AND STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the height of mount mountain_name0<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_ALTITUDE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = "mountain_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the state with the smallest population<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through the state with the lowest elevation in the usa<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what mountains are in state_name0<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have major rivers<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest state through which the longest river runs<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias2.TRAVERSE FROM RIVER AS RIVERalias2 WHERE RIVERalias2.LENGTH = ( SELECT MAX( RIVERalias3.LENGTH ) FROM RIVER AS RIVERalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state traversed by the river_name0 river<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers run through the states bordering state_name0<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river that does not run through state_name0<CODESPLIT>SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME NOT IN ( SELECT RIVERalias2.RIVER_NAME FROM RIVER AS RIVERalias2 WHERE RIVERalias2.TRAVERSE = "state_name0" ) ) AND RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias3.RIVER_NAME FROM RIVER AS RIVERalias3 WHERE RIVERalias3.TRAVERSE = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the largest cities in the states that border the largest state<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM HIGHLOW AS HIGHLOWalias0 , RIVER AS RIVERalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has no rivers<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers are in the state with the highest point<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM HIGHLOW AS HIGHLOWalias0 , RIVER AS RIVERalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the most cities<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY COUNT( 1 ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the largest state<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states neighbor state_name0<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the lowest point that borders state_name0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE ( HIGHLOWalias0.STATE_NAME = ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE GROUP BY STATEalias0.STATE_NAME ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the states<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states in the us does the shortest river run through<CODESPLIT>SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the average population per square km in the us<CODESPLIT>SELECT SUM( STATEalias0.POPULATION ) / SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through states that border the state with the largest population<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the state with capital capital0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the smallest state<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states border the longest river in the usa<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that border states that border state_name0<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many river_name0 rivers are there<CODESPLIT>SELECT COUNT( DISTINCT BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is capital of the state with the lowest point<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = HIGHLOWalias0.HIGHEST_POINT ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the smallest state<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the largest state<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the river_name0 river<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME AND STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.AREA = ( SELECT MAX( STATEalias2.AREA ) FROM STATE AS STATEalias2 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the smallest capital<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( DERIVED_TABLEalias0.POPULATION ) FROM ( SELECT CITYalias1.POPULATION FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) AS DERIVED_TABLEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that border the state with the largest population<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 , BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.BORDER = BORDER_INFOalias0.STATE_NAME AND BORDER_INFOalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state that borders the most states<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what city has the most people<CODESPLIT>SELECT MAX( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>of the states washed by the river_name0 river which has the lowest point<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 , RIVER AS RIVERalias0 WHERE ( RIVERalias0.RIVER_NAME = "river_name0" ) AND ( RIVERalias0.TRAVERSE = HIGHLOWalias1.STATE_NAME ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers in state_name0 are longer than the river_name0<CODESPLIT>SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which capitals are not major cities<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high is the highest point in the largest state<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) AND STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cities in usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point of the state with the largest area<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 , BORDER_INFO AS BORDER_INFOalias1 , BORDER_INFO AS BORDER_INFOalias2 , BORDER_INFO AS BORDER_INFOalias3 WHERE BORDER_INFOalias1.BORDER = BORDER_INFOalias0.STATE_NAME AND BORDER_INFOalias2.BORDER = BORDER_INFOalias1.STATE_NAME AND BORDER_INFOalias3.BORDER = BORDER_INFOalias2.STATE_NAME AND BORDER_INFOalias3.STATE_NAME = "state_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is state_name0<CODESPLIT>SELECT STATEalias0.COUNTRY_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest urban population<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.STATE_NAME <> "state_name0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state borders the least states<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.STATE_NAME GROUP BY STATEalias0.STATE_NAME HAVING COUNT( BORDER_INFOalias0.BORDER ) = ( SELECT MIN( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias0 , STATEalias1.STATE_NAME FROM STATE AS STATEalias1 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias1 ON STATEalias1.STATE_NAME = BORDER_INFOalias1.STATE_NAME GROUP BY STATEalias1.STATE_NAME ) AS DERIVED_TABLEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest population<CODESPLIT>SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high are the highest points of all the states<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "city_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the smallest state bordering state_name0<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers do not run through state_name0<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "river_name0" AND RIVERalias0.TRAVERSE = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high are the highest points of all the states<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the shortest river in the usa<CODESPLIT>SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the elevation of lowest_point0<CODESPLIT>SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the average population of the us by state<CODESPLIT>SELECT AVG ( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the largest state<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border on the state whose capital is capital0<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 , BORDER_INFO AS BORDER_INFOalias1 , BORDER_INFO AS BORDER_INFOalias2 , BORDER_INFO AS BORDER_INFOalias3 WHERE BORDER_INFOalias1.BORDER = BORDER_INFOalias0.STATE_NAME AND BORDER_INFOalias2.BORDER = BORDER_INFOalias1.STATE_NAME AND BORDER_INFOalias3.BORDER = BORDER_INFOalias2.STATE_NAME AND BORDER_INFOalias3.STATE_NAME = "state_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the density of the state that the largest river in the united states runs through<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "capital0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the states through which the major river in state_name0 runs<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.LENGTH > 750 AND RIVERalias1.TRAVERSE = "state_name0" ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states does not border state_name0<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "state_name0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state borders the state with the smallest population<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state is the largest city in state_name0 in<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MIN( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the state with the highest point<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM HIGHLOW AS HIGHLOWalias0 , RIVER AS RIVERalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What year is the movie " movie_title0 " from ?<CODESPLIT>SELECT MOVIEalias0.RELEASE_YEAR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " director_name0 " direct after movie_release_year0 ?<CODESPLIT>SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = "actor_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was " writer_name0 " born ?<CODESPLIT>SELECT ACTORalias0.NATIONALITY FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = "actor_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies produced in movie_release_year0<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors born in " actor_birth_city0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "actor_birth_city0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who are from actor_nationality0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NATIONALITY = "actor_nationality0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who were born in actor_birth_year0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_YEAR = actor_birth_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was " writer_name0 " born ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MADE_BY AS MADE_BYalias0 , MOVIE AS MOVIEalias0 , PRODUCER AS PRODUCERalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.MID = MADE_BYalias0.MSID AND MOVIEalias0.RELEASE_YEAR < movie_release_year0 AND MOVIEalias0.RELEASE_YEAR > movie_release_year1 AND PRODUCERalias0.PID = MADE_BYalias0.PID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where is the birth place of " writer_name0 "<CODESPLIT>SELECT WRITERalias0.NATIONALITY FROM WRITER AS WRITERalias0 WHERE WRITERalias0.NAME = "writer_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the nationality of " writer_name0 " ?<CODESPLIT>SELECT WRITERalias0.NATIONALITY FROM WRITER AS WRITERalias0 WHERE WRITERalias0.NAME = "writer_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " actor_name0 " act in ?<CODESPLIT>SELECT MOVIEalias0.BUDGET FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " director_name0 " after movie_release_year0<CODESPLIT>SELECT WRITERalias0.BIRTH_YEAR FROM WRITER AS WRITERalias0 WHERE WRITERalias0.NAME = "writer_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the director of the movie " movie_title0 " ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actor who played " cast_role0 " in the movie " movie_title0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE CASTalias0.AID = ACTORalias0.AID AND CASTalias0.ROLE = "cast_role0" AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the genre of the movie " movie_title0 " ?<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NATIONALITY = "actor_nationality0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who was the director of the movie movie_title0 from movie_release_year0 ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.RELEASE_YEAR = movie_release_year0 AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies written by " writer_name0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 , WRITER AS WRITERalias0 , WRITTEN_BY AS WRITTEN_BYalias0 WHERE WRITERalias0.NAME = "writer_name0" AND WRITTEN_BYalias0.MSID = MOVIEalias0.MID AND WRITTEN_BYalias0.WID = WRITERalias0.WID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " actor_name0 " act in ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MADE_BY AS MADE_BYalias0 , MOVIE AS MOVIEalias0 , PRODUCER AS PRODUCERalias0 , WRITER AS WRITERalias0 , WRITTEN_BY AS WRITTEN_BYalias0 WHERE MOVIEalias0.MID = MADE_BYalias0.MSID AND PRODUCERalias0.NAME = "producer_name0" AND PRODUCERalias0.PID = MADE_BYalias0.PID AND WRITERalias0.NAME = "producer_name0" AND WRITTEN_BYalias0.MSID = MOVIEalias0.MID AND WRITTEN_BYalias0.WID = WRITERalias0.WID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies featuring " actor_name0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the budget of the movie movie_title0 from movie_release_year0 ?<CODESPLIT>SELECT MOVIEalias0.BUDGET FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = movie_release_year0 AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all genre0 produced in year movie_release_year0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "actor_birth_city0" AND ACTORalias0.BIRTH_YEAR > actor_birth_year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors born in " actor_birth_city0 " after actor_birth_year0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "actor_birth_city0" AND ACTORalias0.BIRTH_YEAR > actor_birth_year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies by directors born in " director_birth_city0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.BIRTH_CITY = "director_birth_city0" AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum number of movies in which " actor_name0 " act in a given year ?<CODESPLIT>SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies that were produced by company_name0<CODESPLIT>SELECT MOVIEalias0.TITLE FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " director_name0 " after movie_release_year0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "actor_birth_city0" AND ACTORalias0.BIRTH_YEAR = actor_birth_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies written by " writer_name0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM KEYWORD AS KEYWORDalias0 , MOVIE AS MOVIEalias0 , TAGS AS TAGSalias0 WHERE KEYWORDalias0.KEYWORD = "keyword0" AND TAGSalias0.KID = KEYWORDalias0.ID AND TAGSalias0.MSID = MOVIEalias0.MID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " director_name0 " direct before movie_release_year1 and after movie_release_year0 ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID AND MOVIEalias0.RELEASE_YEAR > movie_release_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies about keyword0 were released after movie_release_year0 ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " director_name0 " and featuring " actor_name0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the actor_gender0 actors born in " actor_birth_city0 " after actor_birth_year0<CODESPLIT>SELECT TV_SERIESalias0.TITLE FROM MADE_BY AS MADE_BYalias0 , PRODUCER AS PRODUCERalias0 , TV_SERIES AS TV_SERIESalias0 WHERE PRODUCERalias0.NAME = "producer_name0" AND PRODUCERalias0.PID = MADE_BYalias0.PID AND TV_SERIESalias0.SID = MADE_BYalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the movie which is classified in the most number of genres<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , TV_SERIES AS TV_SERIESalias0 WHERE CASTalias0.AID = ACTORalias0.AID AND CASTalias0.ROLE = "cast_role0" AND TV_SERIESalias0.SID = CASTalias0.MSID AND TV_SERIESalias0.TITLE = "tv_series_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the writer of the movie " movie_title0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , ACTOR AS ACTORalias1 , CAST AS CASTalias0 , CAST AS CASTalias1 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND ACTORalias1.NAME = "actor_name1" AND CASTalias0.AID = ACTORalias0.AID AND CASTalias1.AID = ACTORalias1.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = CASTalias1.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actor with most number of films<CODESPLIT>SELECT TV_SERIESalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , TV_SERIES AS TV_SERIESalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND TV_SERIESalias0.SID = CASTalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the directors of all movies featuring " actor_name0 "<CODESPLIT>SELECT DIRECTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the producers of all movies in which " actor_name0 " is an actor<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE CASTalias0.AID = ACTORalias0.AID AND CASTalias0.ROLE = "cast_role0" AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What company produced the series tv_series_title0 ?<CODESPLIT>SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , TV_SERIES AS TV_SERIESalias0 WHERE COPYRIGHTalias0.CID = COMPANYalias0.ID AND TV_SERIESalias0.SID = COPYRIGHTalias0.MSID AND TV_SERIESalias0.TITLE = "tv_series_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many companies participated in producing " movie_title0 "<CODESPLIT>SELECT TV_SERIESalias0.TITLE FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , TV_SERIES AS TV_SERIESalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND TV_SERIESalias0.SID = COPYRIGHTalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the budget of the movie movie_title0 from movie_release_year0 ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , TV_SERIES AS TV_SERIESalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND TV_SERIESalias0.SID = COPYRIGHTalias0.MSID AND TV_SERIESalias0.SID = DIRECTED_BYalias0.MSID AND TV_SERIESalias0.TITLE = "tv_series_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the director of the tv series " tv_series_title0 " from tv_series_release_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the actor_gender0 actors from actor_birth_city0<CODESPLIT>SELECT WRITERalias0.NAME FROM MOVIE AS MOVIEalias0 , WRITER AS WRITERalias0 , WRITTEN_BY AS WRITTEN_BYalias0 WHERE MOVIEalias0.TITLE = "movie_title0" AND WRITTEN_BYalias0.MSID = MOVIEalias0.MID AND WRITTEN_BYalias0.WID = WRITERalias0.WID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors from actor_nationality0 born after actor_birth_year0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_YEAR > actor_birth_year0 AND ACTORalias0.NATIONALITY = "actor_nationality0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the actor_gender0 actors born in " actor_birth_city0 " after actor_birth_year0<CODESPLIT>SELECT TV_SERIESalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , TV_SERIES AS TV_SERIESalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND TV_SERIESalias0.SID = CASTalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the actor_gender0 actors in the movie " movie_title0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.GENDER = "actor_gender0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the directors who are from director_nationality0<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NATIONALITY = "director_nationality0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actors who played in the movie " movie_title0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the writer of the movie " movie_title0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NATIONALITY = "actor_nationality0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all films in which " actor_name0 " acted as " cast_role0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND CASTalias0.ROLE = "cast_role0" AND MOVIEalias0.MID = CASTalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the director of " movie_title0 " from<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.RELEASE_YEAR < movie_release_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who acted the role of " cast_role0 "<CODESPLIT>SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , TV_SERIES AS TV_SERIESalias0 WHERE COPYRIGHTalias0.CID = COMPANYalias0.ID AND TV_SERIESalias0.SID = COPYRIGHTalias0.MSID AND TV_SERIESalias0.TITLE = "tv_series_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " director_name0 " after movie_release_year0<CODESPLIT>SELECT GENREalias0.GENRE FROM CLASSIFICATION AS CLASSIFICATIONalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , GENRE AS GENREalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND GENREalias0.GID = CLASSIFICATIONalias0.GID AND MOVIEalias0.MID = CLASSIFICATIONalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which movie had the character " cast_role0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE CASTalias0.ROLE = "cast_role0" AND MOVIEalias0.MID = CASTalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the major roles in the movie " movie_title0 "<CODESPLIT>SELECT CASTalias0.ROLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all director_gender0 directors who worked with the " company_name0 " company<CODESPLIT>SELECT DIRECTORalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.GENDER = "director_gender0" AND MOVIEalias0.MID = COPYRIGHTalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the directors of movies about keyword0<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , KEYWORD AS KEYWORDalias0 , MOVIE AS MOVIEalias0 , TAGS AS TAGSalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND KEYWORDalias0.KEYWORD = "keyword0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND TAGSalias0.KID = KEYWORDalias0.ID AND TAGSalias0.MSID = MOVIEalias0.MID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies in which " actor_name0 " acted after movie_release_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.RELEASE_YEAR > movie_release_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all films in which " actor_name0 " acted as " cast_role0 "<CODESPLIT>SELECT COUNT( DISTINCT ( ACTORalias0.NAME ) ) FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " director_name0 " direct ?<CODESPLIT>SELECT COUNT( DISTINCT ( ACTORalias0.NAME ) ) FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NATIONALITY = "actor_nationality0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who were born in " actor_birth_city0 " in actor_birth_year0<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = movie_release_year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies directed by " director_name0 " per year ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) , MOVIEalias0.RELEASE_YEAR FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID GROUP BY MOVIEalias0.RELEASE_YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " actor_name0 " act in ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , TV_SERIES AS TV_SERIESalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND TV_SERIESalias0.RELEASE_YEAR = tv_series_release_year0 AND TV_SERIESalias0.SID = DIRECTED_BYalias0.MSID AND TV_SERIESalias0.TITLE = "tv_series_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many actors were born in " actor_birth_city0 " after actor_birth_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( ACTORalias0.NAME ) ) FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "actor_birth_city0" AND ACTORalias0.BIRTH_YEAR > actor_birth_year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " actor_name0 " act in before movie_release_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.RELEASE_YEAR < movie_release_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies that " actor_name0 " acts in per year ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies about keyword0 were produced in movie_release_year0 ?<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies about keyword0 were released after movie_release_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM KEYWORD AS KEYWORDalias0 , MOVIE AS MOVIEalias0 , TAGS AS TAGSalias0 WHERE KEYWORDalias0.KEYWORD = "keyword0" AND MOVIEalias0.RELEASE_YEAR > movie_release_year0 AND TAGSalias0.KID = KEYWORDalias0.ID AND TAGSalias0.MSID = MOVIEalias0.MID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " director_name0 " direct after movie_release_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.RELEASE_YEAR > movie_release_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actor who played " cast_role0 " in the movie " movie_title0 "<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.RELEASE_YEAR < movie_release_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the director of " movie_title0 " from<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MADE_BY AS MADE_BYalias0 , MOVIE AS MOVIEalias0 , PRODUCER AS PRODUCERalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.MID = MADE_BYalias0.MSID AND MOVIEalias0.RELEASE_YEAR < movie_release_year0 AND MOVIEalias0.RELEASE_YEAR > movie_release_year1 AND PRODUCERalias0.PID = MADE_BYalias0.PID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did company_name0 produce ?<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many actor_gender0 actors were born in " actor_birth_city0 " after actor_birth_year0 ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NATIONALITY = "director_nationality0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of actors from actor_nationality0 who played in " director_name0 " movies<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NATIONALITY = "actor_nationality0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many companies participated in producing " movie_title0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many actors from actor_nationality0 have acted in " movie_title0 "<CODESPLIT>SELECT COUNT( DISTINCT ( ACTORalias0.NAME ) ) FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NATIONALITY = "actor_nationality0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of companies which worked with " actor_name0 "<CODESPLIT>SELECT COUNT( DISTINCT ( COMPANYalias0.NAME ) ) FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies that star both " actor_name0 " and " actor_name1 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM ACTOR AS ACTORalias0 , ACTOR AS ACTORalias1 , CAST AS CASTalias0 , CAST AS CASTalias1 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND ACTORalias1.NAME = "actor_name1" AND CASTalias0.AID = ACTORalias0.AID AND CASTalias1.AID = ACTORalias1.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = CASTalias1.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who acted in the same movie as " actor_name0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , ACTOR AS ACTORalias1 , CAST AS CASTalias0 , CAST AS CASTalias1 , MOVIE AS MOVIEalias0 WHERE ACTORalias1.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND CASTalias1.AID = ACTORalias1.AID AND MOVIEalias0.MID = CASTalias0.MSID AND MOVIEalias0.MID = CASTalias1.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What movies have the same director as the movie " movie_title0 " ?<CODESPLIT>SELECT MOVIEalias1.TITLE FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTED_BY AS DIRECTED_BYalias1 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 , MOVIE AS MOVIEalias1 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.DID = DIRECTED_BYalias1.DID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" AND MOVIEalias1.MID = DIRECTED_BYalias1.MSID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum number of movies in which " actor_name0 " act in a given year ?<CODESPLIT>SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) AS DERIVED_FIELDalias0 FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = " actor_name0 " AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID GROUP BY MOVIEalias0.RELEASE_YEAR ) AS DERIVED_TABLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actor with most number of films<CODESPLIT>SELECT COUNT( DISTINCT ( COMPANYalias0.NAME ) ) FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , MOVIE AS MOVIEalias0 WHERE COPYRIGHTalias0.CID = COMPANYalias0.ID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID AND MOVIEalias0.TITLE = "movie_title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who acted in the most number of movies directed by " Jim Jarmusch "<CODESPLIT>SELECT DIRECTORalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the movie which is classified in the most number of genres<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CLASSIFICATION AS CLASSIFICATIONalias0 , GENRE AS GENREalias0 , MOVIE AS MOVIEalias0 WHERE GENREalias0.GID = CLASSIFICATIONalias0.GID AND MOVIEalias0.MID = CLASSIFICATIONalias0.MSID GROUP BY MOVIEalias0.TITLE ORDER BY COUNT( DISTINCT ( GENREalias0.GENRE ) ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which movie has the most number of actors from actor_nationality0 ?<CODESPLIT>SELECT WRITERalias0.NAME FROM MOVIE AS MOVIEalias0 , WRITER AS WRITERalias0 , WRITTEN_BY AS WRITTEN_BYalias0 WHERE MOVIEalias0.TITLE = "movie_title0" AND WRITTEN_BYalias0.MSID = MOVIEalias0.MID AND WRITTEN_BYalias0.WID = WRITERalias0.WID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actors who played in the latest movie by " director_name0 "<CODESPLIT>SELECT COUNT( DISTINCT ( MOVIEalias0.TITLE ) ) , MOVIEalias0.RELEASE_YEAR FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID GROUP BY MOVIEalias0.RELEASE_YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and budget of the latest movie by " director_name0 "<CODESPLIT>SELECT MOVIEalias0.BUDGET , MOVIEalias0.TITLE FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the directors who are from director_nationality0<CODESPLIT>SELECT DIRECTORalias0.NAME FROM COMPANY AS COMPANYalias0 , COPYRIGHT AS COPYRIGHTalias0 , DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE COMPANYalias0.NAME = "company_name0" AND COPYRIGHTalias0.CID = COMPANYalias0.ID AND DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = COPYRIGHTalias0.MSID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latest movie by " director_name0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MOVIE AS MOVIEalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND DIRECTORalias0.NAME = "director_name0" AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which producer has worked with the most number of directors ?<CODESPLIT>SELECT PRODUCERalias0.NAME FROM DIRECTED_BY AS DIRECTED_BYalias0 , DIRECTOR AS DIRECTORalias0 , MADE_BY AS MADE_BYalias0 , MOVIE AS MOVIEalias0 , PRODUCER AS PRODUCERalias0 WHERE DIRECTORalias0.DID = DIRECTED_BYalias0.DID AND MOVIEalias0.MID = DIRECTED_BYalias0.MSID AND MOVIEalias0.MID = MADE_BYalias0.MSID AND PRODUCERalias0.PID = MADE_BYalias0.PID GROUP BY PRODUCERalias0.NAME ORDER BY COUNT( DISTINCT ( DIRECTORalias0.NAME ) ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the latest movie which " actor_name0 " acted in<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 , CAST AS CASTalias0 , MOVIE AS MOVIEalias0 WHERE ACTORalias0.NAME = "actor_name0" AND CASTalias0.AID = ACTORalias0.AID AND MOVIEalias0.MID = CASTalias0.MSID ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many name0 are there in city_name0 ?<CODESPLIT>SELECT COUNT( * ) FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.NAME = "name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many food_type0 restaurants are there in the region0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND LOCATIONalias0.STREET_NAME = "street_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many name0 are there in county0 ?<CODESPLIT>SELECT COUNT( * ) FROM GEOGRAPHIC AS GEOGRAPHICalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.COUNTY = "county0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.NAME = "name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.NAME = "name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the best food_type0 restaurant in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is name0 in the region0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 , LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.REGION = "region0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.NAME = "name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me a good restaurant in the region0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND LOCATIONalias0.STREET_NAME = "street_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can we find a restaurant in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants good for food_type0 food ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many places for food_type0 food are there in city_name0 ?<CODESPLIT>SELECT COUNT( * ) FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many food_type0 restaurants are in the county0 ?<CODESPLIT>SELECT COUNT( * ) FROM GEOGRAPHIC AS GEOGRAPHICalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.COUNTY = "county0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.FOOD_TYPE = "food_type0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can i eat food_type0 food in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND LOCATIONalias0.STREET_NAME = "street_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many name0 are there in the region0 ?<CODESPLIT>SELECT COUNT( * ) FROM GEOGRAPHIC AS GEOGRAPHICalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.REGION = "region0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.NAME = "name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me a good restaurant in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the best food_type0 restaurant in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND LOCATIONalias0.STREET_NAME = "street_name0" AND RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can i eat food_type0 food in the region0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 , LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.REGION = "region0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants on street_name0 in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = "region0" ) AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants on street_name0 in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the best restaurant in the region0 for food_type0 food ?<CODESPLIT>SELECT COUNT( * ) FROM GEOGRAPHIC AS GEOGRAPHICalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.COUNTY = "county0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.NAME = "name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can we find some restaurants in the region0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = "region0" ) AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants good for food_type0 food in the region0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 , LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE GEOGRAPHICalias0.REGION = "region0" AND RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME AND RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants on street_name0 in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.FOOD_TYPE = "food_type0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.RATING > 2.5 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can i find a name0 in city_name0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 , RESTAURANT AS RESTAURANTalias0 WHERE LOCATIONalias0.CITY_NAME = "city_name0" AND RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID AND RESTAURANTalias0.NAME = "name0" ;1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers that are coauthored by authorname0 and authorname1<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND AUTHORalias1.AUTHORNAME = "authorname1" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who has written the most keyphrasename0 papers ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citation authorname0 has ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 papers<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has authorname0 written any papers in year0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers has authorname0 written ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR > year0 AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was authorname0 's latest paper ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any keyphrasename0 papers since year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR > year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citations does authorname0 have per year<CODESPLIT>SELECT COUNT( PAPERalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did authorname0 publish at venuename0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did authorname0 publish in year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers were written on keyphrasename0 this year ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers were published at venuename0 in year0 about title0 applied to datasetname0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , VENUE AS VENUEalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND PAPERalias0.TITLE = "title0" AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers are in keyphrasename0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers has authorname0 written ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of papers does authorname0 publish<CODESPLIT>SELECT DISTINCT KEYPHRASEalias0.KEYPHRASEID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What conference does authorname0 publish in ?<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which author has the largest number of publications ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers by authorname0 contain the keyphrases keyphrasename0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where did authorname0 publish his last paper ?<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are most cited papers of authorname0 and authorname1 ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME , CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME IN ( "authorname0" , "authorname1" ) AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY CITEalias0.CITEDPAPERID , AUTHORalias0.AUTHORNAME ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 papers in year0 on keyphrasename0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are popular datasets used in keyphrasename0<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers in venuename0 year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers were written on keyphrasename0 in year0 through 2016 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 for each year<CODESPLIT>SELECT DISTINCT PAPERKEYPHRASEalias0.KEYPHRASEID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR , PAPERKEYPHRASEalias0.KEYPHRASEID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What has authorname0 published in the last misc0 years ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR >= YEAR(CURDATE()) - misc0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>recent research interests of authorname0<CODESPLIT>SELECT DISTINCT KEYPHRASEalias0.KEYPHRASENAME , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 in his venuename0 papers<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>citation count of authorname0 's papers<CODESPLIT>SELECT DISTINCT COUNT( WRITESalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who has written the most keyphrasename0 papers ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many keyphrasename0 papers in venuename0 year0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was authorname0 keyphrasename0 published ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers has authorname0 written in year0<CODESPLIT>SELECT DISTINCT COUNT( 1 ) , PAPERalias0.VENUEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.VENUEID ORDER BY COUNT( 1 ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What keyphrasename0 paper published in venuename0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many co-authors has authorname0 had ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 in year0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what author is most cited ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.JOURNALID >= 0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which papers use datasetname0 or datasetname1 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 WHERE DATASETalias0.DATASETNAME IN ( "datasetname0" , "datasetname1" ) AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID GROUP BY PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>journal articles by authorname0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.JOURNALID >= 0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the year of publication of " title0 " ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERalias0.PAPERID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY PAPERalias0.PAPERID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who published at venuename0 year0 ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers were written on keyphrasename0 this year ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY PAPERalias0.PAPERID , PAPERalias0.YEAR HAVING COUNT( DISTINCT KEYPHRASEalias0.KEYPHRASENAME ) > 1 ORDER BY PAPERalias0.YEAR ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers run experiments on datasetname0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 WHERE DATASETalias0.DATASETNAME LIKE "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did authorname0 cite ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITINGPAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When does authorname0 publish the first venuename0 paper ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , WRITES AS WRITESalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers by authorname0 contain the keyphrases keyphrasename0 ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME , COUNT( WRITESalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME IN ( "authorname0" , "authorname1" ) AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID GROUP BY AUTHORalias0.AUTHORNAME ORDER BY COUNT( WRITESalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrasename0 dataset<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID FROM DATASET AS DATASETalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERDATASET AS PAPERDATASETalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = PAPERDATASETalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where does authorname0 publish ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID , VENUEalias0.VENUEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers appeared at venuename0 last year<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many venuename0 papers did authorname0 written in the last year ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR >= YEAR(CURDATE()) - misc0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many venuename0 papers did authorname0 written in the last year ?<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID , PAPERalias0.YEAR FROM DATASET AS DATASETalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = PAPERDATASETalias0.PAPERID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID ORDER BY PAPERalias0.YEAR ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>datasets mentioned at venuename0<CODESPLIT>SELECT DISTINCT PAPERKEYPHRASEalias0.KEYPHRASEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the papers on keyphrasename0 by authorname0 at venuename0 in year0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers were written on keyphrasename0 in the past year ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers were written on keyphrasename0 this year ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>most common topics at venuename0 year0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who writes papers with authorname0 ?<CODESPLIT>SELECT DISTINCT AUTHORalias1.AUTHORID FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what datasets did authorname0 use ?<CODESPLIT>SELECT DISTINCT PAPERDATASETalias0.DATASETID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me paper on using keyphrasename0 for keyphrasename1<CODESPLIT>SELECT DISTINCT COUNT( 1 ) FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND AUTHORalias1.AUTHORNAME = "authorname1" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>recent keyphrasename0 papers<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list papers published by authorname0<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>authorname0 's publications by year<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers were written on keyphrasename0 this year ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who does authorname0 cite<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>conferences that mention datasetname0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers has authorname0 co-authored since year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>journal papers for keyphrasename0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.JOURNALID >= 0 AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who has the most papers in keyphrasename0 after year0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR > year0 AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citations does authorname0 's keyphrasename0 paper have ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrasename0 papers earlier than year0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are popular datasets used in keyphrasename0<CODESPLIT>SELECT DISTINCT COUNT( PAPERKEYPHRASEalias0.KEYPHRASEID ) , PAPERKEYPHRASEalias0.KEYPHRASEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERKEYPHRASEalias0.KEYPHRASEID ORDER BY COUNT( PAPERKEYPHRASEalias0.KEYPHRASEID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers related to keyphrasename0 cited the dataset datasetname0 ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR > year0 AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>most cited papers on keyphrasename0<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What paper did authorname0 wrote in the 90s ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most cited paper by authorname0 ?<CODESPLIT>SELECT DISTINCT COUNT( 1 ) , PAPERalias0.VENUEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.VENUEID ORDER BY COUNT( 1 ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did authorname0 publish in year0 ?<CODESPLIT>SELECT DISTINCT COUNT( WRITESalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which is the earliest paper by authorname0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > misc0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers has authorname0 and authorname1 written together ?<CODESPLIT>SELECT DISTINCT AUTHORalias1.AUTHORID FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>count of venuename0 papers by author<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who wrote the most papers for venuename0 year0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , VENUEalias0.VENUEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID GROUP BY VENUEalias0.VENUEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most cited paper by authorname0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR >= YEAR(CURDATE()) - misc0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers in venuename0 year0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers from year0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers does authorname0 have in venuename0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 papers by author<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 and authorname1<CODESPLIT>SELECT DISTINCT PAPERalias0.TITLE FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME LIKE "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>topics at venuename0 year0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , KEYPHRASEalias0.KEYPHRASEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY KEYPHRASEalias0.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latest keyphrasename0 paper from authorname0 's group ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , KEYPHRASEalias0.KEYPHRASEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY KEYPHRASEalias0.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did authorname0 write last year ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR == YEAR(CURDATE()) - misc0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers related to keyphrasename0 in venuename0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Papers on datasetname0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>conferences in year0<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many venuename0 year0 papers have more than misc0 citations ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , WRITESalias0.AUTHORID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are some keyphrasename0 papers that authorname0 did not write ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME , PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME <> "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers published in the last year<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR > year0 AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who works on keyphrasename0 for keyphrasename1<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID HAVING COUNT( DISTINCT KEYPHRASEalias0.KEYPHRASENAME ) > 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was authorname0 's first publication ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME , CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME IN ( "authorname0" , "authorname1" ) AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY CITEalias0.CITEDPAPERID , AUTHORalias0.AUTHORNAME ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrasename0 papers citing venuename0 papers<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who cites authorname0 the most<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , WRITESalias1.AUTHORID FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID GROUP BY WRITESalias1.AUTHORID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers has authorname0 written in year0<CODESPLIT>SELECT DISTINCT COUNT( 1 ) , PAPERalias0.JOURNALID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.JOURNALID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 at venuename0 or venuename1<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what papers have fewer than misc0 citations by venuename0 papers ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) < misc0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the limit0 most recent papers of authorname0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC LIMIT limit0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What were the papers published at venuename0 year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List today 's journals<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME , PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME <> "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 papers in year0 with title0 in the title<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , WRITES AS WRITESalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are some papers dealing with keyphrasename0 in datasetname0 ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY AUTHORalias0.AUTHORNAME ORDER BY COUNT( DISTINCT WRITESalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who wrote keyphrasename0 ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME LIKE "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers by authorname1 are cited by authorname0<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , CITE AS CITEalias0 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND AUTHORalias1.AUTHORNAME = "authorname1" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which venue publishes the most papers about keyphrasename0<CODESPLIT>SELECT DISTINCT WRITESalias2.AUTHORID FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 , WRITES AS WRITESalias2 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND AUTHORalias1.AUTHORNAME = "authorname1" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID AND WRITESalias2.PAPERID = WRITESalias1.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what papers are in the venueid0 of year0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , VENUE AS VENUEalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What conference does authorname0 publish the most in<CODESPLIT>SELECT DISTINCT COUNT( 1 ) , DATASETalias0.DATASETID FROM DATASET AS DATASETalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERDATASET AS PAPERDATASETalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = PAPERDATASETalias0.PAPERID GROUP BY DATASETalias0.DATASETID ORDER BY COUNT( 1 ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Since year0 who has published works about keyphrasename0 ( Inflammatory Bowel Disease ) and keyphrasename1 ?<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , VENUE AS VENUEalias0 WHERE PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>year0 papers using datasetname0<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR , WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME LIKE "authorname0" AND PAPERalias0.YEAR LIKE "year0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the earliest keyphrasename1 paper for keyphrasename0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY PAPERalias0.PAPERID , PAPERalias0.YEAR HAVING COUNT( DISTINCT KEYPHRASEalias0.KEYPHRASENAME ) > 1 ORDER BY PAPERalias0.YEAR ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What years did authorname0 publish papers in ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.JOURNALID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What authors wrote papers about keyphrasename0 in year0 ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are popular datasets used in keyphrasename0<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who cites authorname0 the most<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who writes for venuename0 or venuename1 ?<CODESPLIT>SELECT DISTINCT PAPERDATASETalias0.DATASETID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which papers use datasetname0 or datasetname1 ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , KEYPHRASEalias0.KEYPHRASENAME FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY KEYPHRASEalias0.KEYPHRASENAME ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find journals about keyphrasename0 .<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY PAPERalias0.JOURNALID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 for each year<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM DATASET AS DATASETalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = PAPERDATASETalias0.PAPERID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in what journals does authorname0 publish ?<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 authors<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latest keyphrasename0 paper from authorname0 's group ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITINGPAPERID GROUP BY CITEalias0.CITEDPAPERID ORDER BY DERIVED_FIELDalias0 DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which venue publishes the most papers about keyphrasename0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , VENUEalias0.VENUEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID GROUP BY VENUEalias0.VENUEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many publications were added to the journalname0 journal this year ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.JOURNALID >= 0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What area cites authorname0 ?<CODESPLIT>SELECT DISTINCT FIELDalias0.FIELDID FROM AUTHOR AS AUTHORalias0 , FIELD AS FIELDalias0 , PAPER AS PAPERalias0 , PAPERFIELD AS PAPERFIELDalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERFIELDalias0.FIELDID = FIELDalias0.FIELDID AND PAPERalias0.PAPERID = PAPERFIELDalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the publication titles by authorname0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME LIKE "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.YEAR ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers published in venuename0 year0 by authorname0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are some papers dealing with keyphrasename0 in datasetname0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the topic of best paper in year0 venuename0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In what year did authorname0 publish the most papers<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME IN ( "keyphrasename0" , "keyphrasename1" ) AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID HAVING COUNT( DISTINCT KEYPHRASEalias0.KEYPHRASENAME ) > 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>conferences that mention datasetname0<CODESPLIT>SELECT DISTINCT KEYPHRASEalias0.KEYPHRASENAME , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>first keyphrasename0 paper<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what papers were published in journalname0 in year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM JOURNAL AS JOURNALalias0 , PAPER AS PAPERalias0 WHERE JOURNALalias0.JOURNALNAME = "journalname0" AND PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID AND PAPERalias0.YEAR = year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 papers<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venue for keyphrasename0<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers were written on keyphrasename0 in year0 through 2016 ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , CITE AS CITEalias0 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND AUTHORalias1.AUTHORNAME = "authorname1" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has published the most number of papers with authorname0 ?<CODESPLIT>SELECT DISTINCT COUNT( 1 ) , WRITESalias1.AUTHORID FROM AUTHOR AS AUTHORalias0 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID GROUP BY WRITESalias1.AUTHORID ORDER BY COUNT( 1 ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the best keyphrasename0 conferences ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERalias0.VENUEID FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY PAPERalias0.VENUEID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venuename0 papers by author<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers with more than misc0 citations<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > misc0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many co-authors has authorname0 had ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE PAPERalias0.YEAR = year0 AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what keyphrase does authorname0 write about that gets most citations ?<CODESPLIT>SELECT DISTINCT KEYPHRASEalias0.KEYPHRASENAME , SUM( PAPERalias0.NUMCITEDBY ) FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY KEYPHRASEalias0.KEYPHRASENAME ORDER BY SUM( PAPERalias0.NUMCITEDBY ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find me paper on using keyphrasename0 for keyphrasename1<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID HAVING COUNT( PAPERalias0.PAPERID ) >= misc0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers that were not published in the last year<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR <> year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was authorname0 keyphrasename0 published ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the latest papers by authorname0 and authorname1 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR , WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME IN ( "authorname0" , "authorname1" ) AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.PAPERID HAVING COUNT( DISTINCT WRITESalias0.AUTHORID ) = 2 ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers does authorname0 have in venuename0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 GROUP BY PAPERalias0.JOURNALID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who has written the most keyphrasename0 papers ?<CODESPLIT>SELECT DISTINCT COUNT( 1 ) , WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( 1 ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most popular paper this year in venuename0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citations does authorname0 have per year<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , CITE AS CITEalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What conference does authorname0 publish in ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , WRITES AS WRITESalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What articles have been published since year0 about title0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.TITLE FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE LIKE "title0" AND PAPERalias0.YEAR > year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>authorname0 's keyphrasename0 venuename0 paper<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where did authorname0 publish his last paper ?<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.VENUEID , PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has published both in venuename0 and venuename1 ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME IN ( "venuename0" , "venuename1" ) AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID HAVING COUNT( DISTINCT VENUEalias0.VENUEID ) = 2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 in his venuename0 papers<CODESPLIT>SELECT DISTINCT PAPERKEYPHRASEalias0.KEYPHRASEID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are the prominent researchers in keyphrasename0 in year0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the papers at venuename0 in year0 using datasetname0 dataset<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM DATASET AS DATASETalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , VENUE AS VENUEalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrasename0 papers citing venuename0 papers<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = CITEalias0.CITINGPAPERID AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers by authorname1 are cited by authorname0<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , WRITESalias0.AUTHORID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME IN ( "venuename0" , "venuename1" ) AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID HAVING COUNT( DISTINCT VENUEalias0.VENUEID ) = 2 ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>top authors working on datasetname0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM CITE AS CITEalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many venuename0 year0 papers have more than misc0 citations ?<CODESPLIT>SELECT DISTINCT ( PAPERalias0.PAPERID ) , COUNT( CITEalias0.CITINGPAPERID ) FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY PAPERalias0.PAPERID HAVING COUNT( CITEalias0.CITINGPAPERID ) > misc0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the topic of best paper in year0 venuename0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERKEYPHRASEalias0.KEYPHRASEID , PAPERalias0.PAPERID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY PAPERalias0.PAPERID , PAPERKEYPHRASEalias0.KEYPHRASEID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who else was on the paper with authorname0 and authorname1 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME <> "authorname0" AND PAPERalias0.YEAR > year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID AND WRITESalias0.PAPERID IN ( SELECT WRITESalias1.PAPERID FROM AUTHOR AS AUTHORalias1 , WRITES AS WRITESalias1 WHERE AUTHORalias1.AUTHORNAME LIKE "authorname0" AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what topics does authorname0 write about most ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > misc0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of authorname0 's keyphrasename0 venuename0 paper ?<CODESPLIT>SELECT DISTINCT PAPERalias0.TITLE FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME LIKE "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Is venuename0 or venuename1 better ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) , VENUEalias0.VENUENAME FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME IN ( "venuename0" , "venuename1" ) GROUP BY VENUEalias0.VENUENAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers used datasetname0 datasets in venuename0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who writes papers with authorname0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR , WRITESalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What venues are for venuename0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR DESC LIMIT limit0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>authorname0 keyphrasename0 paper<CODESPLIT>SELECT DISTINCT MAX( PAPERalias0.YEAR ) FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>I want the co-authors of papers on keyphrasename0 with authorname0<CODESPLIT>SELECT DISTINCT AUTHORalias1.AUTHORID FROM AUTHOR AS AUTHORalias0 , AUTHOR AS AUTHORalias1 , KEYPHRASE AS KEYPHRASEalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , WRITES AS WRITESalias0 , WRITES AS WRITESalias1 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID AND WRITESalias1.PAPERID = WRITESalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers does authorname0 publish outside of venuename0 area ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , KEYPHRASEalias0.KEYPHRASEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY KEYPHRASEalias0.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which journal did authorname0 publish his last paper ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID , PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY PAPERalias0.JOURNALID , PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the venue of title0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM DATASET AS DATASETalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERDATASET AS PAPERDATASETalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE DATASETalias0.DATASETNAME = "datasetname0" AND KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERDATASETalias0.PAPERID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many authors published at venuename0 in year0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND PAPERalias0.YEAR = year0 GROUP BY PAPERalias0.JOURNALID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by authorname0 at venuename0 or venuename1<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME IN ( "venuename0" , "venuename1" ) AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the year of publication of " title0 " ?<CODESPLIT>SELECT DISTINCT PAPERalias0.TITLE , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "title0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citation authorname0 has ?<CODESPLIT>SELECT DISTINCT KEYPHRASEalias0.KEYPHRASEID FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 , VENUE AS VENUEalias0 WHERE PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who published the most papers at venuename1 or venuename0 since year0<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ORDER BY PAPERalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers in year0<CODESPLIT>SELECT DISTINCT COUNT( 1 ) FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the papers of authorname0 at venuename0 or venuename1 last year<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR = year0 AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME IN ( "venuename0" , "venuename1" ) AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the papers written by authorname0 before year0 .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM AUTHOR AS AUTHORalias0 , PAPER AS PAPERalias0 , WRITES AS WRITESalias0 WHERE AUTHORalias0.AUTHORNAME = "authorname0" AND PAPERalias0.YEAR < year0 AND WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers in keyphrasename0 for each year<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM KEYPHRASE AS KEYPHRASEalias0 , PAPER AS PAPERalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERalias0.PAPERID = PAPERKEYPHRASEalias0.PAPERID GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers with at least misc0 citations<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) >= misc0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what was the first keyphrasename0 paper ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 WHERE PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID AND VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which has more publications , venuename0 or venuename1 ?<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID FROM DATASET AS DATASETalias0 , KEYPHRASE AS KEYPHRASEalias0 , PAPERDATASET AS PAPERDATASETalias0 , PAPERKEYPHRASE AS PAPERKEYPHRASEalias0 WHERE KEYPHRASEalias0.KEYPHRASENAME = "keyphrasename0" AND PAPERDATASETalias0.DATASETID = DATASETalias0.DATASETID AND PAPERKEYPHRASEalias0.KEYPHRASEID = KEYPHRASEalias0.KEYPHRASEID AND PAPERKEYPHRASEalias0.PAPERID = PAPERDATASETalias0.PAPERID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of authorname0 's keyphrasename0 paper ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , WRITESalias0.AUTHORID FROM CITE AS CITEalias0 , PAPER AS PAPERalias0 , VENUE AS VENUEalias0 , WRITES AS WRITESalias0 WHERE VENUEalias0.VENUEID = PAPERalias0.VENUEID AND VENUEalias0.VENUENAME = "venuename0" AND WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID AND WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many heads of the departments are older than var0 ?<CODESPLIT>SELECT COUNT( * ) FROM HEAD AS HEADalias0 WHERE HEADalias0.AGE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name , born state and age of the heads of departments ordered by age .<CODESPLIT>SELECT HEADalias0.AGE , HEADalias0.BORN_STATE , HEADalias0.NAME FROM HEAD AS HEADalias0 ORDER BY HEADalias0.AGE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the var1 most common cloud cover rates in the region of zip code var0 ?<CODESPLIT>SELECT DEPARTMENTalias0.BUDGET_IN_BILLIONS , DEPARTMENTalias0.CREATION , DEPARTMENTalias0.NAME FROM DEPARTMENT AS DEPARTMENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum budget of the departments ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" AND PUBLICATIONalias0.CITATION_NUM > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the county that the delegates on " var0 " committee belong to ?<CODESPLIT>SELECT AVG( DEPARTMENTalias0.NUM_EMPLOYEES ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.RANKING BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the heads who are born outside the var0 state ?<CODESPLIT>SELECT COUNT( DISTINCT STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display those departments where more than ten employees work who got a commission percentage .<CODESPLIT>SELECT DISTINCT DEPARTMENTalias0.CREATION FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID JOIN HEAD AS HEADalias0 ON MANAGEMENTalias0.HEAD_ID = HEADalias0.HEAD_ID WHERE HEADalias0.BORN_STATE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the states where at least var0 heads were born ?<CODESPLIT>SELECT HEADalias0.BORN_STATE FROM HEAD AS HEADalias0 GROUP BY HEADalias0.BORN_STATE HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which year were most departments established ?<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and number of employees for the departments managed by heads whose temporary acting value is ' var0 ' ?<CODESPLIT>SELECT DEPARTMENTalias0.NAME , DEPARTMENTalias0.NUM_EMPLOYEES FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID WHERE MANAGEMENTalias0.TEMPORARY_ACTING = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many acting statuses are there ?<CODESPLIT>SELECT COUNT( DISTINCT MANAGEMENTalias0.TEMPORARY_ACTING ) FROM MANAGEMENT AS MANAGEMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many departments are led by heads who are not mentioned ?<CODESPLIT>SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DEPARTMENT_ID NOT IN ( SELECT MANAGEMENTalias0.DEPARTMENT_ID FROM MANAGEMENT AS MANAGEMENTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct ages of the heads who are acting ?<CODESPLIT>SELECT PEOPLEalias0.WEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.SNATCH > var0 OR PEOPLEalias0.HEIGHT > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the states where both the secretary of ' var0 ' department and the secretary of ' var1 ' were born .<CODESPLIT>SELECT AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = "var1" AND FLIGHTalias0.ORIGIN = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee name ( first name and last name ) and hire date for all employees in the same department as var0 excluding var0 .<CODESPLIT>SELECT COUNT( MANAGEMENTalias0.* ) , DEPARTMENTalias0.DEPARTMENT_ID , DEPARTMENTalias0.NAME FROM MANAGEMENT AS MANAGEMENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID GROUP BY DEPARTMENTalias0.DEPARTMENT_ID HAVING COUNT( MANAGEMENTalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments .<CODESPLIT>SELECT HEADalias0.HEAD_ID , HEADalias0.NAME FROM HEAD AS HEADalias0 WHERE HEADalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many farms are there ?<CODESPLIT>SELECT COUNT( * ) FROM FARM AS FARMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the total number of horses on farms in ascending order .<CODESPLIT>SELECT FARMalias0.TOTAL_HORSES FROM FARM AS FARMalias0 ORDER BY FARMalias0.TOTAL_HORSES ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the hosts of competitions whose theme is not " var0 " ?<CODESPLIT>SELECT FARM_COMPETITIONalias0.HOSTS FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 WHERE FARM_COMPETITIONalias0.THEME != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the themes of farm competitions sorted by year in ascending order ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of working horses of farms with more than var0 total number of horses ?<CODESPLIT>SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = "var0" GROUP BY TRANSACTIONSalias0.INVESTOR_ID HAVING COUNT( * ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum number of cows across all farms .<CODESPLIT>SELECT MAX( FARMalias0.COWS ) , MIN( FARMalias0.COWS ) FROM FARM AS FARMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different statuses do cities have ?<CODESPLIT>SELECT COUNT( DISTINCT CITYalias0.STATUS ) FROM CITY AS CITYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List official names of cities in descending order of population .<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.POPULATION DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the official name and status of the city with the largest population .<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME , CITYalias0.STATUS FROM CITY AS CITYalias0 ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the years and the official names of the host cities of competitions .<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states are next to major rivers<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many calendar items do we have ?<CODESPLIT>SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the themes of competitions with host cities having populations larger than var0 .<CODESPLIT>SELECT FARM_COMPETITIONalias0.THEME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID WHERE CITYalias0.POPULATION > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many clubs does the student named " var0 var1 " belong to ?<CODESPLIT>SELECT AVG( CITYalias0.POPULATION ) , CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATUS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the different statuses , ordered by the number of cities that have each .<CODESPLIT>SELECT COUNT( * ) FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the most common type of Status across cities .<CODESPLIT>SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the official names of cities that have not held any competition .<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_ID NOT IN ( SELECT FARM_COMPETITIONalias0.HOST_CITY_ID FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the status shared by cities with population bigger than var0 and smaller than var1 .<CODESPLIT>SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 INTERSECT SELECT CITYalias1.STATUS FROM CITY AS CITYalias1 WHERE CITYalias1.POPULATION < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and age of all var0s in order of their age .<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION < var1 OR CITYalias0.POPULATION > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the census ranking of cities whose status are not " var0 " .<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which course has most number of registered students ?<CODESPLIT>SELECT AVG( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is id of students who registered some courses but the least number of courses in these students ?<CODESPLIT>SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 GROUP BY STUDENT_ID ORDER BY COUNT( * ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the first name and last name of all candidates ?<CODESPLIT>SELECT PEOPLEalias0.FIRST_NAME , PEOPLEalias0.LAST_NAME FROM CANDIDATES AS CANDIDATESalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id of students who never attends courses ?<CODESPLIT>SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the order id and customer id of the oldest order ?<CODESPLIT>SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first name and last name for all the instructors .<CODESPLIT>SELECT COURSESalias0.COURSE_NAME , STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 JOIN COURSES AS COURSESalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is detail of the student who most recently registered course ?<CODESPLIT>SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average price of the products for each category ?<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses do the student whose id is var0 attend ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find id of the candidate whose email is var0 ?<CODESPLIT>SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find id of the candidate who most recently accessed the course ?<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of payment ?<CODESPLIT>SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id of students who registered some courses and the number of their registered courses ?<CODESPLIT>SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 JOIN HAPPY_HOUR AS HAPPY_HOURalias0 ON SHOPalias0.SHOP_ID = HAPPY_HOURalias0.SHOP_ID WHERE HAPPY_HOURalias0.MONTH = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many registed students do each course have ? List course name and the number of their registered students ?<CODESPLIT>SELECT COUNT( * ) , COURSESalias0.COURSE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN COURSES AS COURSESalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average training hours of all players ?<CODESPLIT>SELECT CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID FROM CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the cell mobile number of the candidates whose assessment code is " var0 " ?<CODESPLIT>SELECT PEOPLEalias0.CELL_MOBILE_NUMBER FROM CANDIDATES AS CANDIDATESalias0 JOIN CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 ON CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID = CANDIDATESalias0.CANDIDATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find how many school locations have the word ' var0 ' .<CODESPLIT>SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the student who most recently registered course var0 ?<CODESPLIT>SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE COURSE_ID = var0 ORDER BY STUDENT_COURSE_ATTENDANCEalias0.DATE_OF_ATTENDANCE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find distinct cities of addresses of people ?<CODESPLIT>SELECT * FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the phone number of employees whose salary is in the range of var0 and var1 ?<CODESPLIT>SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN PEOPLE_ADDRESSES AS PEOPLE_ADDRESSESalias0 ON PEOPLE_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = PEOPLE_ADDRESSESalias0.PERSON_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of courses in alphabetical order ?<CODESPLIT>SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 ORDER BY COURSESalias0.COURSE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first names of people in alphabetical order ?<CODESPLIT>SELECT PEOPLEalias0.FIRST_NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.FIRST_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the title and director for the movie with highest worldwide gross in the year var0 or before ?<CODESPLIT>SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of courses which are registered or attended by student whose id is var0 ?<CODESPLIT>SELECT STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = var0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all info of students who registered courses but not attended courses ?<CODESPLIT>SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 UNION SELECT DOCUMENTS_TO_BE_DESTROYEDalias1.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id of students who registered course var0 in the order of registration date .<CODESPLIT>SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = "var0" ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id of students who attended var0 courses in the order of attendance date .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_CODE NOT IN ( SELECT DOCUMENT_SECTIONSalias0.DOCUMENT_CODE FROM DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the dates when the max temperature was higher than var0 .<CODESPLIT>SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MAX_TEMPERATURE_F > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of stations that have latitude lower than var0 ?<CODESPLIT>SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE LAT < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each city , return the highest latitude among its stations .<CODESPLIT>SELECT MAX( LAT ) , STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.CITY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many events did not have any participants ?<CODESPLIT>SELECT TRIPalias0.END_STATION_NAME , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.ID LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average latitude and longitude of stations located in var0 city ?<CODESPLIT>SELECT DISTINCT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID JOIN AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ON CUSTOMERS_POLICIESalias0.POLICY_ID = AVAILABLE_POLICIESalias0.POLICY_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ( SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_POLICIESalias1.CUSTOMER_ID GROUP BY CUSTOMERSalias1.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the trip that has the shortest duration ?<CODESPLIT>SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.DURATION LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total and maximum duration of trips with bike id var0 ?<CODESPLIT>SELECT MAX( TRIPalias0.DURATION ) , SUM( TRIPalias0.DURATION ) FROM TRIP AS TRIPalias0 WHERE TRIPalias0.BIKE_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each zip code , return the average mean temperature of August there .<CODESPLIT>SELECT AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE DATE LIKE "var0/%" GROUP BY WEATHERalias0.ZIP_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many king beds are there ?<CODESPLIT>SELECT COUNT( DISTINCT TRIPalias0.BIKE_ID ) FROM TRIP AS TRIPalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of distinct cities the stations are located at ?<CODESPLIT>SELECT COUNT( * ) FROM EVENTS AS EVENTSalias0 WHERE EVENTSalias0.EVENT_ID NOT IN ( SELECT PARTICIPANTS_IN_EVENTSalias0.EVENT_ID FROM PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many stations does var0 city has ?<CODESPLIT>SELECT COUNT( * ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the unique name for stations that have ever had var0 bikes available .<CODESPLIT>SELECT DISTINCT STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the tourist attractions var0 and var1 visit ?<CODESPLIT>SELECT TRIPalias0.START_STATION_ID , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 WHERE START_DATE LIKE "var0/%" GROUP BY START_STATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different kinds of information sources are there for injury accidents ?<CODESPLIT>SELECT TRIPalias0.BIKE_ID FROM TRIP AS TRIPalias0 WHERE ZIP_CODE = var0 GROUP BY BIKE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many days had both mean humidity above var0 and mean visibility above var1 ?<CODESPLIT>SELECT SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latitude , longitude , city of the station from which the shortest trip started ?<CODESPLIT>SELECT COUNT( * ) FROM PLAYERS AS PLAYERSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " on var1 after var2 .<CODESPLIT>SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = "var0" INTERSECT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and ids of stations that had more than var0 bikes available on average or were installed in December ?<CODESPLIT>SELECT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var0 UNION SELECT STATIONalias1.ID , STATIONalias1.NAME FROM STATION AS STATIONalias1 WHERE STATIONalias1.INSTALLATION_DATE LIKE "var1/%" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of schools that have some students playing in var0 and var1 positions .<CODESPLIT>SELECT WEATHERalias0.CLOUD_COVER FROM WEATHER AS WEATHERalias0 WHERE ZIP_CODE = var0 GROUP BY CLOUD_COVER ORDER BY COUNT( WEATHERalias0.* ) DESC LIMIT var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the zip code in which the average mean sea level pressure is the lowest ?<CODESPLIT>SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY ZIP_CODE ORDER BY AVG( WEATHERalias0.MEAN_SEA_LEVEL_PRESSURE_INCHES ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average bike availability in stations that are not located in var0 ?<CODESPLIT>SELECT AVG( STATUSalias0.BIKES_AVAILABLE ) FROM STATUS AS STATUSalias0 WHERE STATUSalias0.STATION_ID NOT IN ( SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average longitude of stations that never had bike availability more than var0 ?<CODESPLIT>SELECT AVG( LONG ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.ID NOT IN ( SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING MAX( STATUSalias0.BIKES_AVAILABLE ) > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When and in what zip code did max temperature reach var0 ?<CODESPLIT>SELECT DEBATEalias0.DATE , DEBATEalias0.VENUE , PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.NEGATIVE ORDER BY PEOPLEalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me ids for all the trip that took place in a zip code area with average mean temperature above var0 .<CODESPLIT>SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN WEATHER AS WEATHERalias0 ON WEATHERalias0.ZIP_CODE = TRIPalias0.ZIP_CODE GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each zip code , return how many times max wind speed reached var0 ?<CODESPLIT>SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>On which day and in which zip code was the min dew point lower than any day in zip code var0 ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE CANDIDATEalias0.SUPPORT_RATE < CANDIDATEalias0.OPPOSE_RATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each trip , return its ending station's installation date .<CODESPLIT>SELECT STATIONalias0.INSTALLATION_DATE , TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the highest salary among each team ? List the team name , id and maximum salary .<CODESPLIT>SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ORDER BY STATIONalias0.DOCK_COUNT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Count the number of trips that did not end in var0 city .<CODESPLIT>SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = "var0" INTERSECT SELECT STORMalias1.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias1 JOIN REGION AS REGIONalias1 ON REGIONalias1.REGION_ID = AFFECTED_REGIONalias1.REGION_ID JOIN STORM AS STORMalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID WHERE REGIONalias1.REGION_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct visit dates ?<CODESPLIT>SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.EVENTS != "var1" AND WEATHERalias0.EVENTS != "var2" AND WEATHERalias0.ZIP_CODE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the invoice number and invoice date for the invoice with most number of transactions ?<CODESPLIT>SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE LAT > var0 EXCEPT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING MIN( STATUSalias0.BIKES_AVAILABLE ) < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are names of stations that have average bike availability above var0 and are not located in var1 city ?<CODESPLIT>SELECT SUM( ROOMSalias0.BEDS ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all products along with the number of complaints that they have received .<CODESPLIT>SELECT LAT , STATIONalias0.CITY , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY LAT LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the date , mean temperature and mean humidity for the top var0 days with the largest max gust speeds ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND PAPERalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and the number of stations for all the cities that have at least var0 stations .<CODESPLIT>SELECT COUNT( * ) , STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.CITY HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids and names of stations from which at least var0 trips started .<CODESPLIT>SELECT TRIPalias0.START_STATION_ID , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.START_STATION_NAME HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the zip code in which the average mean visibility is lower than var0 .<CODESPLIT>SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_VISIBILITY_MILES ) < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the cities in a decreasing order of each city's stations ' highest latitude .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID GROUP BY MOVIEalias0.TITLE ORDER BY COUNT( DISTINCT GENREalias0.GENRE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the origins from which more than var0 train starts .<CODESPLIT>SELECT WEATHERalias0.CLOUD_COVER , WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.CLOUD_COVER DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and durations of the trips with the top var0 durations ?<CODESPLIT>SELECT TRIPalias0.DURATION , TRIPalias0.ID FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.DURATION DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each station , return its longitude and the average duration of trips that started from the station .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT EXHIBITIONalias0.ARTIST_ID FROM EXHIBITION AS EXHIBITIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each station , find its latitude and the minimum duration of trips that ended at the station .<CODESPLIT>SELECT MIN( TRIPalias0.DURATION ) , STATIONalias0.LAT , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID GROUP BY TRIPalias0.END_STATION_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the distinct stations from which a trip of duration below var0 started .<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME , COUNT( CITEalias0.CITINGPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY AUTHORalias0.AUTHORNAME ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the zip codes in which the max dew point have never reached var0 .<CODESPLIT>SELECT DISTINCT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 EXCEPT SELECT DISTINCT WEATHERalias1.ZIP_CODE FROM WEATHER AS WEATHERalias1 WHERE WEATHERalias1.MAX_DEW_POINT_F >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id for the trips that lasted at least as long as the average duration of trips in zip code var0 .<CODESPLIT>SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 WHERE TRIPalias0.DURATION >= ( SELECT AVG( TRIPalias1.DURATION ) FROM TRIP AS TRIPalias1 WHERE TRIPalias1.ZIP_CODE = var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates in which the mean sea level pressure was between var0 and var1 ?<CODESPLIT>SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MEAN_SEA_LEVEL_PRESSURE_INCHES BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the day in which the difference between the max temperature and min temperature was the smallest . Also report the difference .<CODESPLIT>SELECT WEATHERalias0.DATE , WEATHERalias0.MAX_TEMPERATURE_F - WEATHERalias0.MIN_TEMPERATURE_F FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.MAX_TEMPERATURE_F - WEATHERalias0.MIN_TEMPERATURE_F LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the stations that have ever had more than var0 bikes available ?<CODESPLIT>SELECT DISTINCT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the zip code where the average mean humidity is below var0 and at least var1 trips took place .<CODESPLIT>SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.MUSICAL_ID NOT IN ( SELECT ACTORalias0.MUSICAL_ID FROM ACTOR AS ACTORalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of stations that are located in var0 city but have never been the ending point of trips more than var1 times ?<CODESPLIT>SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = "var0" EXCEPT SELECT TRIPalias0.END_STATION_NAME FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.END_STATION_NAME HAVING COUNT( * ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many trips started from var0 city and ended at var1 city ?<CODESPLIT>SELECT COUNT( * ) FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 JOIN STATION AS STATIONalias1 JOIN TRIP AS TRIPalias1 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID AND TRIPalias1.ID = TRIPalias0.ID AND TRIPalias1.END_STATION_ID = STATIONalias1.ID WHERE STATIONalias0.CITY = "var0" AND STATIONalias1.CITY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average latitude and longitude of the starting points of all trips ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many books are there ?<CODESPLIT>SELECT COUNT( BOOKalias0.* ) FROM BOOK AS BOOKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and names of the countries which have more than var0 car makers or produce the ' var1 ' model ?<CODESPLIT>SELECT BOOKalias0.WRITER FROM BOOK AS BOOKalias0 ORDER BY BOOKalias0.WRITER ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the nationalities that are shared by at least two people ?<CODESPLIT>SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 ORDER BY BOOKalias0.ISSUES ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of technicians who have not been assigned to repair machines .<CODESPLIT>SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 WHERE BOOKalias0.WRITER != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the title and issues of the books ?<CODESPLIT>SELECT BOOKalias0.ISSUES , BOOKalias0.TITLE FROM BOOK AS BOOKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates of publications in descending order of price ?<CODESPLIT>SELECT DISTINCT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct publishers of publications with price higher than var0 ?<CODESPLIT>SELECT AVG( TRACKalias0.UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the publisher of the publication with the highest price .<CODESPLIT>SELECT * FROM HIRING AS HIRINGalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the publication dates of publications with var0 lowest prices .<CODESPLIT>SELECT OWNERSalias0.STATE FROM OWNERS AS OWNERSalias0 INTERSECT SELECT PROFESSIONALSalias0.STATE FROM PROFESSIONALS AS PROFESSIONALSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are in states bordering var1<CODESPLIT>SELECT BOOKalias0.TITLE , PUBLICATIONalias0.PUBLICATION_DATE FROM BOOK AS BOOKalias0 JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.BOOK_ID = BOOKalias0.BOOK_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of all the order items whose product id is var0 .<CODESPLIT>SELECT BOOKalias0.WRITER FROM BOOK AS BOOKalias0 JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.BOOK_ID = BOOKalias0.BOOK_ID WHERE PUBLICATIONalias0.PRICE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the titles of books in descending order of publication price .<CODESPLIT>SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.BOOK_ID = BOOKalias0.BOOK_ID ORDER BY PUBLICATIONalias0.PRICE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , latitude , and city of the station with the lowest latitude ?<CODESPLIT>SELECT PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATIONalias0.PUBLISHER HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different publishers together with the number of publications they have .<CODESPLIT>SELECT COUNT( * ) , PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATIONalias0.PUBLISHER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common publication date .<CODESPLIT>SELECT PUBLICATIONalias0.PUBLICATION_DATE FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATION_DATE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the writers who have written more than one book .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the titles of books that are not published .<CODESPLIT>SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 WHERE BOOKalias0.BOOK_ID NOT IN ( SELECT PUBLICATIONalias0.BOOK_ID FROM PUBLICATION AS PUBLICATIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the publishers that have publications with price higher than var0 and publications with price lower than var1 .<CODESPLIT>SELECT PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.PRICE > var0 INTERSECT SELECT PUBLICATIONalias1.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias1 WHERE PUBLICATIONalias1.PRICE < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and office of history professor who did not get a Ph.D . degree .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.PUBLICATION_DATE ) FROM PUBLICATION AS PUBLICATIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the prices of publications whose publisher is either " var0 " or " var1 "<CODESPLIT>SELECT PUBLICATIONalias0.PRICE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.PUBLISHER = "var0" OR PUBLICATIONalias0.PUBLISHER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many actors are there ?<CODESPLIT>SELECT COUNT( ACTORalias0.* ) FROM ACTOR AS ACTORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List in alphabetic order all different amenities .<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the characters and duration of actors ?<CODESPLIT>SELECT ACTORalias0.CHARACTER , ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id , country , city and name of the airports ordered alphabetically by the name .<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.AGE != var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of the students who participate in var0 and var1 .<CODESPLIT>SELECT ACTORalias0.CHARACTER FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the duration of the oldest actor ?<CODESPLIT>SELECT ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of musicals with nominee " var0 " ?<CODESPLIT>SELECT AVG( CARS_DATAalias0.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct nominees of the musicals with the award that is not " var0 " ?<CODESPLIT>SELECT DISTINCT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of actors and names of musicals they are in .<CODESPLIT>SELECT ACTORalias0.NAME , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are the prominent researchers in var0 in var1 ?<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID WHERE MUSICALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of actors in descending order of the year their musical is awarded .<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ORDER BY MUSICALalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of musicals and the number of actors who have appeared in the musicals .<CODESPLIT>SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = "var0" INTERSECT SELECT PARAGRAPHSalias1.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias1 WHERE PARAGRAPHSalias1.PARAGRAPH_TEXT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of musicals which have at least three actors .<CODESPLIT>SELECT MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID GROUP BY ACTORalias0.MUSICAL_ID HAVING COUNT( ACTORalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author in the " var0 " whose papers have more than var1 total citations .<CODESPLIT>SELECT COUNT( * ) , MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY MUSICALalias0.NOMINEE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the teams that have both wrestlers eliminated by " var0 " and wrestlers eliminated by " var1 " .<CODESPLIT>SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY NOMINEE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the most common result of the musicals .<CODESPLIT>SELECT MUSICALalias0.RESULT FROM MUSICAL AS MUSICALalias0 GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the nominees that have been nominated more than two musicals .<CODESPLIT>SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY MUSICALalias0.NOMINEE HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states where have some college students in tryout .<CODESPLIT>SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.MUSICAL_ID NOT IN ( SELECT ACTORalias0.MUSICAL_ID FROM ACTOR AS ACTORalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the nominees that have nominated musicals for both " var0 " and " var1 " .<CODESPLIT>SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = "var0" INTERSECT SELECT MUSICALalias1.NOMINEE FROM MUSICAL AS MUSICALalias1 WHERE MUSICALalias1.AWARD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different last names do the actors and actresses have ?<CODESPLIT>SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = "var0" OR MUSICALalias0.AWARD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the emails of the user named " var0 " .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through the state with the lowest elevation in the usa<CODESPLIT>SELECT PARTITIONID FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many users are there ?<CODESPLIT>SELECT COUNT( USER_PROFILESalias0.* ) FROM USER_PROFILES AS USER_PROFILESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many followers does each user have ?<CODESPLIT>SELECT PROCEDURESalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of followers for each user .<CODESPLIT>SELECT COUNT( * ) FROM FOLLOWS AS FOLLOWSalias0 GROUP BY F1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of tweets in record .<CODESPLIT>SELECT BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 WHERE BATTLEalias0.BULGARIAN_COMMANDER = "var0" AND BATTLEalias0.LATIN_COMMANDER = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of users who posted some tweets .<CODESPLIT>SELECT BOOKalias0.WRITER FROM BOOK AS BOOKalias0 ORDER BY BOOKalias0.WRITER ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the region names affected by the storm with a number of deaths of least var0 ?<CODESPLIT>SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of users whose emails contain ' var0 ' or ' var1 ' .<CODESPLIT>SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.EMAIL LIKE "var0" OR USER_PROFILESalias0.EMAIL LIKE "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the text of tweets about the topic ' var0 ' .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and email of the users who have more than var0 followers .<CODESPLIT>SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the users whose number of followers is greater than that of the user named " var0 " .<CODESPLIT>SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F1 GROUP BY FOLLOWSalias0.F1 HAVING COUNT( USER_PROFILESalias0.* ) > ( SELECT COUNT( USER_PROFILESalias1.* ) FROM USER_PROFILES AS USER_PROFILESalias1 JOIN FOLLOWS AS FOLLOWSalias1 ON USER_PROFILESalias1.UID = FOLLOWSalias1.F1 WHERE USER_PROFILESalias1.NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and email for the users who have more than one follower .<CODESPLIT>SELECT COUNT( * ) FROM EDITOR AS EDITORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of users who have more than one tweet .<CODESPLIT>SELECT DISTINCT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RATING > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of users who are followed by var0 and var1 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of users who are followed by var0 or var1 .<CODESPLIT>SELECT FOLLOWSalias0.F1 FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F2 WHERE USER_PROFILESalias0.NAME = "var0" OR USER_PROFILESalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the user who has the largest number of followers .<CODESPLIT>SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and email of the user followed by the least number of people .<CODESPLIT>SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the name , job title of all people ordered by their names .<CODESPLIT>SELECT USER_PROFILESalias0.FOLLOWERS , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of var0 users followed by the largest number of other users .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the text of all tweets in the order of date .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE ENDOWMENTalias0.AMOUNT > var0 GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING COUNT( ENDOWMENTalias0.* ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of each user and number of tweets tweeted by each of them .<CODESPLIT>SELECT COUNT( USER_PROFILESalias0.* ) , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and partition id for users who tweeted less than twice .<CODESPLIT>SELECT USER_PROFILESalias0.NAME , USER_PROFILESalias0.PARTITIONID FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID HAVING COUNT( USER_PROFILESalias0.* ) < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the user who tweeted more than once , and number of tweets tweeted by them .<CODESPLIT>SELECT COUNT( USER_PROFILESalias0.* ) , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID HAVING COUNT( USER_PROFILESalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of followers for the users who do not have any tweet .<CODESPLIT>SELECT AVG( USER_PROFILESalias0.FOLLOWERS ) FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.UID NOT IN ( SELECT UID FROM TWEETS AS TWEETSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of followers for the users who had some tweets .<CODESPLIT>SELECT AVG( USER_PROFILESalias0.FOLLOWERS ) FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.UID IN ( SELECT UID FROM TWEETS AS TWEETSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the maximum and total number of followers of all users .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias1 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias1.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias1.JOB = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all the catalog entries .<CODESPLIT>SELECT DISTINCT ( CATALOG_ENTRY_NAME ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the list of attribute data types possessed by more than var0 attribute definitions .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the attribute data type of the attribute with name " var0 " ?<CODESPLIT>SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 WHERE ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and level of catalog structure with level between var0 and var1 .<CODESPLIT>SELECT AVG( PLAYERalias0.HS ) FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the catalog publishers whose name contains " var0 "<CODESPLIT>SELECT DISTINCT ( CATALOG_PUBLISHER ) FROM CATALOGS AS CATALOGSalias0 WHERE CATALOGSalias0.CATALOG_PUBLISHER LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which catalog publisher has published the most catalogs ?<CODESPLIT>SELECT CATALOGSalias0.CATALOG_PUBLISHER FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOG_PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which colleges do the tryout players whose name starts with letter D go to ?<CODESPLIT>SELECT CATALOGSalias0.CATALOG_NAME , CATALOGSalias0.DATE_OF_PUBLICATION FROM CATALOGS AS CATALOGSalias0 JOIN CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 ON CATALOG_STRUCTUREalias0.CATALOG_ID = CATALOGSalias0.CATALOG_ID WHERE CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the entry names of catalog with the attribute possessed by most entries .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_VALUE = ( SELECT CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1.ATTRIBUTE_VALUE FROM CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1 GROUP BY ATTRIBUTE_VALUE ORDER BY COUNT( CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1.* ) DESC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the entry name of the most expensive catalog (in USD) ?<CODESPLIT>SELECT BOOKINGSalias0.AMOUNT_OF_REFUND , BOOKINGSalias0.BOOKING_ID FROM BOOKINGS AS BOOKINGSalias0 JOIN PAYMENTS AS PAYMENTSalias0 ON PAYMENTSalias0.BOOKING_ID = BOOKINGSalias0.BOOKING_ID GROUP BY BOOKINGSalias0.BOOKING_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the level name of the cheapest catalog (in USD) ?<CODESPLIT>SELECT ADDRESSalias0.CITY_ID , CITYalias0.CITY , COUNT( * ) FROM ADDRESS AS ADDRESSalias0 JOIN CITY AS CITYalias0 ON CITYalias0.CITY_ID = ADDRESSalias0.CITY_ID GROUP BY ADDRESSalias0.CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many businesses are there in the " var1 " neighbourhood in var0 ?<CODESPLIT>SELECT AVG( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) , MIN( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the product with the highest height ? Give me the catalog entry name .<CODESPLIT>SELECT AVG( TRACKalias0.SEATING ) , MAX( TRACKalias0.SEATING ) , MIN( TRACKalias0.SEATING ) FROM TRACK AS TRACKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the product that has the smallest capacity .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.CAPACITY ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and details of the customers who have at least var0 events ?<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.PRODUCT_STOCK_NUMBER LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of catalog entries with level number var0 .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_LEVEL_NUMBER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the products with length smaller than var0 or height greater than var1 .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.LENGTH < var0 OR CATALOG_CONTENTSalias0.WIDTH > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all tracks bought by customer var0 var1 .<CODESPLIT>SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_ID , ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_NAME FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_ID = ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_VALUE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each user , return the name and the average rating of reviews given by them .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CAPACITY , CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the dates on which more than one revisions were made .<CODESPLIT>SELECT CATALOGSalias0.DATE_OF_LATEST_REVISION FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOGSalias0.DATE_OF_LATEST_REVISION HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many products are there in the records ?<CODESPLIT>SELECT COUNT( * ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Name all the products with next entry ID greater than var0 .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.NEXT_ENTRY_ID > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name , nationality and id of all var0 architects ordered by their names lexicographically .<CODESPLIT>SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states where have the colleges whose enrollments are less than the largest size .<CODESPLIT>SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all aircrafts with more than var0 distance .<CODESPLIT>SELECT AID FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many aircrafts have distance between var0 and var1 ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and distance for aircraft with id var0 ?<CODESPLIT>SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the minimum , average , and maximum distance of all aircrafts .<CODESPLIT>SELECT AVG( AIRCRAFTalias0.DISTANCE ) , MAX( AIRCRAFTalias0.DISTANCE ) , MIN( AIRCRAFTalias0.DISTANCE ) FROM AIRCRAFT AS AIRCRAFTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the perpetrator with the biggest weight .<CODESPLIT>SELECT AID , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ORDER BY AIRCRAFTalias0.DISTANCE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of aircrafts with top three lowest distances .<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ORDER BY AIRCRAFTalias0.DISTANCE LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all aircrafts with distances more than the average .<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE > ( SELECT AVG( AIRCRAFTalias1.DISTANCE ) FROM AIRCRAFT AS AIRCRAFTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which season and which stadium did any player have an injury of ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show first name and last name for all the students advised by var0 var1 .<CODESPLIT>SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all employees with at least var0 salary .<CODESPLIT>SELECT EID FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in var2 var1 in " var0 "<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and salary for employee with id var0 ?<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID IN ( SELECT EMPLOYEESalias2.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias2 WHERE EMPLOYEESalias2.FIRST_NAME LIKE "var0" ) AND EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average and maximum salary of all employees .<CODESPLIT>SELECT AVG( EMPLOYEEalias0.SALARY ) , MAX( EMPLOYEEalias0.SALARY ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id and name of the employee with maximum salary .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" EXCEPT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of employees with three lowest salaries .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY ASC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artists do we have ?<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > ( SELECT AVG( EMPLOYEEalias1.SALARY ) FROM EMPLOYEE AS EMPLOYEEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which template type code is used by most number of documents ?<CODESPLIT>SELECT EID , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights do we have ?<CODESPLIT>SELECT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show flight number , origin , destination of all flights in the alphabetical order of the departure cities .<CODESPLIT>SELECT MOUNTAINalias0.ID , MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID WHERE MOUNTAINalias0.HEIGHT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all flight number from var0 .<CODESPLIT>SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show origins of all flights with destination var0 .<CODESPLIT>SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me the departure date and arrival date for all flights from var0 to var1 .<CODESPLIT>SELECT AVG( COUNTRYalias0.GNP ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show flight number for all flights with more than var0 distance .<CODESPLIT>SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DISTANCE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average price for flights from var0 to var1 .<CODESPLIT>SELECT PLAYERalias0.TEAM , SCHOOLalias0.LOCATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show origin and destination for flights with price higher than var0 .<CODESPLIT>SELECT FLIGHTalias0.DESTINATION , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average amount of items ordered in each order ?<CODESPLIT>SELECT FLIGHTalias0.DISTANCE , FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.PRICE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the flight number of flights with three lowest distances .<CODESPLIT>SELECT FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.DISTANCE ASC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average distance and average price for flights from var0 .<CODESPLIT>SELECT AVG( FLIGHTalias0.DISTANCE ) , AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all origins and the number of flights from each origin .<CODESPLIT>SELECT COUNT( * ) , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.ORIGIN ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all destinations and the number of flights to each destination .<CODESPLIT>SELECT COUNT( * ) , FLIGHTalias0.DESTINATION FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.DESTINATION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which origin has most number of flights ?<CODESPLIT>SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY ORIGIN ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which destination has least number of flights ?<CODESPLIT>SELECT FLIGHTalias0.DESTINATION FROM FLIGHT AS FLIGHTalias0 GROUP BY DESTINATION ORDER BY COUNT( * ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and salary for employee with id var0 ?<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID WHERE FLIGHTalias0.FLNO = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all flight numbers with aircraft var0 .<CODESPLIT>SELECT FLIGHTalias0.FLNO FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show aircraft names and number of flights for each aircraft .<CODESPLIT>SELECT AIRCRAFTalias0.NAME , COUNT( * ) FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID GROUP BY FLIGHTalias0.AID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all aircraft with at least two flights .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many employees do we have ?<CODESPLIT>SELECT COUNT( DISTINCT EID ) FROM CERTIFICATE AS CERTIFICATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries do not have a stadium that was opened after var0 ?<CODESPLIT>SELECT EID FROM EMPLOYEE AS EMPLOYEEalias0 EXCEPT SELECT EID FROM CERTIFICATE AS CERTIFICATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all aircrafts of which var0 has certificates .<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE EMPLOYEEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all employees who have certificate of var0 .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show total hours per week and number of games played for student var0 var1 .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = "var0" INTERSECT SELECT EMPLOYEEalias1.NAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CERTIFICATE AS CERTIFICATEalias1 ON EMPLOYEEalias1.EID = CERTIFICATEalias1.EID JOIN AIRCRAFT AS AIRCRAFTalias1 ON CERTIFICATEalias1.AID = AIRCRAFTalias1.AID WHERE AIRCRAFTalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all employees who do not have certificate of var0 .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 EXCEPT SELECT EMPLOYEEalias1.NAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias1.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of aircraft which fewest people have its certificate .<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and distance of the aircrafts with more than var0 distance and which at least var1 people have its certificate .<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.DISTANCE > var0 GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the salary and name of the employee who has the most number of aircraft certificates ?<CODESPLIT>SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 WHERE LESSONSalias0.LESSON_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than var0 ?<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.DISTANCE > var0 GROUP BY EMPLOYEEalias0.EID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many allergies are there ?<CODESPLIT>SELECT AVG( JOURNALalias0.SALES ) FROM JOURNAL AS JOURNALalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID WHERE JOURNAL_COMMITTEEalias0.WORK_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different allergy types exist ?<CODESPLIT>SELECT COUNT( DISTINCT ALLERGYTYPE ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergy types .<CODESPLIT>SELECT DISTINCT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergies and their types .<CODESPLIT>SELECT ALLERGY , ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergies with type var0 .<CODESPLIT>SELECT DISTINCT ALLERGY FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the type of allergy var0 ?<CODESPLIT>SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE = ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many allergies have type var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergy types and the number of allergies in each type .<CODESPLIT>SELECT ALLERGYTYPE , COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which allergy type has most number of allergies ?<CODESPLIT>SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which allergy type has least number of allergies ?<CODESPLIT>SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students are there ?<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show first name and last name for all students .<CODESPLIT>SELECT COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different advisors are listed ?<CODESPLIT>SELECT COUNT( DISTINCT STUDENTalias0.ADVISOR ) FROM STUDENT AS STUDENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the var1 in " var0 " ?<CODESPLIT>SELECT DISTINCT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all cities where students live .<CODESPLIT>SELECT DISTINCT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For all directors who directed more than one movie , return the titles of all movies directed by them , along with the director name . Sort by director name , then movie title .<CODESPLIT>SELECT FNAME , LNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show student ids for all male students .<CODESPLIT>SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTID NOT IN ( SELECT ARTISTID FROM ALBUM AS ALBUMalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students are age var0 ?<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student ids who are older than var0 .<CODESPLIT>SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state borders the state with the smallest population<CODESPLIT>SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE LNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the advisor of student with ID var0 ?<CODESPLIT>SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN PLAYER_AWARD AS PLAYER_AWARDalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_AWARDalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the official names of the cities that have hosted more than one competition .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = "var0" OR STUDENTalias0.CITY_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies that star both " var0 " and " var1 "<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the youngest student ?<CODESPLIT>SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = ( SELECT MIN( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the student id of the oldest student .<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.OVERALL_RATING <= var2 AND PLAYER_ATTRIBUTESalias0.OVERALL_RATING >= var1 AND PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which vocal type did the musician with first name " var0 " played in the song with title " A Bar in Amsterdam " ?<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which major has most number of students ?<CODESPLIT>SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all ages and corresponding number of students .<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID HAVING COUNT( * ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total percentage share of all channels owned by var0 .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.SEX ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the person who has friends with age above var0 but not under age var1 ?<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all advisors and corresponding number of students .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which advisor has most number of students ?<CODESPLIT>SELECT CULTURE_COMPANYalias0.COMPANY_NAME FROM MOVIE AS MOVIEalias0 JOIN CULTURE_COMPANY AS CULTURE_COMPANYalias0 ON MOVIEalias0.MOVIE_ID = CULTURE_COMPANYalias0.MOVIE_ID WHERE MOVIEalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students have cat allergies ?<CODESPLIT>SELECT COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student IDs who have at least two allergies .<CODESPLIT>SELECT WINEalias0.GRAPE , WINEalias0.WINERY , WINEalias0.YEAR FROM WINE AS WINEalias0 WHERE PRICE > var0 ORDER BY WINEalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the student ids of students who don't have any allergies ?<CODESPLIT>SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the checking balance of the accounts whose savings balance is higher than the average savings balance .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE STUDENTalias0.SEX = "var0" AND HAS_ALLERGYalias0.ALLERGY = "var1" OR HAS_ALLERGYalias0.ALLERGY = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students have a var0 allergy ?<CODESPLIT>SELECT ACCOUNTSalias0.CUSTID , ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE < ( SELECT MAX( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which allergy has most number of students affected ?<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergies with number of students affected .<CODESPLIT>SELECT GRADE , NAME FROM HIGHSCHOOLER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct address type codes for all customer addresses ?<CODESPLIT>SELECT ALLERGY_TYPEalias0.ALLERGYTYPE , COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY GROUP BY ALLERGY_TYPEalias0.ALLERGYTYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the money rank of the poker player with the highest earnings ?<CODESPLIT>SELECT LNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = "var0" INTERSECT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 WHERE HAS_ALLERGYalias1.ALLERGY = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the date , mean temperature and mean humidity for the top var0 days with the largest max gust speeds ?<CODESPLIT>SELECT ALLERGY_TYPEalias0.ALLERGY , ALLERGY_TYPEalias0.ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 JOIN HAS_ALLERGY AS HAS_ALLERGYalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE STUDENTalias0.FNAME = "var0" ORDER BY ALLERGY_TYPEalias0.ALLERGY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and gender of the student who has allergy to milk but not cat .<CODESPLIT>SELECT SHOPalias0.DISTRICT FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS < var0 INTERSECT SELECT SHOPalias1.DISTRICT FROM SHOP AS SHOPalias1 WHERE SHOPalias1.NUMBER_PRODUCTS > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age of the students who have allergies with var0 and var1 types .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = "var0" INTERSECT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias1 ON HAS_ALLERGYalias1.ALLERGY = ALLERGY_TYPEalias1.ALLERGY WHERE ALLERGY_TYPEalias1.ALLERGYTYPE = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first and last name of the students who do not have any var0 type allergy .<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" GROUP BY WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of male (sex is ' var0') students who have some var1 type allery .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = "var0" AND STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the different first names and cities of the students who have allergy to milk or cat .<CODESPLIT>SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.FOLLOWERS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students who are older than var0 and do not have allergy to either var1 or var2 .<CODESPLIT>SELECT COUNT( DISTINCT DEPT_NAME ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and major of the students who are not allegry to soy .<CODESPLIT>SELECT FNAME , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>A list of the top var0 countries by number of invoices . List country name and number of invoices .<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY COUNT( * ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>A list of the top var0 countries by gross/total invoice size . List country name and gross invoice size .<CODESPLIT>SELECT INVOICESalias0.BILLING_COUNTRY , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY SUM( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the station name and number of trains in each station .<CODESPLIT>SELECT AVG( INVOICESalias0.TOTAL ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY AVG( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find out var0 customers who most recently purchased something . List customers ' first and last name .<CODESPLIT>SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.INVOICE_DATE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find out the top var0 customers by total number of orders . List customers ' first and last name and the number of total orders .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID GROUP BY CUSTOMERSalias0.ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the description for role name " var0 " .<CODESPLIT>SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME , SUM( INVOICESalias0.TOTAL ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID GROUP BY CUSTOMERSalias0.ID ORDER BY SUM( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the top var0 genres by number of tracks . List genres name and total tracks .<CODESPLIT>SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR HAVING COUNT( * ) < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List every album's title .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average price of wines that are not produced from var0 county .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ORDER BY ALBUMSalias0.TITLE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List every album whose title starts with A in alphabetical order .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 WHERE TITLE LIKE "var0" ORDER BY ALBUMSalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What were the papers published at var1 var0 ?<CODESPLIT>SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.TOTAL LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the document ids for the budget type code ' var0 ' ?<CODESPLIT>SELECT SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_CITY = "var0" AND INVOICESalias0.BILLING_STATE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the number of invoices from var0 , var1 .<CODESPLIT>SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_CITY = "var0" AND INVOICESalias0.BILLING_STATE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the ids of all distinct orders ordered by placed date .<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = "var0" GROUP BY INVOICESalias0.BILLING_STATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the state in the US with the most invoices .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.VERSION_NUMBER > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the number of invoices and the invoice total from California .<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List var0's albums .<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many albums does var0 has ?<CODESPLIT>SELECT COUNT( * ) FROM ALBUMS AS ALBUMSalias0 JOIN ARTISTS AS ARTISTSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 var1 is a customer at which company ?<CODESPLIT>SELECT CUSTOMERSalias0.COMPANY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is var0 var1's email and phone number ?<CODESPLIT>SELECT CUSTOMERSalias0.EMAIL , CUSTOMERSalias0.PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers live in var0 city ?<CODESPLIT>SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers in state of var0 ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.STATE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What country does var0 var1 live ?<CODESPLIT>SELECT CUSTOMERSalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of albums that are released by aritist whose name has ' var0 '<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the stores in the district with the most population .<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON EMPLOYEESalias0.ID = CUSTOMERSalias0.SUPPORT_REP_ID WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the title , phone and hire date of var0 var1 ?<CODESPLIT>SELECT EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.PHONE , EMPLOYEESalias0.TITLE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List total amount of invoice from var0 , var1 .<CODESPLIT>SELECT EMPLOYEESalias1.FIRST_NAME , EMPLOYEESalias1.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.REPORTS_TO = EMPLOYEESalias0.ID WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the address of employee var0 var1 ?<CODESPLIT>SELECT EMPLOYEESalias0.ADDRESS FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the full name of employee who supported the most number of customers .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON EMPLOYEESalias0.ID = CUSTOMERSalias0.SUPPORT_REP_ID GROUP BY EMPLOYEESalias0.ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many employees are living in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct reigns of wrestlers whose location is not " Tokyo,Japan " ?<CODESPLIT>SELECT EMPLOYEESalias0.PHONE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the youngest employee in the company ? List employee's first and last name .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 ORDER BY EMPLOYEESalias0.BIRTH_DATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List top var0 employee work longest in the company . List employee's first and last name .<CODESPLIT>SELECT FNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = "var0" EXCEPT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 WHERE HAS_ALLERGYalias1.ALLERGY = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of employees whose title is var0 from each city ?<CODESPLIT>SELECT COUNT( * ) , EMPLOYEESalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE TITLE = "var0" GROUP BY EMPLOYEESalias0.CITY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which employee manage most number of peoples ? List employee's first and last name , and number of people report to that employee .<CODESPLIT>SELECT COUNT( EMPLOYEESalias0.REPORTS_TO ) , EMPLOYEESalias1.FIRST_NAME , EMPLOYEESalias1.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.ID = EMPLOYEESalias0.REPORTS_TO GROUP BY EMPLOYEESalias0.REPORTS_TO ORDER BY COUNT( EMPLOYEESalias0.REPORTS_TO ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many orders does var0 var1 has ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of money spent by var0 var1 ?<CODESPLIT>SELECT SUM( INVOICESalias0.TOTAL ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of customers who have both an order in completed status and an order in part status .<CODESPLIT>SELECT MEDIA_TYPESalias0.NAME FROM MEDIA_TYPES AS MEDIA_TYPESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all different genre types .<CODESPLIT>SELECT DISTINCT GENRESalias0.NAME FROM GENRES AS GENRESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct carriers of phones with memories bigger than var0 .<CODESPLIT>SELECT PLAYLISTSalias0.NAME FROM PLAYLISTS AS PLAYLISTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the composer of track var0 ?<CODESPLIT>SELECT TRACKSalias0.COMPOSER FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How long does track var0 has ?<CODESPLIT>SELECT TRACKSalias0.MILLISECONDS FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of tracks whose genre is var0 ?<CODESPLIT>SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = "var0" INTERSECT SELECT MUSICALalias1.NOMINEE FROM MUSICAL AS MUSICALalias1 WHERE MUSICALalias1.AWARD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each customer who has at least two orders , find the customer name and number of orders made .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE TRACKSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List name of all tracks in var0 .<CODESPLIT>SELECT TRACKSalias0.NAME FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE ALBUMSalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of students and total number of instructors for each department .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.ALBUM_ID = ALBUMSalias0.ID GROUP BY ALBUMSalias0.ID HAVING COUNT( ALBUMSalias0.ID ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of tracks belongs to genre var0 and whose media type is var1 .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of tracks belongs to genre var0 or media type is var1 .<CODESPLIT>SELECT AIRCRAFTalias0.FLEET_SERIES , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID ORDER BY PILOTalias0.RANK ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of tracks belongs to genre var0 or genre var1 .<CODESPLIT>SELECT COUNT( * ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all tracks in the playlists of var0 .<CODESPLIT>SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the movies rated as var0 ? List the titles .<CODESPLIT>SELECT PLAYLISTSalias0.NAME FROM PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID GROUP BY PLAYLIST_TRACKSalias0.PLAYLIST_ID HAVING COUNT( PLAYLIST_TRACKSalias0.TRACK_ID ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all tracks bought by customer var0 var1 .<CODESPLIT>SELECT COUNT( * ) FROM REF_COLORS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How much is the track var0 ?<CODESPLIT>SELECT TRACKSalias0.UNIT_PRICE FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of tracks which are in var0 playlist but not in music playlist .<CODESPLIT>SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = "var0" EXCEPT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of tracks which are in both var0 and music playlists .<CODESPLIT>SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = "var0" INTERSECT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights depart from City var0 ?<CODESPLIT>SELECT COUNT( * ) , GENRESalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID GROUP BY GENRESalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many editors are there ?<CODESPLIT>SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of editors in ascending order of age .<CODESPLIT>SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 ORDER BY EDITORalias0.AGE ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and ages of editors ?<CODESPLIT>SELECT EDITORalias0.AGE , EDITORalias0.NAME FROM EDITOR AS EDITORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var1 are there in " var0 " ?<CODESPLIT>SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 WHERE EDITORalias0.AGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of editors of age either var0 or var1 .<CODESPLIT>SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which store has most the customers ?<CODESPLIT>SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 ORDER BY EDITORalias0.AGE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many languages are in these films ?<CODESPLIT>SELECT COUNT( * ) , EDITORalias0.AGE FROM EDITOR AS EDITORalias0 GROUP BY EDITORalias0.AGE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common age of editors .<CODESPLIT>SELECT EDITORalias0.AGE FROM EDITOR AS EDITORalias0 GROUP BY AGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct themes of journals .<CODESPLIT>SELECT DISTINCT JOURNALalias0.THEME FROM JOURNAL AS JOURNALalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of editors and the theme of journals for which they serve on committees .<CODESPLIT>SELECT EDITORalias0.NAME , JOURNALalias0.THEME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and ages of editors and the theme of journals for which they serve on committees , in ascending alphabetical order of theme .<CODESPLIT>SELECT EDITORalias0.AGE , EDITORalias0.NAME , JOURNALalias0.THEME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ORDER BY JOURNALalias0.THEME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of editors that are on the committee of journals with sales bigger than var0 .<CODESPLIT>SELECT EDITORalias0.NAME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID WHERE JOURNALalias0.SALES > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id , name of each editor and the number of journal committees they are on .<CODESPLIT>SELECT COUNT( JOURNAL_COMMITTEEalias0.* ) , EDITORalias0.EDITOR_ID , EDITORalias0.NAME FROM EDITOR AS EDITORalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID GROUP BY EDITORalias0.EDITOR_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of editors that are on at least two journal committees .<CODESPLIT>SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID GROUP BY EDITORalias0.NAME HAVING COUNT( JOURNAL_COMMITTEEalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of editors that are not on any journal committee .<CODESPLIT>SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the date , theme and sales of the journal which did not have any of the listed editors serving on committee .<CODESPLIT>SELECT JOURNALalias0.DATE , JOURNALalias0.SALES , JOURNALalias0.THEME FROM JOURNAL AS JOURNALalias0 EXCEPT SELECT JOURNALalias1.DATE , JOURNALalias1.SALES , JOURNALalias1.THEME FROM JOURNAL AS JOURNALalias1 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNALalias1.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average sales of the journals that have an editor whose work type is ' var0 ' ?<CODESPLIT>SELECT AVG( JOURNALalias0.SALES ) FROM JOURNAL AS JOURNALalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID WHERE JOURNAL_COMMITTEEalias0.WORK_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many accounts do we have ?<CODESPLIT>SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many dogs have not gone through any treatment ?<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show theme and year for all exhibitions in an descending order of ticket price .<CODESPLIT>SELECT ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 WHERE ACCOUNTSalias0.ACCOUNT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name , last name , and phone of the customer with account name var0 ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many accounts does the customer with first name var0 and last name var1 have ?<CODESPLIT>SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = "var0" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all customer ids and the number of accounts for each customer .<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the customer id and number of accounts with most accounts .<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the descriptions of all the project outcomes ?<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keyword , which have been contained by the most number of papers in var0 conference .<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first names and last names of customers without any account .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_FIRST_NAME , CUSTOMERSalias1.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias1.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show distinct first and last names for all customers with an account .<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have an account ?<CODESPLIT>SELECT COUNT( DISTINCT ACCOUNTSalias0.CUSTOMER_ID ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers do we have ?<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of products that were bought by at least two distinct customers .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the phone and email for customer with first name var0 and last name var1 ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = "var0" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of customer cards .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.PAYMENT_METHOD_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.PAYMENT_METHOD_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids , customer ids , card type codes , card numbers for all cards .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.CARD_ID , CUSTOMERS_CARDSalias0.CARD_NUMBER , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the date valid from and the date valid to for the card with card number ' var0 ' .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.DATE_VALID_FROM , CUSTOMERS_CARDSalias0.DATE_VALID_TO FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name , last name , and phone of the customer with card var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cards does customer var0 var1 have ?<CODESPLIT>SELECT COUNT( DISTINCT PRODUCTSalias0.PRODUCT_TYPE_CODE ) FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many debit cards do we have ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many credit cards does customer var0 var1 have ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = "var2" AND CUSTOMERSalias0.CUSTOMER_FIRST_NAME = "var0" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all customer ids and the number of cards owned by each customer .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer id with most number of cards , and how many does he have ?<CODESPLIT>SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show id , first and last names for all customers with at least two cards .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer id , first and last name with least number of accounts .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all card type codes and the number of cards in each type .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct hometowns did these people have ?<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CARD_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show card type codes with at least var0 cards .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all card type codes and the number of customers holding cards in each type .<CODESPLIT>SELECT COUNT( DISTINCT CUSTOMERS_CARDSalias0.CUSTOMER_ID ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the customer ids and firstname without a credit card .<CODESPLIT>SELECT COUNT( DISTINCT ELECTIONalias0.DELEGATE ) FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all card type codes .<CODESPLIT>SELECT DISTINCT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of card types .<CODESPLIT>SELECT COUNT( DISTINCT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all transaction types .<CODESPLIT>SELECT DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of transaction types .<CODESPLIT>SELECT COUNT( DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most frequently used carrier of the phones .<CODESPLIT>SELECT AVG( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the card type codes and the number of transactions .<CODESPLIT>SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ON FINANCIAL_TRANSACTIONSalias0.CARD_ID = CUSTOMERS_CARDSalias0.CARD_ID GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customer who has the lowest credit score .<CODESPLIT>SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has most number of departing flights ?<CODESPLIT>SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE ORDER BY SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account id and the number of transactions for each account<CODESPLIT>SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the country ID and number of cities for each country .<CODESPLIT>SELECT COUNT( TRACKalias0.* ) FROM TRACK AS TRACKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and location for all tracks .<CODESPLIT>SELECT AVG( FLIGHTalias0.VELOCITY ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PILOT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the address line 1 and 2 of the customer with email " var0 " .<CODESPLIT>SELECT TRACKalias0.NAME , TRACKalias0.SEATING FROM TRACK AS TRACKalias0 WHERE YEAR_OPENED > var0 ORDER BY TRACKalias0.SEATING ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of settlement made for all the settlements ?<CODESPLIT>SELECT TRACKalias0.LOCATION , TRACKalias0.NAME , TRACKalias0.SEATING FROM TRACK AS TRACKalias0 ORDER BY TRACKalias0.YEAR_OPENED DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the minimum , maximum , and average seating for all tracks .<CODESPLIT>SELECT AVG( TRACKalias0.SEATING ) , MAX( TRACKalias0.SEATING ) , MIN( TRACKalias0.SEATING ) FROM TRACK AS TRACKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , location , open year for all tracks with a seating higher than the average .<CODESPLIT>SELECT TRACKalias0.LOCATION , TRACKalias0.NAME , TRACKalias0.YEAR_OPENED FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING > ( SELECT AVG( TRACKalias1.SEATING ) FROM TRACK AS TRACKalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the color of the grape whose wine products has the highest average price ?<CODESPLIT>SELECT DISTINCT TRACKalias0.LOCATION FROM TRACK AS TRACKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many races are there ?<CODESPLIT>SELECT COUNT( * ) FROM RACE AS RACEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all every engineer's first name , last name , details and coresponding skill description .<CODESPLIT>SELECT DISTINCT RACEalias0.CLASS FROM RACE AS RACEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name , class , and date for all races .<CODESPLIT>SELECT RACEalias0.CLASS , RACEalias0.DATE , RACEalias0.NAME FROM RACE AS RACEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and name of the most expensive base price room .<CODESPLIT>SELECT COUNT( * ) , RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the race class with most number of races .<CODESPLIT>SELECT RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY CLASS ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the race class with at least two races .<CODESPLIT>SELECT RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names for tracks without a race in class ' var0 ' .<CODESPLIT>SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 EXCEPT SELECT TRACKalias1.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias1 ON TRACKalias1.TRACK_ID = RACEalias0.TRACK_ID WHERE RACEalias0.CLASS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all track names that have had no races .<CODESPLIT>SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 WHERE TRACKalias0.TRACK_ID NOT IN ( SELECT RACEalias0.TRACK_ID FROM RACE AS RACEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show year where a track with a seating at least var1 opened and a track with seating no more than var0 opened .<CODESPLIT>SELECT COUNT( * ) , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of track and the number of races in each track .<CODESPLIT>SELECT COUNT( TRACKalias0.* ) , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of track with most number of races .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYNAME FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CAR_MAKERSalias0.COUNTRY ORDER BY COUNT ( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and date for each race and its track name .<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and location of track with var0 race .<CODESPLIT>SELECT TRACKalias0.LOCATION , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID HAVING COUNT( TRACKalias0.* ) = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the locations where have both tracks with more than var0 seats and tracks with less than var1 seats .<CODESPLIT>SELECT var0 ( BILLINGCOUNTRY ) FROM INVOICE AS INVOICEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many members have the black membership card ?<CODESPLIT>SELECT COUNT( * ) FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBERSHIP_CARD = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the course name of courses sorted by credits .<CODESPLIT>SELECT COUNT( * ) , MEMBERalias0.ADDRESS FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.ADDRESS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the names of members whose address is in var0 or var1 .<CODESPLIT>SELECT TV_CHANNELalias0.ID FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT CARTOONalias0.CHANNEL FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of all students who were in the tryout sorted in alphabetic order .<CODESPLIT>SELECT MEMBERalias0.MEMBER_ID , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.AGE < var1 OR MEMBERalias0.MEMBERSHIP_CARD = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the purchase time , age and address of each member , and show the results in the order of purchase time .<CODESPLIT>SELECT MEMBERalias0.ADDRESS , MEMBERalias0.AGE , MEMBERalias0.TIME_OF_PURCHASE FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.TIME_OF_PURCHASE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which membership card has more than var0 members ?<CODESPLIT>SELECT COUNT( RESERVATIONSalias0.* ) , RESERVATIONSalias0.ROOM , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city is the headquarter of the store named " var0 " in ?<CODESPLIT>SELECT MEMBERalias0.ADDRESS FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.AGE < var0 INTERSECT SELECT MEMBERalias1.ADDRESS FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.AGE > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the membership card held by both members living in var0 and ones living in var1 address ?<CODESPLIT>SELECT MEMBERalias0.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.ADDRESS = "var0" INTERSECT SELECT MEMBERalias1.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.ADDRESS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many members are not living in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.ADDRESS != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which address do not have any member with the black membership card ?<CODESPLIT>SELECT COUNT( STORE_DISTRICTalias0.* ) , DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the shop addresses ordered by their opening year .<CODESPLIT>SELECT SHOPalias0.ADDRESS FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all cities along with the number of drama workshop groups in each city .<CODESPLIT>SELECT AVG( SHOPalias0.NUM_OF_STAFF ) , AVG( SHOPalias0.SCORE ) FROM SHOP AS SHOPalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and address of the shops whose score is below the average score .<CODESPLIT>SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SCORE < ( SELECT AVG( SHOPalias1.SCORE ) FROM SHOP AS SHOPalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the address and staff number of the shops that do not have any happy hour .<CODESPLIT>SELECT SHOPalias0.ADDRESS , SHOPalias0.NUM_OF_STAFF FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT HAPPY_HOURalias0.SHOP_ID FROM HAPPY_HOUR AS HAPPY_HOURalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the density of the state that the largest river in the united states runs through<CODESPLIT>SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 JOIN HAPPY_HOUR AS HAPPY_HOURalias0 ON SHOPalias0.SHOP_ID = HAPPY_HOURalias0.SHOP_ID WHERE HAPPY_HOURalias0.MONTH = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and parties of representatives ?<CODESPLIT>SELECT COUNT( * ) , HAPPY_HOURalias0.SHOP_ID FROM HAPPY_HOUR AS HAPPY_HOURalias0 GROUP BY SHOP_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which month has the most happy hours ?<CODESPLIT>SELECT HAPPY_HOURalias0.MONTH FROM HAPPY_HOUR AS HAPPY_HOURalias0 GROUP BY MONTH ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which months have more than var0 happy hours ?<CODESPLIT>SELECT HAPPY_HOURalias0.MONTH FROM HAPPY_HOUR AS HAPPY_HOURalias0 GROUP BY HAPPY_HOURalias0.MONTH HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many albums are there ?<CODESPLIT>SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all music genres .<CODESPLIT>SELECT GENREalias0.NAME FROM GENRE AS GENREalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the customer information in state var0 .<CODESPLIT>SELECT * FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names and last names of the employees who live in var0 city .<CODESPLIT>SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DAYS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the var0 billing countries of the invoices ?<CODESPLIT>SELECT COUNT( DISTINCT ELECTIONalias0.DELEGATE ) FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the different billing countries for all invoices .<CODESPLIT>SELECT DISTINCT ( BILLINGCOUNTRY ) FROM INVOICE AS INVOICEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the salary and name of the employee who has the most number of aircraft certificates ?<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title of all the albums of the artist " var0 " .<CODESPLIT>SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ARTISTalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Hom many albums does the artist " var0 " have ?<CODESPLIT>SELECT COUNT( * ) FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ARTISTalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many faculty lines are there in the university that conferred the least number of degrees in year var0 ?<CODESPLIT>SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ALBUMalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product name and total order quantity for each product .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID GROUP BY ARTISTalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all the tracks that contain the word " var0 " .<CODESPLIT>SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 WHERE TRACKalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average unit price of all the tracks ?<CODESPLIT>SELECT AVG( UNITPRICE ) FROM TRACK AS TRACKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the durations of the longest and the shortest tracks in milliseconds ?<CODESPLIT>SELECT MAX( TRACKalias0.MILLISECONDS ) , MIN( TRACKalias0.MILLISECONDS ) FROM TRACK AS TRACKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the album names , ids and the number of tracks for each album .<CODESPLIT>SELECT PROBLEMSalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = "var0" AND STAFFalias0.STAFF_LAST_NAME = "var1" INTERSECT SELECT PROBLEMSalias1.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.CLOSURE_AUTHORISED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = "var2" AND STAFFalias1.STAFF_LAST_NAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the most common genre in all tracks ?<CODESPLIT>SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the least common media type in all tracks ?<CODESPLIT>SELECT DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY BUDGET_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the album names and ids for albums that contain tracks with unit price bigger than var0 .<CODESPLIT>SELECT AVG( RANKINGSalias0.RANKING ) , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tracks belong to rock genre ?<CODESPLIT>SELECT COUNT( TRACKalias0.* ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total population and maximum GNP in var0 ?<CODESPLIT>SELECT AVG( UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the semester and year which has the least number of student taking any class .<CODESPLIT>SELECT FIRSTNAME , LASTNAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.EMAIL = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have email that contains " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.EMAIL LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name and last name employee helps the customer with first name var0 ?<CODESPLIT>SELECT EMPLOYEEalias0.FIRSTNAME , EMPLOYEEalias0.LASTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID WHERE CUSTOMERalias0.FIRSTNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What city does the employee who helps the customer with postal code var0 live in ?<CODESPLIT>SELECT EMPLOYEEalias0.CITY FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID WHERE CUSTOMERalias0.POSTALCODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct cities does the employees live in ?<CODESPLIT>SELECT COUNT( DISTINCT EMPLOYEEalias0.CITY ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all invoice dates corresponding to customers with first name var0 and last name var1 .<CODESPLIT>SELECT INVOICEalias0.INVOICEDATE FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.FIRSTNAME = "var0" AND LASTNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the customer last names that do not have invoice totals larger than var0 .<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of wins the team var0 got in the postseasons each year in history ?<CODESPLIT>SELECT DISTINCT CUSTOMERalias0.FIRSTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the address of all customers that live in var0 and have invoice .<CODESPLIT>SELECT DISTINCT CUSTOMERalias0.ADDRESS FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the phone numbers of all employees .<CODESPLIT>SELECT AVG( SCHOOLalias0.ENROLLMENT ) , SUM( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tracks are in the var0 media type ?<CODESPLIT>SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = "var0" AND ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var1" UNION SELECT ADDRESSESalias1.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias1 WHERE ADDRESSESalias1.CITY = "var2" AND ADDRESSESalias1.STATE_PROVINCE_COUNTY = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergies with number of students affected .<CODESPLIT>SELECT AVG( TRACKalias0.MILLISECONDS ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" OR GENREalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the employee first names and ids of employees who serve at least var0 customers .<CODESPLIT>SELECT AVG( BASEPRICE ) , BEDTYPE FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the employee last names that serves no more than var0 customers .<CODESPLIT>SELECT CUSTOMERalias0.LASTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID GROUP BY CUSTOMERalias0.SUPPORTREPID HAVING COUNT( * ) <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list all album titles in alphabetical order .<CODESPLIT>SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 ORDER BY ALBUMalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of students who have a grade higher than var0 and have at least var1 friends .<CODESPLIT>SELECT ALBUMalias0.ARTISTID , ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID GROUP BY ALBUMalias0.ARTISTID HAVING COUNT( * ) >= var0 ORDER BY ARTISTalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of artists that do not have any albums .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias1 ON ARTISTalias1.ARTISTID = ALBUMalias0.ARTISTID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average unit price of rock tracks ?<CODESPLIT>SELECT AVG( TRACKalias0.UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the duration of the longest and shortest pop tracks in milliseconds ?<CODESPLIT>SELECT FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = "var0" INTERSECT SELECT FACULTYalias1.LNAME FROM FACULTY AS FACULTYalias1 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias1 ON FACULTYalias1.FACID = FACULTY_PARTICIPATES_INalias1.FACID JOIN ACTIVITY AS ACTIVITYalias1 ON FACULTY_PARTICIPATES_INalias1.ACTID = FACULTY_PARTICIPATES_INalias1.ACTID WHERE ACTIVITYalias1.ACTIVITY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birth dates of employees living in var0 ?<CODESPLIT>SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID WHERE WRESTLERalias0.DAYS_HELD > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the var0 unit prices of all tracks ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , SUM( PAPERalias0.NUMCITEDBY ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY DERIVED_TABLEalias1.KEYPHRASENAME ORDER BY SUM( PAPERalias0.NUMCITEDBY ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artists do not have any album ?<CODESPLIT>SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTID NOT IN ( SELECT ARTISTID FROM ALBUM AS ALBUMalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the album titles for albums containing both ' var0 ' and ' var1 ' genre tracks ?<CODESPLIT>SELECT CONTINENTSalias0.CONTID , CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID GROUP BY CONTINENTSalias0.CONTID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names and date of birth of professors teaching course var0 ?<CODESPLIT>SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all female (sex is var0) candidate names in the alphabetical order .<CODESPLIT>SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 WHERE AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the average salary of employees for each department who gets a commission percentage .<CODESPLIT>SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the customer phone numbers under the most popular policy type ?<CODESPLIT>SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 WHERE AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE = ( SELECT AVAILABLE_POLICIESalias1.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias1 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the policy type used by more than var0 customers .<CODESPLIT>SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total and average amount of settlements .<CODESPLIT>SELECT AVG( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) , SUM( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of services that have been used for more than var0 times in first notification of loss .<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR != ( SELECT STUDENTalias1.MAJOR FROM STUDENT AS STUDENTalias1 GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the effective date of the claim that has the largest amount of total settlement ?<CODESPLIT>SELECT CLAIMSalias0.EFFECTIVE_DATE FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY SUM( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many policies are listed for the customer named " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest urban population<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the policy types of the customer named " var0 " ?<CODESPLIT>SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.NOMINEE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the policy types of the customer that has the most policies listed ?<CODESPLIT>SELECT DISTINCT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID JOIN AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ON CUSTOMERS_POLICIESalias0.POLICY_ID = AVAILABLE_POLICIESalias0.POLICY_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ( SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_POLICIESalias1.CUSTOMER_ID GROUP BY CUSTOMERSalias1.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many institutions do not have an associated protein in our record ?<CODESPLIT>SELECT SERVICESalias0.SERVICE_NAME FROM SERVICES AS SERVICESalias0 ORDER BY SERVICESalias0.SERVICE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many services are there ?<CODESPLIT>SELECT COUNT( * ) FROM SERVICES AS SERVICESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of users who do not have a first notification of loss record .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all ages and corresponding number of students .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_NAME = "var0" OR SERVICESalias0.SERVICE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the subject names .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_NAME = "var0" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias1 ON FIRST_NOTIFICATION_OF_LOSSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias1.SERVICE_ID WHERE SERVICESalias1.SERVICE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the IDs of customers whose name contains " var0 " .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers published in var2 var1 by var0<CODESPLIT>SELECT MAX( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) , MIN( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the customers in increasing order of IDs .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_ID ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Retrieve the open and close dates of all the policies associated with the customer whose name contains " var0 "<CODESPLIT>SELECT CUSTOMERS_POLICIESalias0.DATE_CLOSED , CUSTOMERS_POLICIESalias0.DATE_OPENED FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kinds of enzymes are there ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of enzymes in descending lexicographical order .<CODESPLIT>SELECT COUNT( * ) FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.INSTITUTION_ID NOT IN ( SELECT PROTEINalias0.INSTITUTION_ID FROM PROTEIN AS PROTEINalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and the locations that the enzymes can make an effect .<CODESPLIT>SELECT ENZYMEalias0.LOCATION , ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id , color scheme , and name for all the photos .<CODESPLIT>SELECT ENZYMEalias0.CHROMOSOME , ENZYMEalias0.PORPHYRIA , ENZYMEalias0.PRODUCT FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.LOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of enzymes who does not produce ' var0 ' ?<CODESPLIT>SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.PRODUCT != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and trade names of the medicines which has ' var0 ' value in the FDA record ?<CODESPLIT>SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " after var1 .<CODESPLIT>SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID JOIN MEDICINE AS MEDICINEalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = "var1" AND MEDICINEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show director with the largest number of show times in total .<CODESPLIT>SELECT MEDICINEalias0.ID , MEDICINEalias0.NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID HAVING COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the companies and the investors of entrepreneurs .<CODESPLIT>SELECT MEDICINEalias0.FDA_APPROVED , MEDICINEalias0.ID , MEDICINEalias0.NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and name of the enzyme with most number of medicines that can interact as ' activator ' ?<CODESPLIT>SELECT ENZYMEalias0.ID , ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = "var0" GROUP BY ENZYMEalias0.ID ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the interaction type of the enzyme named ' var0 ' and the medicine named ' var1 ' ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common interaction type between enzymes and medicine ? And how many are there ?<CODESPLIT>SELECT COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) , MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 GROUP BY INTERACTION_TYPE ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all locations with only var0 station .<CODESPLIT>SELECT COUNT( * ) FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many enzymes do not have any interactions ?<CODESPLIT>SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of companies in the banking or retailing industry ?<CODESPLIT>SELECT MEDICINEalias0.ID , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID HAVING COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct name , location and products of the enzymes which has any ' var0 ' interaction ?<CODESPLIT>SELECT DISTINCT ENZYMEalias0.LOCATION , ENZYMEalias0.NAME , ENZYMEalias0.PRODUCT FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the medicine name and trade name which can both interact as ' var0 ' and ' var1 ' with enzymes .<CODESPLIT>SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = "var0" INTERSECT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias1 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias1.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias1.INTERACTION_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the medicine names and trade names that cannot interact with the enzyme with product ' Heme ' .<CODESPLIT>SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 EXCEPT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID JOIN ENZYME AS ENZYMEalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE ENZYMEalias0.PRODUCT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the product ID of the most frequently ordered item on invoices ?<CODESPLIT>SELECT COUNT( DISTINCT MEDICINEalias0.FDA_APPROVED ) FROM MEDICINE AS MEDICINEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which enzyme names have the substring " var0 " ?<CODESPLIT>SELECT CLAIMSalias0.DATE_CLAIM_MADE , CLAIMSalias0.DATE_CLAIM_SETTLED FROM CLAIMS AS CLAIMSalias0 WHERE CLAIMSalias0.AMOUNT_CLAIMED > ( SELECT AVG( CLAIMSalias1.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of medicines offered by each trade .<CODESPLIT>SELECT COUNT( * ) , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 GROUP BY MEDICINEalias0.TRADE_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all schools and their nicknames in the order of founded year .<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all public schools and their locations .<CODESPLIT>SELECT UNIVERSITYalias0.LOCATION , UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.AFFILIATION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of people in ascending order of weight ?<CODESPLIT>SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.ENROLLMENT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show institution types , along with the number of institutions and total enrollment for each type .<CODESPLIT>SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 WHERE AFFILIATION != "var0" ORDER BY UNIVERSITYalias0.FOUNDED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many schools are in the basketball match ?<CODESPLIT>SELECT COUNT( COUNTRYalias0.* ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.COUNTRY_ID NOT IN ( SELECT ROLLER_COASTERalias0.COUNTRY_ID FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.LENGTH > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the highest acc percent score in the competition ?<CODESPLIT>SELECT RENT_ARREARSalias0.COUNCIL_TAX_ID FROM RENT_ARREARS AS RENT_ARREARSalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON RENT_ARREARSalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID JOIN CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 ON CUSTOMER_MASTER_INDEXalias0.MASTER_CUSTOMER_ID = CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID WHERE CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the primary conference of the school that has the lowest acc percent score in the competition ?<CODESPLIT>SELECT WEB_CLIENT_ACCELERATORalias0.NAME , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 EXCEPT SELECT WEB_CLIENT_ACCELERATORalias1.NAME , WEB_CLIENT_ACCELERATORalias1.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias1 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE BROWSERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the team name and acc regular season score of the school that was founded for the longest time ?<CODESPLIT>SELECT BASKETBALL_MATCHalias0.ACC_REGULAR_SEASON , BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID ORDER BY UNIVERSITYalias0.FOUNDED LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the location and all games score of the school that has var0 as its team name .<CODESPLIT>SELECT BASKETBALL_MATCHalias0.ALL_GAMES , UNIVERSITYalias0.LOCATION FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE BASKETBALL_MATCHalias0.TEAM_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum , minimum , and average booked count for the products booked ?<CODESPLIT>SELECT AVG( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.FOUNDED < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the enrollment and primary_conference of the oldest college .<CODESPLIT>SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total and minimum enrollment of all schools ?<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE YEAR <= var0 ORDER BY MOVIEalias0.GROSS_WORLDWIDE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all party names and the number of members in each party .<CODESPLIT>SELECT SUM( UNIVERSITYalias0.ENROLLMENT ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 GROUP BY UNIVERSITYalias0.AFFILIATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all manufacturer names and ids ordered by their opening year .<CODESPLIT>SELECT COUNT( UNIVERSITYalias0.* ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.SCHOOL_ID NOT IN ( SELECT BASKETBALL_MATCHalias0.SCHOOL_ID FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the schools that were either founded after var0 or public .<CODESPLIT>SELECT MEMBERalias0.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.ADDRESS = "var0" INTERSECT SELECT MEMBERalias1.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.ADDRESS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find how many different affiliation types there are .<CODESPLIT>SELECT STORMalias0.MAX_SPEED , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ORDER BY COUNT( AFFECTED_REGIONalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find how many school locations have the word ' var0 ' .<CODESPLIT>SELECT PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 GROUP BY PARTICIPANT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the team names of the universities whose enrollments are smaller than the average enrollment size .<CODESPLIT>SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE UNIVERSITYalias0.ENROLLMENT < ( SELECT AVG( UNIVERSITYalias1.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of universities that have over a var0 enrollment size for each affiliation type .<CODESPLIT>SELECT COUNT( UNIVERSITYalias0.* ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE ENROLLMENT > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of students enrolled in the colleges that were founded after the year of var0 for each affiliation type .<CODESPLIT>SELECT SUM( UNIVERSITYalias0.ENROLLMENT ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE FOUNDED > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the date and id of the transcript with at least var0 course results .<CODESPLIT>SELECT MAX( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information regarding the basketball match .<CODESPLIT>SELECT * FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the coupon amount of the coupons owned by both var0 and var1 customers ?<CODESPLIT>SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ORDER BY BASKETBALL_MATCHalias0.ALL_HOME DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the names of models that launched between var0 and var1 .<CODESPLIT>SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 WHERE CHIP_MODELalias0.LAUNCH_YEAR BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location with most number of train stations .<CODESPLIT>SELECT CHIP_MODELalias0.MODEL_NAME , CHIP_MODELalias0.RAM_MIB FROM CHIP_MODEL AS CHIP_MODELalias0 ORDER BY CHIP_MODELalias0.RAM_MIB ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the chip model and screen mode of the phone with hardware model name " var0 " ?<CODESPLIT>SELECT PHONEalias0.CHIP_MODEL , PHONEalias0.SCREEN_MODE FROM PHONE AS PHONEalias0 WHERE PHONEalias0.HARDWARE_MODEL_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many phone hardware models are produced by the company named " var0 " ?<CODESPLIT>SELECT COUNT( PHONEalias0.* ) FROM PHONE AS PHONEalias0 WHERE PHONEalias0.COMPANY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the results of music festivals and the number of music festivals that have had each , ordered by this count .<CODESPLIT>SELECT MAX( CHIP_MODELalias0.RAM_MIB ) , MIN( CHIP_MODELalias0.RAM_MIB ) FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE PHONEalias0.COMPANY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average ROM size of phones produced by the company named " var0 " ?<CODESPLIT>SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) , MAX( INVOICESalias0.ORDER_QUANTITY ) , MIN( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the hardware model name and company name for all the phones that were launched in year var0 or have RAM size greater than var1 .<CODESPLIT>SELECT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE CHIP_MODELalias0.LAUNCH_YEAR = var0 OR CHIP_MODELalias0.RAM_MIB > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id and name of the aircraft with the maximum distance .<CODESPLIT>SELECT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.ACCREDITATION_TYPE LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all phones that have word ' var0 ' in their accreditation types . List the Hardware Model name and Company name .<CODESPLIT>SELECT SCREEN_MODEalias0.CHAR_CELLS , SCREEN_MODEalias0.HARDWARE_COLOURS , SCREEN_MODEalias0.PIXELS FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.HARDWARE_MODEL_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many players born in var0 are right-handed batters ? That is , have the batter value ' var1 ' .<CODESPLIT>SELECT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE SCREEN_MODEalias0.TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the company that has the least number of phone models . List the company name and the number of phone model produced by that company .<CODESPLIT>SELECT CUSTOMERSalias0.COMPANY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the company that produced more than one phone model .<CODESPLIT>SELECT PHONEalias0.COMPANY_NAME FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.COMPANY_NAME HAVING COUNT( PHONEalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the maximum , minimum and average number of used kb in screen mode .<CODESPLIT>SELECT AVG( SCREEN_MODEalias0.USED_KB ) , MAX( SCREEN_MODEalias0.USED_KB ) , MIN( SCREEN_MODEalias0.USED_KB ) FROM SCREEN_MODE AS SCREEN_MODEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the phone model launched in year var0 and with the highest RAM size .<CODESPLIT>SELECT PHONEalias0.HARDWARE_MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE CHIP_MODELalias0.LAUNCH_YEAR = var0 ORDER BY CHIP_MODELalias0.RAM_MIB DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the wifi and screen mode type of the hardware model named " var0 " ?<CODESPLIT>SELECT CHIP_MODELalias0.WIFI , SCREEN_MODEalias0.TYPE FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME JOIN SCREEN_MODE AS SCREEN_MODEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.HARDWARE_MODEL_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the hardware model name for the phones that have screen mode type " var0 " or RAM size greater than var1 .<CODESPLIT>SELECT PHONEalias0.HARDWARE_MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME JOIN SCREEN_MODE AS SCREEN_MODEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE CHIP_MODELalias0.RAM_MIB > var1 OR SCREEN_MODEalias0.TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average elevation of all airports for each country .<CODESPLIT>SELECT DISTINCT PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.COMPANY_NAME = "var1" OR SCREEN_MODEalias0.TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the hardware model name for the phons that were produced by " var0 " but whose screen mode type is not var1 .<CODESPLIT>SELECT DISTINCT PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.COMPANY_NAME = "var0" AND SCREEN_MODEalias0.TYPE != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is minimum age for different job title ?<CODESPLIT>SELECT DISTINCT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE SCREEN_MODEalias0.USED_KB BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of phones for each accreditation type .<CODESPLIT>SELECT COUNT( PHONEalias0.* ) , PHONEalias0.ACCREDITATION_TYPE FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.ACCREDITATION_TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the accreditation level that more than var0 phones use .<CODESPLIT>SELECT PHONEalias0.ACCREDITATION_LEVEL FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.ACCREDITATION_LEVEL HAVING COUNT( PHONEalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the details for all chip models .<CODESPLIT>SELECT COUNT( * ) FROM HIGHSCHOOLER WHERE GRADE = var0 OR GRADE = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many models do not have the wifi function ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT DEBATE_PEOPLEalias0.AFFIRMATIVE FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location codes and the number of documents in each location .<CODESPLIT>SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 ORDER BY CHIP_MODELalias0.LAUNCH_YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average ram mib size of the chip models that are never used by any phone .<CODESPLIT>SELECT AVG( CHIP_MODELalias0.RAM_MIB ) FROM CHIP_MODEL AS CHIP_MODELalias0 WHERE CHIP_MODELalias0.MODEL_NAME NOT IN ( SELECT PHONEalias0.CHIP_MODEL FROM PHONE AS PHONEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the chip models that are not used by any phone with full accreditation type .<CODESPLIT>SELECT COUNT( DISTINCT DEPT_ADDRESS ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.SCHOOL_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the friend of var0 with longest year relationship ?<CODESPLIT>SELECT SCREEN_MODEalias0.PIXELS FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.ACCREDITATION_TYPE = "var0" INTERSECT SELECT SCREEN_MODEalias1.PIXELS FROM SCREEN_MODE AS SCREEN_MODEalias1 JOIN PHONE AS PHONEalias1 ON SCREEN_MODEalias1.GRAPHICS_MODE = PHONEalias1.SCREEN_MODE WHERE PHONEalias1.ACCREDITATION_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the census ranking of cities whose status are not " var0 " .<CODESPLIT>SELECT COUNTRYalias0.CAPITAL , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all official native languages that contain the word " var0 " .<CODESPLIT>SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct positions of matches .<CODESPLIT>SELECT AUTHORalias0.NAME FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" GROUP BY AUTHORalias0.NAME ORDER BY SUM( PUBLICATIONalias0.CITATION_NUM ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the players from college var0 .<CODESPLIT>SELECT POKER_PLAYERalias0.EARNINGS FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct position of players from college var0 or var1 .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the draft pick numbers and draft classes of players whose positions are defenders .<CODESPLIT>SELECT MATCH_SEASONalias0.DRAFT_CLASS , MATCH_SEASONalias0.DRAFT_PICK_NUMBER FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.POSITION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List names of conductors in descending order of years of work .<CODESPLIT>SELECT COUNT( DISTINCT MATCH_SEASONalias0.TEAM ) FROM MATCH_SEASON AS MATCH_SEASONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the players and the years played .<CODESPLIT>SELECT SALESalias0.SALES_DETAILS , TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM SALES AS SALESalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = SALESalias0.SALES_TRANSACTION_ID WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all team names .<CODESPLIT>SELECT TEAMalias0.NAME FROM TEAM AS TEAMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the dates of enrollment and completion of the student with personal name " var0 " .<CODESPLIT>SELECT COUNTRYalias0.COUNTRY_NAME , MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which players are from var0 ?<CODESPLIT>SELECT MATCH_SEASONalias0.PLAYER FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.COUNTRY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What ranks do we have for faculty ?<CODESPLIT>SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.CAPITAL = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the official languages of the countries of players from var0 or var1 college ?<CODESPLIT>SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.COLLEGE = "var0" OR MATCH_SEASONalias0.COLLEGE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct official languages are there among countries of players whose positions are defenders .<CODESPLIT>SELECT COUNT( DISTINCT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.POSITION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the season , the player , and the name of the team that players belong to .<CODESPLIT>SELECT MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON , TEAMalias0.NAME FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the positions of the players from the team with name " var0 " .<CODESPLIT>SELECT SHOPalias0.DISTRICT , SHOPalias0.MANAGER_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct colleges are associated with players from the team with name " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT MATCH_SEASONalias0.COLLEGE ) FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM WHERE TEAMalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When do all the var0 role staff start to work , and when do they stop working ?<CODESPLIT>SELECT PLAYERalias0.PLAYER , PLAYERalias0.YEARS_PLAYED FROM PLAYER AS PLAYERalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = PLAYERalias0.TEAM WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the position of players and the corresponding number of players .<CODESPLIT>SELECT COUNT( * ) , MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY MATCH_SEASONalias0.POSITION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the country names and the corresponding number of players .<CODESPLIT>SELECT COUNT( * ) , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all players sorted by college in ascending alphabetical order .<CODESPLIT>SELECT MATCH_SEASONalias0.PLAYER FROM MATCH_SEASON AS MATCH_SEASONalias0 ORDER BY MATCH_SEASONalias0.COLLEGE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common position of players in match seasons .<CODESPLIT>SELECT SHIPalias0.CLASS , SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT CAPTAINalias0.SHIP_ID FROM CAPTAIN AS CAPTAINalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the top var0 most common colleges of players in match seasons .<CODESPLIT>SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of colleges that have at least two players .<CODESPLIT>SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY MATCH_SEASONalias0.COLLEGE HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of colleges that have at least two players in descending alphabetical order .<CODESPLIT>SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE HAVING COUNT( * ) >= var0 ORDER BY MATCH_SEASONalias0.COLLEGE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of teams that do no have match season record ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of tracks which are in both var0 and music playlists .<CODESPLIT>SELECT COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.POSITION = "var0" INTERSECT SELECT COUNTRYalias1.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias1 JOIN MATCH_SEASON AS MATCH_SEASONalias1 ON MATCH_SEASONalias1.COUNTRY = COUNTRYalias1.COUNTRY_ID WHERE MATCH_SEASONalias1.POSITION = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which college have both players with position midfielder and players with position defender ?<CODESPLIT>SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.POSITION = "var0" INTERSECT SELECT MATCH_SEASONalias1.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias1 WHERE MATCH_SEASONalias1.POSITION = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the entry names of catalog with the attribute possessed by most entries .<CODESPLIT>SELECT COUNT( CLIMBERalias0.* ) FROM CLIMBER AS CLIMBERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of climbers in descending order of points .<CODESPLIT>SELECT PEOPLEalias0.HEIGHT , PEOPLEalias0.WEIGHT FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of climbers whose country is not var0 .<CODESPLIT>SELECT CLIMBERalias0.NAME FROM CLIMBER AS CLIMBERalias0 WHERE CLIMBERalias0.COUNTRY != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the state with the largest population<CODESPLIT>SELECT MAX( CLIMBERalias0.POINTS ) FROM CLIMBER AS CLIMBERalias0 WHERE CLIMBERalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct countries are the climbers from ?<CODESPLIT>SELECT COUNT( DISTINCT CLIMBERalias0.COUNTRY ) FROM CLIMBER AS CLIMBERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which college have both players with position midfielder and players with position defender ?<CODESPLIT>SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries of mountains with height bigger than var0 ?<CODESPLIT>SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average price for each type of product ?<CODESPLIT>SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.HEIGHT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct ranges of the mountains with the top var0 prominence .<CODESPLIT>SELECT DISTINCT MOUNTAINalias0.RANGE FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.PROMINENCE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of climbers and the names of mountains they climb .<CODESPLIT>SELECT CLIMBERalias0.NAME , MOUNTAINalias0.NAME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the state which has the most number of customers .<CODESPLIT>SELECT CLIMBERalias0.NAME , MOUNTAINalias0.HEIGHT FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the height of the mountain climbed by the climber with the maximum points .<CODESPLIT>SELECT MOUNTAINalias0.HEIGHT FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ORDER BY CLIMBERalias0.POINTS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct names of mountains climbed by climbers from country " var0 " .<CODESPLIT>SELECT EXHIBITIONalias0.THEME , EXHIBITIONalias0.YEAR FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.TICKET_PRICE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the times used by climbers to climb mountains in Country var0 .<CODESPLIT>SELECT DISTINCT TEACHERSalias0.FIRSTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the countries and the number of climbers from each country .<CODESPLIT>SELECT AVG( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) , MAX( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) , MIN( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the countries that have more than one mountain .<CODESPLIT>SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 GROUP BY MOUNTAINalias0.COUNTRY HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of mountains that do not have any climber .<CODESPLIT>SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ID NOT IN ( SELECT CLIMBERalias0.MOUNTAIN_ID FROM CLIMBER AS CLIMBERalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and names of the countries which have more than var0 car makers or produce the ' var1 ' model ?<CODESPLIT>SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 INTERSECT SELECT MOUNTAINalias1.COUNTRY FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.HEIGHT < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the range that has the most number of mountains .<CODESPLIT>SELECT DISTINCT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where does the customer with the first name Linda live ? And what is her email ?<CODESPLIT>SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 OR MOUNTAINalias0.PROMINENCE > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many body builders are there ?<CODESPLIT>SELECT COUNT( * ) FROM BODY_BUILDER AS BODY_BUILDERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the total scores of body builders in ascending order .<CODESPLIT>SELECT DISTINCT DEPARTMENTalias0.CREATION FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID JOIN HEAD AS HEADalias0 ON MANAGEMENTalias0.HEAD_ID = HEADalias0.HEAD_ID WHERE HEADalias0.BORN_STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many sections does course var0 has ?<CODESPLIT>SELECT BODY_BUILDERalias0.CLEAN_JERK , BODY_BUILDERalias0.SNATCH FROM BODY_BUILDER AS BODY_BUILDERalias0 ORDER BY BODY_BUILDERalias0.SNATCH ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average snatch score of body builders ?<CODESPLIT>SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 ORDER BY CHIP_MODELalias0.LAUNCH_YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the clean and jerk score of the body builder with the highest total score ?<CODESPLIT>SELECT TECHNICIANalias0.STARTING_YEAR , TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birthdays of people in ascending order of height ?<CODESPLIT>SELECT PEOPLEalias0.BIRTH_DATE FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of body builders ?<CODESPLIT>SELECT COUNT( * ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 WHERE AGE < var0 GROUP BY PERSONalias0.GENDER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of body builders whose total score is higher than var0 ?<CODESPLIT>SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 AND MAXOCCUPANCY > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the body builder with the greatest body weight ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birth date and birth place of the body builder with the highest total points ?<CODESPLIT>SELECT PEOPLEalias0.BIRTH_DATE , PEOPLEalias0.BIRTH_PLACE FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ORDER BY BODY_BUILDERalias0.TOTAL DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the heights of body builders with total score smaller than var0 ?<CODESPLIT>SELECT PEOPLEalias0.HEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.TOTAL < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many times did var0 lose in var1 postseason ?<CODESPLIT>SELECT AVG( BODY_BUILDERalias0.TOTAL ) FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of tourist attraction that var0 visited but var1 did not visit ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ORDER BY BODY_BUILDERalias0.TOTAL DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each birth place along with the number of people from there .<CODESPLIT>SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.BIRTH_PLACE FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.BIRTH_PLACE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common birth place of people ?<CODESPLIT>SELECT PEOPLEalias0.BIRTH_PLACE FROM PEOPLE AS PEOPLEalias0 GROUP BY BIRTH_PLACE ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birth places that are shared by at least two people ?<CODESPLIT>SELECT PEOPLEalias0.BIRTH_PLACE FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.BIRTH_PLACE HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the height and weight of people in descending order of height .<CODESPLIT>SELECT RESTYPEDESCRIPTION FROM RESTAURANT_TYPE AS RESTAURANT_TYPEalias0 WHERE RESTYPENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and theme for all concerts and the number of singers in each concert .<CODESPLIT>SELECT * FROM BODY_BUILDER AS BODY_BUILDERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and origins of people who are not body builders .<CODESPLIT>SELECT PEOPLEalias0.BIRTH_PLACE , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 EXCEPT SELECT PEOPLEalias1.BIRTH_PLACE , PEOPLEalias1.NAME FROM PEOPLE AS PEOPLEalias1 JOIN BODY_BUILDER AS BODY_BUILDERalias0 ON PEOPLEalias1.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct birth places are there ?<CODESPLIT>SELECT COUNT( DISTINCT PEOPLEalias0.BIRTH_PLACE ) FROM PEOPLE AS PEOPLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many persons are not body builders ?<CODESPLIT>SELECT COUNT( * ) , SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST GROUP BY SCIENTISTSalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the weight of the body builders who have snatch score higher than var0 or have the height greater than var1 .<CODESPLIT>SELECT PEOPLEalias0.WEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.SNATCH > var0 OR PEOPLEalias0.HEIGHT > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the total scores of the body builders whose birthday contains the string " var0 " ?<CODESPLIT>SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.RANK = "var0" OR CAPTAINalias0.RANK = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the minimum snatch score ?<CODESPLIT>SELECT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is zip code of customer with first name as var0 and last name as var1 ?<CODESPLIT>SELECT COUNT( * ) FROM ELECTION AS ELECTIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the votes of elections in descending order .<CODESPLIT>SELECT ELECTIONalias0.VOTES FROM ELECTION AS ELECTIONalias0 ORDER BY ELECTIONalias0.VOTES DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the dates and vote percents of elections .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the minimum and maximum vote percents of elections ?<CODESPLIT>SELECT MILLalias0.NAME FROM MILL AS MILLalias0 WHERE MILLalias0.LOCATION != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common type of ships .<CODESPLIT>SELECT REPRESENTATIVEalias0.NAME , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of representatives whose party is not " var0 " ?<CODESPLIT>SELECT SALARYalias0.SALARY FROM SALARY AS SALARYalias0 WHERE SALARYalias0.YEAR = var0 UNION SELECT SALARYalias1.SALARY FROM SALARY AS SALARYalias1 WHERE SALARYalias1.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the life spans of representatives from var0 state or var1 state ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = "var0" AND FLIGHTSalias0.SOURCEAIRPORT = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the wheels and locations of the railways .<CODESPLIT>SELECT ELECTIONalias0.DATE , REPRESENTATIVEalias0.NAME FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of representatives with more than var0 votes in election ?<CODESPLIT>SELECT REPRESENTATIVEalias0.NAME FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID WHERE ELECTIONalias0.VOTES > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of representatives in descending order of votes ?<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.ROOM_COUNT ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the delegates and the names of county they belong to .<CODESPLIT>SELECT REPRESENTATIVEalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ORDER BY ELECTIONalias0.VOTES ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the lifespans of representatives in descending order of vote percent ?<CODESPLIT>SELECT DEBATEalias0.DATE FROM DEBATE AS DEBATEalias0 WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of votes of representatives from party " var0 " ?<CODESPLIT>SELECT SUM( CHANNELalias0.SHARE_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different parties of representative ? Show the party name and the number of representatives in each party .<CODESPLIT>SELECT COUNT( REPRESENTATIVEalias0.* ) , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY REPRESENTATIVEalias0.PARTY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the party that has the largest number of representatives ?<CODESPLIT>SELECT COUNT( REPRESENTATIVEalias0.* ) , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY PARTY ORDER BY COUNT( REPRESENTATIVEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What parties have at least three representatives ?<CODESPLIT>SELECT REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY REPRESENTATIVEalias0.PARTY HAVING COUNT( REPRESENTATIVEalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What states have at least two representatives ?<CODESPLIT>SELECT HOTELSalias0.HOTEL_ID , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of representatives that have not participated in elections listed here .<CODESPLIT>SELECT REPRESENTATIVEalias0.NAME FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.REPRESENTATIVE_ID NOT IN ( SELECT ELECTIONalias0.REPRESENTATIVE_ID FROM ELECTION AS ELECTIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the parties that have both representatives in var0 state and representatives in var1 state .<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 ORDER BY CITYalias0.REGIONAL_POPULATION DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct parties are there for representatives ?<CODESPLIT>SELECT COUNT( DISTINCT REPRESENTATIVEalias0.PARTY ) FROM REPRESENTATIVE AS REPRESENTATIVEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many apartment bookings are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the start dates and end dates of all the apartment bookings .<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_END_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct building descriptions .<CODESPLIT>SELECT DISTINCT APARTMENT_BUILDINGSalias0.BUILDING_DESCRIPTION FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the major roles in the movie " var0 "<CODESPLIT>SELECT APARTMENT_BUILDINGSalias0.BUILDING_SHORT_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the addresses and phones of all the buildings managed by " var0 " .<CODESPLIT>SELECT APARTMENT_BUILDINGSalias0.BUILDING_ADDRESS , APARTMENT_BUILDINGSalias0.BUILDING_PHONE FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the building full names that contain the word " var0 " ?<CODESPLIT>SELECT APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which shop has happy hour most frequently ? List its id and number of happy hours .<CODESPLIT>SELECT MAX( APARTMENTSalias0.BATHROOM_COUNT ) , MIN( APARTMENTSalias0.BATHROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of bedrooms of all apartments ?<CODESPLIT>SELECT AVG( CINEMAalias0.CAPACITY ) , MAX( CINEMAalias0.CAPACITY ) , MIN( CINEMAalias0.CAPACITY ) FROM CINEMA AS CINEMAalias0 WHERE CINEMAalias0.OPENNING_YEAR >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the elimination moves of wrestlers whose team is " var0 " ?<CODESPLIT>SELECT APARTMENTSalias0.ROOM_COUNT , APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of rooms of apartments with type code " var0 " ?<CODESPLIT>SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the apartment numbers of the apartments with type code " var0 " .<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the first names and last names of all guests<CODESPLIT>SELECT GUESTSalias0.GUEST_FIRST_NAME , GUESTSalias0.GUEST_LAST_NAME FROM GUESTS AS GUESTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the date of birth for all the guests with gender code " var0 " .<CODESPLIT>SELECT GUESTSalias0.DATE_OF_BIRTH FROM GUESTS AS GUESTSalias0 WHERE GUESTSalias0.GENDER_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the apartment numbers , start dates , and end dates of all the apartment bookings .<CODESPLIT>SELECT APARTMENTSalias0.APT_NUMBER , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the booking start and end dates of the apartments with type code " var0 " ?<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the booking start and end dates of the apartments with more than var0 bedrooms ?<CODESPLIT>SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_MAKE , ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ORDER BY ASSETSalias0.ASSET_DISPOSED_DATE ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the booking status code of the apartment with apartment number " var0 " ?<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_NUMBER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct apartment numbers of the apartments that have bookings with status code " var0 " .<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE POSITION = "var0" GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( LAPTIMESalias0.* ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average room count of the apartments that have booking status code " var0 " .<CODESPLIT>SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the guest first names , start dates , and end dates of all the apartment bookings .<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , GUESTSalias0.GUEST_FIRST_NAME FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the start dates and end dates of all the apartment bookings made by guests with gender code " var0 " .<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE GUESTSalias0.GENDER_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first names and last names of all the guests that have apartment bookings with status code " var0 " .<CODESPLIT>SELECT GUESTSalias0.GUEST_FIRST_NAME , GUESTSalias0.GUEST_LAST_NAME FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the facility codes of apartments with more than var0 bedrooms .<CODESPLIT>SELECT APARTMENT_FACILITIESalias0.FACILITY_CODE FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_FACILITIESalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.BEDROOM_COUNT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the total number of rooms of all apartments with facility code " var0 " .<CODESPLIT>SELECT DISTINCT COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" OR COUNTRYLANGUAGEalias0.LANGUAGE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the total number of rooms of the apartments in the building with short name " var0 " .<CODESPLIT>SELECT SUM( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENT_BUILDINGSalias0.BUILDING_SHORT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the addresses of the buildings that have apartments with more than var0 bathrooms .<CODESPLIT>SELECT APARTMENT_BUILDINGSalias0.BUILDING_ADDRESS FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENTSalias0.BATHROOM_COUNT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the detail of the location var0 ?<CODESPLIT>SELECT APARTMENTSalias0.APT_NUMBER , APARTMENTSalias0.APT_TYPE_CODE FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the booking status code and the corresponding number of bookings .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all the apartment numbers sorted by the room count in ascending order .<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.ROOM_COUNT ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the apartment number with the largest number of bedrooms .<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.BEDROOM_COUNT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order .<CODESPLIT>SELECT APT_TYPE_CODE , COUNT( * ) FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the top var0 apartment type codes sorted by the average number of rooms in descending order .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias1 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE EXHIBITIONalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the apartment type code that has the largest number of total rooms , together with the number of bathrooms and number of bedrooms .<CODESPLIT>SELECT APARTMENTSalias0.BATHROOM_COUNT , APARTMENTSalias0.BEDROOM_COUNT , APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY SUM( APARTMENTSalias0.ROOM_COUNT ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common apartment type code .<CODESPLIT>SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common apartment type code among apartments with more than var0 bathroom .<CODESPLIT>SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.VOTES DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which apartment type code is the most common among apartments with more than one bathroom ?<CODESPLIT>SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 WHERE BATHROOM_COUNT > var0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each apartment type code , and the maximum and minimum number of rooms for each type .<CODESPLIT>SELECT COUNT( * ) FROM COUNTY AS COUNTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each gender code and the corresponding count of guests sorted by the count in descending order .<CODESPLIT>SELECT BATTLEalias0.BULGARIAN_COMMANDER , BATTLEalias0.NAME , BATTLEalias0.RESULT FROM BATTLE AS BATTLEalias0 EXCEPT SELECT BATTLEalias1.BULGARIAN_COMMANDER , BATTLEalias1.NAME , BATTLEalias1.RESULT FROM BATTLE AS BATTLEalias1 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias1.ID WHERE SHIPalias0.LOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many apartments do not have any facility ?<CODESPLIT>SELECT COUNT( * ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_ID NOT IN ( SELECT APT_ID FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the apartment numbers of apartments with bookings that have status code both " var1 " and " var0 "<CODESPLIT>SELECT APARTMENTSalias0.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = "var0" INTERSECT SELECT APARTMENTSalias1.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias1 JOIN APARTMENTS AS APARTMENTSalias1 ON APARTMENT_BOOKINGSalias1.APT_ID = APARTMENTSalias1.APT_ID WHERE APARTMENT_BOOKINGSalias1.BOOKING_STATUS_CODE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the apartment numbers of apartments with unit status availability of both var0 and var1 .<CODESPLIT>SELECT APARTMENTSalias0.APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 JOIN VIEW_UNIT_STATUS AS VIEW_UNIT_STATUSalias0 ON VIEW_UNIT_STATUSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE VIEW_UNIT_STATUSalias0.AVAILABLE_YN = var0 INTERSECT SELECT APARTMENTSalias1.APT_NUMBER FROM APARTMENTS AS APARTMENTSalias1 JOIN VIEW_UNIT_STATUS AS VIEW_UNIT_STATUSalias1 ON VIEW_UNIT_STATUSalias1.APT_ID = APARTMENTSalias1.APT_ID WHERE VIEW_UNIT_STATUSalias1.AVAILABLE_YN = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many games are held after season var0 ?<CODESPLIT>SELECT COUNT( * ) FROM GAME AS GAMEalias0 WHERE GAMEalias0.SEASON > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the dates of games by the home team name in descending order .<CODESPLIT>SELECT GAMEalias0.DATE FROM GAME AS GAMEalias0 ORDER BY GAMEalias0.HOME_TEAM DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the season , home team , away team of all the games .<CODESPLIT>SELECT GAMEalias0.AWAY_TEAM , GAMEalias0.HOME_TEAM , GAMEalias0.SEASON FROM GAME AS GAMEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the song that was released in the most recent year ?<CODESPLIT>SELECT AVG( STADIUMalias0.HOME_GAMES ) , MAX( STADIUMalias0.HOME_GAMES ) , MIN( STADIUMalias0.HOME_GAMES ) FROM STADIUM AS STADIUMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of distinct country codes of all players .<CODESPLIT>SELECT STADIUMalias0.AVERAGE_ATTENDANCE FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY_PERCENTAGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show the titles , and authors or editors for all books made after the year var0 .<CODESPLIT>SELECT INJURY_ACCIDENTalias0.NUMBER_OF_MATCHES , INJURY_ACCIDENTalias0.PLAYER , INJURY_ACCIDENTalias0.SOURCE FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 WHERE INJURY_ACCIDENTalias0.INJURY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the season of the game which causes the player ' var0 ' to get injured ?<CODESPLIT>SELECT GAMEalias0.SEASON FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE INJURY_ACCIDENTalias0.PLAYER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids , scores , and dates of the games which caused at least two injury accidents ?<CODESPLIT>SELECT GAMEalias0.DATE , GAMEalias0.ID , GAMEalias0.SCORE FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID GROUP BY GAMEalias0.ID HAVING COUNT( INJURY_ACCIDENTalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the stadium where the most injury accidents happened ?<CODESPLIT>SELECT STADIUMalias0.ID , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN GAME AS GAMEalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID GROUP BY STADIUMalias0.ID ORDER BY COUNT( INJURY_ACCIDENTalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which season and which stadium did any player have an injury of ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT GAMEalias0.SEASON , STADIUMalias0.NAME FROM GAME AS GAMEalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE INJURY_ACCIDENTalias0.INJURY = "var0" OR INJURY_ACCIDENTalias0.INJURY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different kinds of information sources are there for injury accidents ?<CODESPLIT>SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_DESCRIPTION , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the country code and first name of the players who won in both tourney var0 and var1 ?<CODESPLIT>SELECT COUNT( * ) FROM GAME AS GAMEalias0 WHERE GAMEalias0.ID NOT IN ( SELECT INJURY_ACCIDENTalias0.GAME_ID FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct kinds of injuries happened after season var0 ?<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.AMENID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the stadium where both the player ' var0 ' and the player ' var1 ' got injured .<CODESPLIT>SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average amount purchased and value purchased for the supplier who supplies the most products .<CODESPLIT>SELECT STADIUMalias0.AVERAGE_ATTENDANCE , STADIUMalias0.NAME , STADIUMalias0.TOTAL_ATTENDANCE FROM STADIUM AS STADIUMalias0 EXCEPT SELECT STADIUMalias1.AVERAGE_ATTENDANCE , STADIUMalias1.NAME , STADIUMalias1.TOTAL_ATTENDANCE FROM GAME AS GAMEalias0 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which stadium name contains the substring " var0 " ?<CODESPLIT>SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many games has each stadium held ?<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each injury accident , find the date of the game and the name of the injured player in the game , and sort the results in descending order of game season .<CODESPLIT>SELECT GAMEalias0.DATE , INJURY_ACCIDENTalias0.PLAYER FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID ORDER BY GAMEalias0.SEASON DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all country and league names .<CODESPLIT>SELECT COUNTRYalias0.NAME , LEAGUEalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN LEAGUE AS LEAGUEalias0 ON LEAGUEalias0.COUNTRY_ID = COUNTRYalias0.ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many leagues are there in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 JOIN LEAGUE AS LEAGUEalias0 ON LEAGUEalias0.COUNTRY_ID = COUNTRYalias0.ID WHERE COUNTRYalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average weight of all players ?<CODESPLIT>SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the least common media type in all tracks ?<CODESPLIT>SELECT MAX( PLAYERalias0.WEIGHT ) , MIN( PLAYERalias0.WEIGHT ) FROM PLAYER AS PLAYERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all player names who have an overall rating higher than the average .<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of players who have the best dribbling ?<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 ORDER BY PROJECTSalias0.HOURS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all players who have a crossing score higher than var0 and prefer their var1 foot .<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.CROSSING > var0 AND PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all var0-footed players who have overall rating between var1 and var2 .<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.OVERALL_RATING <= var2 AND PLAYER_ATTRIBUTESalias0.OVERALL_RATING >= var1 AND PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating for right-footed players and left-footed players ?<CODESPLIT>SELECT AVG( PLAYER_ATTRIBUTESalias0.OVERALL_RATING ) , PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 GROUP BY PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of all players with an overall rating greater than var0 , how many are right-footed and left-footed ?<CODESPLIT>SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" AND STUDENTalias0.AGE > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all of the player ids with a height of at least var0cm and an overall rating higher than var1 .<CODESPLIT>SELECT PLAYERalias0.PLAYER_API_ID FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.HEIGHT >= var0 INTERSECT SELECT PLAYER_ATTRIBUTESalias0.PLAYER_API_ID FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 WHERE PLAYER_ATTRIBUTESalias0.OVERALL_RATING > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all of the ids for var2-footed players with a height between var0cm and var1cm .<CODESPLIT>SELECT UNIVERSITYalias0.ENROLLMENT , UNIVERSITYalias0.PRIMARY_CONFERENCE FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.FOUNDED LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name and salary for all employees sorted by salary .<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTESalias0.OVERALL_RATING DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and birthdays of the top five players in terms of potential .<CODESPLIT>SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION > var1 OR TRANSACTIONSalias0.SHARE_COUNT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many performances are there ?<CODESPLIT>SELECT COUNT( * ) FROM PERFORMANCE AS PERFORMANCEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all program origins in the alphabetical order .<CODESPLIT>SELECT PERFORMANCEalias0.HOST FROM PERFORMANCE AS PERFORMANCEalias0 ORDER BY PERFORMANCEalias0.ATTENDANCE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates and locations of performances ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_CLAIMED = ( SELECT MAX( CLAIM_HEADERSalias1.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age of students who do not have any pet .<CODESPLIT>SELECT PERFORMANCEalias0.ATTENDANCE FROM PERFORMANCE AS PERFORMANCEalias0 WHERE PERFORMANCEalias0.LOCATION = "var0" OR PERFORMANCEalias0.LOCATION = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of attendees for performances ?<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var0" ) AND BORDER_INFOalias0.STATE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of all the authors who have written a paper with title containing the word " var0 " .<CODESPLIT>SELECT PERFORMANCEalias0.DATE FROM PERFORMANCE AS PERFORMANCEalias0 ORDER BY PERFORMANCEalias0.ATTENDANCE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different locations and the number of performances at each location .<CODESPLIT>SELECT DISTINCT CUSTOMERalias0.CREDIT_SCORE , CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common location of performances .<CODESPLIT>SELECT PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations that have at least two performances .<CODESPLIT>SELECT COUNT( * ) , ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 GROUP BY ROLLER_COASTERalias0.STATUS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations that have both performances with more than var0 attendees and performances with less than var1 attendees .<CODESPLIT>SELECT PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 WHERE PERFORMANCEalias0.ATTENDANCE > var0 INTERSECT SELECT PERFORMANCEalias1.LOCATION FROM PERFORMANCE AS PERFORMANCEalias1 WHERE PERFORMANCEalias1.ATTENDANCE < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and the location of the performances they attended .<CODESPLIT>SELECT MEMBERalias0.NAME , PERFORMANCEalias0.LOCATION FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and the location of performances they attended in ascending alphabetical order of their names .<CODESPLIT>SELECT MEMBERalias0.NAME , PERFORMANCEalias0.LOCATION FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ORDER BY MEMBERalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the dates of performances with attending members whose roles are " var0 " .<CODESPLIT>SELECT PERFORMANCEalias0.DATE FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID WHERE MEMBERalias0.ROLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the feature type name of feature var0 ?<CODESPLIT>SELECT MEMBERalias0.NAME , PERFORMANCEalias0.DATE FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ORDER BY PERFORMANCEalias0.ATTENDANCE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age of the students who have allergies with var0 and var1 types .<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT MEMBER_ATTENDANCEalias0.MEMBER_ID FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the buildings which have rooms with capacity more than var0 .<CODESPLIT>SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.STATE_PROVINCE_COUNTY HAVING COUNT( * ) BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Count the number of rooms that are not in the var0 building .<CODESPLIT>SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRICE ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and building of the departments whose budget is more than the average budget ?<CODESPLIT>SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the room number of the rooms which can sit var0 to var1 students and their buildings .<CODESPLIT>SELECT COUNT( DISTINCT DORMID ) FROM HAS_AMENITY AS HAS_AMENITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students live in var0 or var1 ?<CODESPLIT>SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the student who has the highest total credits in the var0 department .<CODESPLIT>SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE DEPT_NAME = "var0" ORDER BY TOT_CRED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of musicals that do not have actors .<CODESPLIT>SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students have advisors ?<CODESPLIT>SELECT COUNT( DISTINCT S_ID ) FROM ADVISOR AS ADVISORalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many departments offer courses ?<CODESPLIT>SELECT COUNT( DISTINCT DEPT_NAME ) FROM COURSE AS COURSEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different courses offered by var0 department ?<CODESPLIT>SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title of courses that have two prerequisites ?<CODESPLIT>SELECT COUNT( * ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title , credit , and department name of courses that have more than one prerequisites ?<CODESPLIT>SELECT SUM( GRANTSalias0.GRANT_AMOUNT ) FROM GRANTS AS GRANTSalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses that do not have prerequisite ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the courses that do not have any prerequisite ?<CODESPLIT>SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the headquarters that have both companies in banking industry and companies in oil and gas industry .<CODESPLIT>SELECT COUNT( DISTINCT TEACHESalias0.ID ) FROM TEACHES AS TEACHESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total budgets of the var0 or var1 department .<CODESPLIT>SELECT SUM( DEPARTMENTalias0.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = "var0" OR DEPT_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the department name of the instructor whose name contains ' var0 ' .<CODESPLIT>SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many rooms whose capacity is less than var1 does the var0 building have ?<CODESPLIT>SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = "var0" AND CLASSROOMalias0.CAPACITY < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and budget of departments whose budgets are more than the average budget .<CODESPLIT>SELECT DEPARTMENTalias0.BUDGET , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the name of the instructor who is in var0 department and earns the lowest salary ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = "var0" ORDER BY INSTRUCTORalias0.SALARY LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title of course that is provided by both var0 and var1 departments .<CODESPLIT>SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = "var0" INTERSECT SELECT COURSEalias1.TITLE FROM COURSE AS COURSEalias1 WHERE DEPT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title of course that is provided by var0 but not var1 departments .<CODESPLIT>SELECT CATALOGSalias0.CATALOG_PUBLISHER FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOG_PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of instructors who taught a class in var0 var1 but not in var2 var3 .<CODESPLIT>SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = "var0" AND TEACHESalias0.YEAR = var1 EXCEPT SELECT TEACHESalias1.ID FROM TEACHES AS TEACHESalias1 WHERE TEACHESalias1.SEMESTER = "var2" AND TEACHESalias1.YEAR = var3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of students who took any class in the years of var0 and var1 .<CODESPLIT>SELECT DISTINCT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE YEAR = var0 OR YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the top var0 departments that provide the largest amount of courses ?<CODESPLIT>SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department that offers the highest total credits ?<CODESPLIT>SELECT DERIVED_TABLEalias0.AGE , DERIVED_TABLEalias0.ID , DERIVED_TABLEalias0.NAME FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID GROUP BY DERIVED_TABLEalias0.ID HAVING COUNT( VISITalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all courses ordered by their titles and credits .<CODESPLIT>SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.TITLE , COURSEalias0.CREDITS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which department has the lowest budget ?<CODESPLIT>SELECT REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME FROM REF_SHIPPING_AGENTS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias0.SHIPPING_AGENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and buildings of all departments sorted by the budget from large to small .<CODESPLIT>SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN EVENT AS EVENTalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID WHERE EVENTalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which film has the most copies in the inventory ? List both title and id .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.SALARY DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the information of all instructors ordered by their salary in ascending order .<CODESPLIT>SELECT * FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.SALARY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of templates with template type code var0 or var0T ?<CODESPLIT>SELECT DEPT_NAME , STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 ORDER BY TOT_CRED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list in alphabetic order all course names and their instructors ' names in year var0 .<CODESPLIT>SELECT COURSEalias0.TITLE , INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.COURSE_ID = COURSEalias0.COURSE_ID JOIN INSTRUCTOR AS INSTRUCTORalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID WHERE YEAR = var0 ORDER BY COURSEalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has the highest temperature in February ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN ADVISOR AS ADVISORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID GROUP BY ADVISORalias0.I_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of sponsors of players whose residence is either " var0 " or " var1 " .<CODESPLIT>SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN ADVISOR AS ADVISORalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID GROUP BY ADVISORalias0.S_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of department where has the largest number of professors with a Ph.D . degree ?<CODESPLIT>SELECT CLASSROOMalias0.BUILDING , COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CAPACITY > var0 GROUP BY CLASSROOMalias0.BUILDING ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different parties of people along with the number of people in each party .<CODESPLIT>SELECT AVG( CLASSROOMalias0.CAPACITY ) , CLASSROOMalias0.BUILDING , MAX( CLASSROOMalias0.CAPACITY ) FROM CLASSROOM AS CLASSROOMalias0 GROUP BY CLASSROOMalias0.BUILDING ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of stations that have latitude above var0 and never had bike availability below var1 ?<CODESPLIT>SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 GROUP BY COURSEalias0.TITLE HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total credits of courses provided by different department .<CODESPLIT>SELECT COUNT( * ) FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.ID NOT IN ( SELECT MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the program owners that have some programs in both morning and night time .<CODESPLIT>SELECT DEPT_NAME , MIN( INSTRUCTORalias0.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of courses provided in each semester and year .<CODESPLIT>SELECT COUNT( * ) , SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY SECTIONalias0.SEMESTER , SECTIONalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the year which offers the largest number of courses .<CODESPLIT>SELECT SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the year and semester when offers the largest number of courses .<CODESPLIT>SELECT SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY SEMESTER , YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the checking balance and saving balance in the var0 's account .<CODESPLIT>SELECT DEPT_NAME FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of students in each department .<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the semester and year which has the least number of student taking any class .<CODESPLIT>SELECT SEMESTER , YEAR FROM TAKES GROUP BY SEMESTER , YEAR ORDER BY COUNT( * ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Display the first name , and department number for all employees whose last name is " var0 " .<CODESPLIT>SELECT I_ID FROM ADVISOR AS ADVISORalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and salary of the instructors who are advisors of any student from var0 department ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the courses that do not have any prerequisite ?<CODESPLIT>SELECT COURSEalias0.COURSE_ID FROM COURSE AS COURSEalias0 EXCEPT SELECT COURSE_ID FROM PREREQ ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the title of the prerequisite class of var0 course ?<CODESPLIT>SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.PREREQ_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the first staff for the projects started working ?<CODESPLIT>SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.COURSE_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.PREREQ_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of students who have taken any course in the fall semester of year var1 .<CODESPLIT>SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID IN ( SELECT ID FROM TAKES WHERE SEMESTER = "var0" AND YEAR = var1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the title of the course that was offered at building var0 during the fall semester in the year of var2 ?<CODESPLIT>SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE SECTIONalias0.BUILDING = "var0" AND SECTIONalias0.SEMESTER = "var1" AND SECTIONalias0.YEAR = var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the instructors who taught var0 course before .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID JOIN COURSE AS COURSEalias0 ON TEACHESalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of instructors who are advisors of the students from the var0 department , and sort the results by students ' total credit .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of instructor who is the advisor of the student who has the highest number of total credits .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID ORDER BY STUDENTalias0.TOT_CRED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many colors are never used by any product ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.ID NOT IN ( SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of scientists involved for each project name .<CODESPLIT>SELECT INSTRUCTORalias0.ID FROM INSTRUCTOR AS INSTRUCTORalias0 EXCEPT SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of instructors who didn't each any courses in any var0 semester .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" OR PRODUCTSalias0.PRODUCT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which gender makes up the majority of the staff ?<CODESPLIT>SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME ORDER BY AVG( INSTRUCTORalias0.SALARY ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many staff does each project has ? List the project id and the number in an ascending order .<CODESPLIT>SELECT AVG( INSTRUCTORalias0.SALARY ) , COUNT( * ) FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON INSTRUCTORalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME ORDER BY DEPARTMENTalias0.BUDGET DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of persons who are friends with var0 .<CODESPLIT>SELECT COURSEalias0.CREDITS , COURSEalias0.TITLE FROM CLASSROOM AS CLASSROOMalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.BUILDING = CLASSROOMalias0.BUILDING AND SECTIONalias0.ROOM_NUMBER = CLASSROOMalias0.ROOM_NUMBER JOIN COURSE AS COURSEalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE CLASSROOMalias0.CAPACITY = ( SELECT MAX( CLASSROOMalias1.CAPACITY ) FROM CLASSROOM AS CLASSROOMalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of students who didn't take any course from var0 department .<CODESPLIT>SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID NOT IN ( SELECT DERIVED_TABLEalias0.ID FROM TAKES AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPT_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of students and total number of instructors for each department .<CODESPLIT>SELECT COUNT( DISTINCT INSTRUCTORalias0.ID ) , COUNT( DISTINCT STUDENTalias0.ID ) , INSTRUCTORalias0.DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME GROUP BY INSTRUCTORalias0.DEPT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of students who have taken the prerequisite course of the course with title var0 .<CODESPLIT>SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME ORDER BY AVG( INSTRUCTORalias0.SALARY ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many authors published at var1 in var0 ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of students who took some course offered by var0 department .<CODESPLIT>SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID GROUP BY ORGANIZATIONSalias0.ORGANIZATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the building , room number , semester and year of all courses offered by var0 department sorted by course titles .<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 WHERE COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors in computer science department<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors in Comp . Sci . department with salary var1 var2 .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = "var0" AND INSTRUCTORalias0.SALARY var1 var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the instructors in the Comp . Sci . department who earn more than var1 ?<CODESPLIT>SELECT REPRESENTATIVEalias0.NAME FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ORDER BY ELECTIONalias0.VOTES DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors who have taught some course and the course_id .<CODESPLIT>SELECT INSTRUCTORalias0.NAME , TEACHESalias0.COURSE_ID FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors in the var0 department who have taught some course and the course_id .<CODESPLIT>SELECT INSTRUCTORalias0.NAME , TEACHESalias0.COURSE_ID FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID WHERE INSTRUCTORalias0.DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors whose name includes the substring " var0 " .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List in alphabetic order the names of all distinct instructors .<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find courses that ran in var0 var1 or in var2 var3 .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYNAME FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CAR_MAKERSalias0.COUNTRY ORDER BY COUNT ( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find courses that ran in var0 var1 and in var2 var3 .<CODESPLIT>SELECT DISTINCT COUNT( DERIVED_TABLEalias0.KEYPHRASEID ) , DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY DERIVED_TABLEalias0.KEYPHRASEID ORDER BY COUNT( DERIVED_TABLEalias0.KEYPHRASEID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find courses that ran in var0 var1 but not in var2 var3 .<CODESPLIT>SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = "var0" AND SECTIONalias0.YEAR = var1 EXCEPT SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = "var2" AND SECTIONalias1.YEAR = var3 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the salaries of all distinct instructors that are less than the largest salary .<CODESPLIT>SELECT COUNT( DISTINCT STUDENTS_IN_DETENTIONalias0.STUDENT_ID ) FROM STUDENTS_IN_DETENTION AS STUDENTS_IN_DETENTIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of instructors who teach a course in the var0 var1 semester .<CODESPLIT>SELECT COUNT( DISTINCT TEACHESalias0.ID ) FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = "var0" AND TEACHESalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers related to var1 cited the dataset var0 ?<CODESPLIT>SELECT AVG( INSTRUCTORalias0.SALARY ) , DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the customers who have once bought product " var0 " .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY > ( SELECT MIN( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors whose salary is greater than the salary of all instructors in the var0 department .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY > ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many debates are there ?<CODESPLIT>SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.ARTIST = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the venues of debates in ascending order of the number of audience .<CODESPLIT>SELECT COUNT( * ) , DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many type of governments are in var0 ?<CODESPLIT>SELECT DEBATEalias0.DATE , DEBATEalias0.VENUE FROM DEBATE AS DEBATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the dates of debates with number of audience bigger than var0<CODESPLIT>SELECT DEBATEalias0.DATE FROM DEBATE AS DEBATEalias0 WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of people aged either var0 or var1 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE = var0 OR PEOPLEalias0.AGE = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the party of the youngest people ?<CODESPLIT>SELECT PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.AGE ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different parties of people along with the number of people in each party .<CODESPLIT>SELECT COUNT( * ) , PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.PARTY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses are offered by the Computer Info . Systems department ?<CODESPLIT>SELECT PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 GROUP BY PARTY ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct venues of debates<CODESPLIT>SELECT DISTINCT DEBATEalias0.VENUE FROM DEBATE AS DEBATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of people , and dates and venues of debates they are on the affirmative side .<CODESPLIT>SELECT DEBATEalias0.DATE , DEBATEalias0.VENUE , PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of people , and dates and venues of debates they are on the negative side , ordered in ascending alphabetical order of name .<CODESPLIT>SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the popular publications on var0<CODESPLIT>SELECT PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of people and the number of times they have been on the affirmative side of debates .<CODESPLIT>SELECT COUNT( DEBATE_PEOPLEalias0.* ) , PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE GROUP BY PEOPLEalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the problem id and log id which are assigned to the staff named var0 var1 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.NEGATIVE GROUP BY PEOPLEalias0.NAME HAVING COUNT( DEBATE_PEOPLEalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of people that have not been on the affirmative side of debates .<CODESPLIT>SELECT MODEL_LISTalias0.MAKER , MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct names of all wines that have prices higher than some wines from var0 winery .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_DETAILS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the policy type codes associated with the customer " var0 "<CODESPLIT>SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_DETAILS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which type of policy is most frequently used ? Give me the policy type code .<CODESPLIT>SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the policy types that are used by more than var0 customers .<CODESPLIT>SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total and average amount paid in claim headers .<CODESPLIT>SELECT AVG( CLAIM_HEADERSalias0.AMOUNT_PIAD ) , SUM( CLAIM_HEADERSalias0.AMOUNT_PIAD ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total amount claimed in the most recently created document .<CODESPLIT>SELECT SUM( CLAIM_HEADERSalias0.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN CLAIMS_DOCUMENTS AS CLAIMS_DOCUMENTSalias0 ON CLAIM_HEADERSalias0.CLAIM_HEADER_ID = CLAIMS_DOCUMENTSalias0.CLAIM_ID WHERE CLAIMS_DOCUMENTSalias0.CREATED_DATE = ( SELECT CLAIMS_DOCUMENTSalias1.CREATED_DATE FROM CLAIMS_DOCUMENTS AS CLAIMS_DOCUMENTSalias1 ORDER BY CLAIMS_DOCUMENTSalias1.CREATED_DATE LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct product names with price higher than the average .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_CLAIMED = ( SELECT MAX( CLAIM_HEADERSalias1.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies that " var0 " acts in per year ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_PIAD = ( SELECT MIN( CLAIM_HEADERSalias1.AMOUNT_PIAD ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the day in which the difference between the max temperature and min temperature was the smallest . Also report the difference .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias1 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many claim processing stages are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct publishers for books .<CODESPLIT>SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 JOIN CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ON CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID = CLAIMS_PROCESSING_STAGESalias0.CLAIM_STAGE_ID GROUP BY CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID ORDER BY COUNT( CLAIMS_PROCESSINGalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers whose name contains " var0 " .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 ORDER BY EMPLOYEESalias0.BIRTH_DATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the customers who have an deputy policy .<CODESPLIT>SELECT COUNT( DISTINCT FILMalias0.LANGUAGE_ID ) FROM FILM AS FILMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers who either have an deputy policy or uniformed policy .<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.POLICY_TYPE_CODE = "var0" OR POLICIESalias0.POLICY_TYPE_CODE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all the customers and staff members .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT STAFFalias0.STAFF_DETAILS FROM STAFF AS STAFFalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of records of each policy type and its type code .<CODESPLIT>SELECT COUNT( * ) , POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICIESalias0.POLICY_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the customer that has been involved in the most policies .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_DETAILS ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List email address and birthday of customer whose first name as var0 .<CODESPLIT>SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_DESCRIPTION FROM CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 WHERE CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct claim outcome codes are there ?<CODESPLIT>SELECT COUNT( DISTINCT CLAIMS_PROCESSINGalias0.CLAIM_OUTCOME_CODE ) FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which customer is associated with the latest policy ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.START_DATE = ( SELECT MAX( POLICIESalias1.START_DATE ) FROM POLICIES AS POLICIESalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id , the date of account opened , the account name , and other account detail for all accounts .<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.DATE_ACCOUNT_OPENED , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id , the account name , and other account details for all accounts by the customer with first name ' var0 ' .<CODESPLIT>SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = "var0" AND STAFFalias0.STAFF_LAST_NAME = "var1" INTERSECT SELECT PRODUCTalias1.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = "var2" AND STAFFalias1.STAFF_LAST_NAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account name and other account detail for all accounts by the customer with first name var0 and last name var1 .<CODESPLIT>SELECT THIRD_PARTY_COMPANIESalias0.COMPANY_ID , THIRD_PARTY_COMPANIESalias0.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = MAINTENANCE_ENGINEERSalias0.COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias0.COMPANY_ID HAVING COUNT( * ) >= var0 UNION SELECT THIRD_PARTY_COMPANIESalias1.COMPANY_ID , THIRD_PARTY_COMPANIESalias1.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias1 JOIN MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 ON THIRD_PARTY_COMPANIESalias1.COMPANY_ID = MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias1.COMPANY_ID HAVING COUNT( * ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first name and last name for the customer with account name var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the unique first names , last names , and phone numbers for all customers with any account .<CODESPLIT>SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.HEIGHT > var1 OR ROLLER_COASTERalias0.LENGTH > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show customer ids who don't have an account .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer id , first and last name with most number of accounts .<CODESPLIT>SELECT DISTINCT CITYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = "var0" AND COUNTRYLANGUAGEalias0.LANGUAGE = "var1" AND COUNTRYalias0.CONTINENT = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of journalists and the names of the events they reported in ascending order<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show first name and id for all customers with at least var0 accounts .<CODESPLIT>SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of customers for each gender .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.GENDER FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.GENDER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many transactions do we have ?<CODESPLIT>SELECT COUNT( * ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many transaction does each account have ? Show the number and account id .<CODESPLIT>SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.ORIGIN != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Retrieve the title of the paper that has the largest number of authors .<CODESPLIT>SELECT COUNT( * ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average , minimum , maximum , and total transaction amount ?<CODESPLIT>SELECT JOBSalias0.JOB_TITLE , JOBSalias0.MAX_SALARY - JOBSalias0.MIN_SALARY FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MAX_SALARY BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all transactions whose amounts are greater than the average .<CODESPLIT>SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 WHERE FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT > ( SELECT AVG( FINANCIAL_TRANSACTIONSalias1.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the transaction types and the total amount of transactions .<CODESPLIT>SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are the prominent researchers in var0 in var1 ?<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_NAME , COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account id with most number of transactions .<CODESPLIT>SELECT MAX( SONGalias0.RESOLUTION ) , MIN( SONGalias0.RESOLUTION ) FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.DURATION LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account id and name with at least var0 transactions .<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_NAME , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the instructor with the highest salary ?<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_SIZE FROM PRODUCTS AS PRODUCTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the largest population<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_COLOR FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the invoice number and the number of transactions for each invoice .<CODESPLIT>SELECT COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the invoice number and invoice date for the invoice with most number of transactions ?<CODESPLIT>SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 ORDER BY ARTWORKalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many invoices do we have ?<CODESPLIT>SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show invoice dates and order id and details for all invoices .<CODESPLIT>SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the order ids and the number of invoices for each order .<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.ORDER_ID FROM INVOICES AS INVOICESalias0 GROUP BY INVOICESalias0.ORDER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the order id and order details for the order more than two invoices .<CODESPLIT>SELECT COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show student ids who are on scholarship and have major var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.PHONE_NUMBER , ORDERSalias0.CUSTOMER_ID FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY ORDERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all product names without an order .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 EXCEPT SELECT PRODUCTSalias1.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON PRODUCTSalias1.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the var0 Famous release dates ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the order ids and the number of items in each order .<CODESPLIT>SELECT COUNT( * ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product ids and the number of unique orders containing each product .<CODESPLIT>SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.ENROLLMENT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all product names and the number of customers having an order on each product .<CODESPLIT>SELECT COUNT( DISTINCT USERalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.NAME = "var1" AND BUSINESSalias0.STATE = "var2" AND CATEGORYalias0.CATEGORY_NAME = "var3" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show order ids and the number of products in each order .<CODESPLIT>SELECT COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all paragraph ids and texts for the document with name ' var0 ' .<CODESPLIT>SELECT ORDER_ITEMSalias0.ORDER_ID , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights depart from ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many churches opened before var0 are there ?<CODESPLIT>SELECT COUNT( * ) FROM CHURCH AS CHURCHalias0 WHERE CHURCHalias0.OPEN_DATE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , open date , and organizer for all churches .<CODESPLIT>SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.ORGANIZATION_NAME = "var0" ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all church names in descending order of opening date .<CODESPLIT>SELECT CHURCHalias0.NAME FROM CHURCH AS CHURCHalias0 ORDER BY CHURCHalias0.OPEN_DATE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me the departure date and arrival date for all flights from var0 to var1 .<CODESPLIT>SELECT CHURCHalias0.OPEN_DATE FROM CHURCH AS CHURCHalias0 GROUP BY CHURCHalias0.OPEN_DATE HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the organizer and name for churches that opened between var0 and var1 .<CODESPLIT>SELECT CHURCHalias0.NAME , CHURCHalias0.ORGANIZED_BY FROM CHURCH AS CHURCHalias0 WHERE CHURCHalias0.OPEN_DATE BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all opening years and the number of churches that opened in that year .<CODESPLIT>SELECT CHURCHalias0.OPEN_DATE , COUNT( * ) FROM CHURCH AS CHURCHalias0 GROUP BY CHURCHalias0.OPEN_DATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and opening year for three churches that opened most recently .<CODESPLIT>SELECT CHURCHalias0.NAME , CHURCHalias0.OPEN_DATE FROM CHURCH AS CHURCHalias0 ORDER BY CHURCHalias0.OPEN_DATE DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var10 in var0 area with more than var1 citations .<CODESPLIT>SELECT COUNT( * ) FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE > var1 AND PEOPLEalias0.IS_MALE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the country where people older than var1 and younger than var0 are from .<CODESPLIT>SELECT PEOPLEalias0.COUNTRY FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE < var0 INTERSECT SELECT PEOPLEalias1.COUNTRY FROM PEOPLE AS PEOPLEalias1 WHERE PEOPLEalias1.AGE > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all train names and times in stations in var0 in descending order by train time .<CODESPLIT>SELECT AVG( PEOPLEalias0.AGE ) , MAX( PEOPLEalias0.AGE ) , MIN( PEOPLEalias0.AGE ) FROM PEOPLE AS PEOPLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the year and semester when offers the largest number of courses .<CODESPLIT>SELECT PEOPLEalias0.COUNTRY , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE < ( SELECT AVG( PEOPLEalias1.AGE ) FROM PEOPLE AS PEOPLEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the pair of male and female names in all weddings after year var0<CODESPLIT>SELECT PEOPLEalias0.NAME , PEOPLEalias1.NAME FROM WEDDING AS WEDDINGalias0 JOIN PEOPLE AS PEOPLEalias0 ON WEDDINGalias0.MALE_ID = PEOPLEalias0.PEOPLE_ID JOIN PEOPLE AS PEOPLEalias1 ON WEDDINGalias0.FEMALE_ID = PEOPLEalias1.PEOPLE_ID WHERE WEDDINGalias0.YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and age for all male people who don't have a wedding .<CODESPLIT>SELECT COUNT( * ) FROM REVIEWER AS REVIEWERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all church names except for those that had a wedding in year var0 .<CODESPLIT>SELECT MAX( CHIP_MODELalias0.RAM_MIB ) , MIN( CHIP_MODELalias0.RAM_MIB ) FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE PHONEalias0.COMPANY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the smallest state<CODESPLIT>SELECT CHURCHalias0.NAME FROM CHURCH AS CHURCHalias0 JOIN WEDDING AS WEDDINGalias0 ON WEDDINGalias0.CHURCH_ID = CHURCHalias0.CHURCH_ID GROUP BY CHURCHalias0.CHURCH_ID HAVING COUNT( WEDDINGalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names for all females from var2 having a wedding in year var0 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM WEDDING AS WEDDINGalias0 JOIN PEOPLE AS PEOPLEalias0 ON WEDDINGalias0.FEMALE_ID = PEOPLEalias0.PEOPLE_ID WHERE PEOPLEalias0.COUNTRY = "var2" AND PEOPLEalias0.IS_MALE = "var1" AND WEDDINGalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many weddings are there in year var0 ?<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the church names for the weddings of all people older than var0 .<CODESPLIT>SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all countries and the number of people from each country .<CODESPLIT>SELECT COUNT( * ) , PEOPLEalias0.COUNTRY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.COUNTRY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many churches have a wedding in year var0 ?<CODESPLIT>SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artists do we have ?<CODESPLIT>SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist name , age , and country ordered by the yeared they joined .<CODESPLIT>SELECT MANUFACTURERalias0.NAME , MANUFACTURERalias0.OPEN_YEAR FROM MANUFACTURER AS MANUFACTURERalias0 WHERE MANUFACTURERalias0.NUM_OF_FACTORIES < var1 OR MANUFACTURERalias0.NUM_OF_SHOPS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all distinct country for artists ?<CODESPLIT>SELECT DISTINCT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist names and the year joined who are not from var0 .<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_TYPE_CODE = "var1" AND PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artists are above age var0 and joined after var1 ?<CODESPLIT>SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.AGE > var0 AND ARTISTalias0.YEAR_JOIN > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average and minimum age of all artists from var0 .<CODESPLIT>SELECT AVG( ARTISTalias0.AGE ) , MIN( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the artist who joined latest ?<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.YEAR_JOIN DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any var0 papers since var1 ?<CODESPLIT>SELECT COUNT( * ) FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.YEAR >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show theme and year for all exhibitions with ticket prices lower than var0 .<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 WHERE CITYalias0.REGIONAL_POPULATION > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist names and the number of exhibitions for each artist .<CODESPLIT>SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME FROM ARCHITECT AS ARCHITECTalias0 JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and country for the artist with most number of exhibitions ?<CODESPLIT>SELECT ARTISTalias0.COUNTRY , ARTISTalias0.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY EXHIBITIONalias0.ARTIST_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for artists without any exhibition .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT EXHIBITIONalias0.ARTIST_ID FROM EXHIBITION AS EXHIBITIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the theme and artist name for the exhibition with a ticket price higher than the average ?<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID GROUP BY HOSTING_CITYalias0.HOST_CITY ORDER BY COUNT( HOSTING_CITYalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name , opening year , and capacity for each cinema .<CODESPLIT>SELECT AVG( EXHIBITIONalias0.TICKET_PRICE ) , MAX( EXHIBITIONalias0.TICKET_PRICE ) , MIN( EXHIBITIONalias0.TICKET_PRICE ) FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.YEAR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show theme and year for all exhibitions in an descending order of ticket price .<CODESPLIT>SELECT EXHIBITIONalias0.THEME , EXHIBITIONalias0.YEAR FROM EXHIBITION AS EXHIBITIONalias0 ORDER BY EXHIBITIONalias0.TICKET_PRICE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the theme , date , and attendance for the exhibition in year var0 ?<CODESPLIT>SELECT COUNT( * ) FROM TEAM_FRANCHISE AS TEAM_FRANCHISEalias0 WHERE TEAM_FRANCHISEalias0.ACTIVE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist names who didn't have an exhibition in var0 .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias1 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE EXHIBITIONalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the theme for exhibitions with both records of an attendance below var0 and above var1 .<CODESPLIT>SELECT EXHIBITIONalias0.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITION_RECORDalias0.ATTENDANCE < var0 INTERSECT SELECT EXHIBITIONalias1.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias1 JOIN EXHIBITION AS EXHIBITIONalias1 ON EXHIBITIONalias1.EXHIBITION_ID = EXHIBITION_RECORDalias1.EXHIBITION_ID WHERE EXHIBITION_RECORDalias1.ATTENDANCE > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many exhibitions have a attendance more than var0 or have a ticket price below var1 ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist names with an average exhibition attendance over var0 .<CODESPLIT>SELECT CANDIDATEalias0.CANDIDATE_ID FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.OPPOSE_RATE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the item whose title is " var0 " .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information in the item table .<CODESPLIT>SELECT * FROM ITEM AS ITEMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of reviews .<CODESPLIT>SELECT COUNT( * ) FROM REVIEW AS REVIEWalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many users are there ?<CODESPLIT>SELECT var0 ( UNITPRICE ) FROM TRACK AS TRACKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of singers and the total sales of their songs .<CODESPLIT>SELECT AVG( REVIEWalias0.RATING ) , MAX( REVIEWalias0.RATING ) FROM REVIEW AS REVIEWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the highest rank of all reviews .<CODESPLIT>SELECT MIN( REVIEWalias0.RANK ) FROM REVIEW AS REVIEWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different users wrote some reviews ?<CODESPLIT>SELECT COUNT( DISTINCT U_ID ) FROM REVIEW AS REVIEWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different items were reviewed by some users ?<CODESPLIT>SELECT COUNT( DISTINCT I_ID ) FROM REVIEW AS REVIEWalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of items that did not receive any review .<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 AND USERalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of users who did not leave any review .<CODESPLIT>SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 WHERE U_ID NOT IN ( SELECT U_ID FROM REVIEW AS REVIEWalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of goods that receive a rating of var0 .<CODESPLIT>SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RATING = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of items whose rating is higher than the average review rating of all items .<CODESPLIT>SELECT COUNT( * ) , CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 GROUP BY CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of items that received any rating below var0 .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of items that received both a rating higher than var0 and a rating below var1 .<CODESPLIT>SELECT CLASSalias0.CLASS_ROOM , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the accreditation level that more than var0 phones use .<CODESPLIT>SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RANK > var0 INTERSECT SELECT ITEMalias1.TITLE FROM ITEM AS ITEMalias1 JOIN REVIEW AS REVIEWalias1 ON REVIEWalias1.I_ID = ITEMalias1.I_ID GROUP BY REVIEWalias1.I_ID HAVING AVG( REVIEWalias1.RATING ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the item with the lowest average rating .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = "var0" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the role description and the id of the project staff involved in most number of project outcomes ?<CODESPLIT>SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 ORDER BY ITEMalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total likes on tips from var0<CODESPLIT>SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID GROUP BY REVIEWalias0.U_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and id of the item with the highest average rating .<CODESPLIT>SELECT ITEMalias0.I_ID , ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID GROUP BY REVIEWalias0.I_ID ORDER BY AVG( REVIEWalias0.RATING ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and id of the good with the highest average rank .<CODESPLIT>SELECT ITEMalias0.I_ID , ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID GROUP BY REVIEWalias0.I_ID ORDER BY AVG( REVIEWalias0.RANK ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each user , return the name and the average rating of reviews given by them .<CODESPLIT>SELECT AVG( REVIEWalias0.RATING ) , USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID GROUP BY REVIEWalias0.U_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each user , find their name and the number of reviews written by them .<CODESPLIT>SELECT COUNT( * ) , USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID GROUP BY REVIEWalias0.U_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the user who gave the highest rating .<CODESPLIT>SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID ORDER BY REVIEWalias0.RATING DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents can one grant have at most ? List the grant id and number .<CODESPLIT>SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN TRUST AS TRUSTalias0 ON USERACCTalias0.U_ID = TRUSTalias0.SOURCE_U_ID GROUP BY TRUSTalias0.SOURCE_U_ID ORDER BY AVG( TRUSTalias0.TRUST ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find each target user's name and average trust score .<CODESPLIT>SELECT PLAYERalias0.PNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.CNAME = ( SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the target user with the lowest trust score .<CODESPLIT>SELECT CUSTOMERSalias0.CELL_MOBILE_PHONE_NUMBER , CUSTOMERSalias0.CUSTOMER_STATUS_CODE , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" OR CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the items that did not receive any review .<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY HOW_TO_GET_THERE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of users who did not write any review .<CODESPLIT>SELECT COUNT( * ) FROM USERACCT AS USERACCTalias0 WHERE U_ID NOT IN ( SELECT U_ID FROM REVIEW AS REVIEWalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many players are there ?<CODESPLIT>SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of players in ascending order of votes .<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID WHERE MARKETalias0.NUM_OF_SHOPS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the gender and occupation of players ?<CODESPLIT>SELECT PLAYERalias0.GENDER , PLAYERalias0.OCCUPATION FROM PLAYER AS PLAYERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and residence for players whose occupation is not " var0 " .<CODESPLIT>SELECT PLAYERalias0.PLAYER_NAME , PLAYERalias0.RESIDENCE FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.OCCUPATION != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of sponsors of players whose residence is either " var0 " or " var1 " .<CODESPLIT>SELECT ACTORalias0.NAME , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords in var0 .<CODESPLIT>SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.VOTES DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different occupations along with the number of players in each occupation .<CODESPLIT>SELECT COUNT( * ) , PLAYERalias0.OCCUPATION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.OCCUPATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common occupation of players .<CODESPLIT>SELECT GAMEalias0.DATE , GAMEalias0.ID , GAMEalias0.SCORE FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID GROUP BY GAMEalias0.ID HAVING COUNT( INJURY_ACCIDENTalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the residences that have at least two players .<CODESPLIT>SELECT DELIVERY_ROUTESalias0.ROUTE_NAME FROM DELIVERY_ROUTES AS DELIVERY_ROUTESalias0 ORDER BY DELIVERY_ROUTESalias0.ROUTE_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the department id and the total salary for those departments which contains at least two employees .<CODESPLIT>SELECT COACHalias0.COACH_NAME , PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the code of the product that is cheapest in each product category .<CODESPLIT>SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID WHERE COACHalias0.RANK = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and genders of players with a coach starting after var0 .<CODESPLIT>SELECT PLAYERalias0.GENDER , PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID WHERE PLAYER_COACHalias0.STARTING_YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the highest peak not in var0<CODESPLIT>SELECT COACHalias0.COACH_NAME , PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID ORDER BY PLAYERalias0.VOTES DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of players that do not have coaches .<CODESPLIT>SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.PLAYER_ID NOT IN ( SELECT PLAYER_COACHalias0.PLAYER_ID FROM PLAYER_COACH AS PLAYER_COACHalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the residences that have both a player of gender " var0 " and a player of gender " var1 " .<CODESPLIT>SELECT PLAYERalias0.RESIDENCE FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.GENDER = "var0" INTERSECT SELECT PLAYERalias1.RESIDENCE FROM PLAYER AS PLAYERalias1 WHERE PLAYERalias1.GENDER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many coaches does each club has ? List the club id , name and the number of coaches .<CODESPLIT>SELECT CLUBalias0.CLUB_ID , CLUBalias0.CLUB_NAME , COUNT( * ) FROM CLUB AS CLUBalias0 JOIN COACH AS COACHalias0 ON COACHalias0.CLUB_ID = CLUBalias0.CLUB_ID GROUP BY CLUBalias0.CLUB_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many gold medals has the club with the most coaches won ?<CODESPLIT>SELECT MATCH_RESULTalias0.CLUB_ID , MATCH_RESULTalias0.GOLD FROM MATCH_RESULT AS MATCH_RESULTalias0 JOIN COACH AS COACHalias0 ON MATCH_RESULTalias0.CLUB_ID = COACHalias0.CLUB_ID GROUP BY MATCH_RESULTalias0.CLUB_ID ORDER BY COUNT( MATCH_RESULTalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many gymnasts are there ?<CODESPLIT>SELECT COUNT( * ) FROM GYMNAST AS GYMNASTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the total points of gymnasts in descending order .<CODESPLIT>SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.TOTAL_POINTS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average credit score of the customers who have some loan .<CODESPLIT>SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.FLOOR_EXERCISE_POINTS DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average horizontal bar points for all gymnasts ?<CODESPLIT>SELECT AVG( GYMNASTalias0.HORIZONTAL_BAR_POINTS ) FROM GYMNAST AS GYMNASTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of people in ascending alphabetical order ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the denomination shared by more than one school .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of gymnasts whose hometown is not " var0 " ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID WHERE PEOPLEalias0.HOMETOWN != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of the tallest person ?<CODESPLIT>SELECT PEOPLEalias0.AGE FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the top var0 oldest people .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.AGE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total point count of the youngest gymnast ?<CODESPLIT>SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY PEOPLEalias0.AGE ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age of all gymnasts ?<CODESPLIT>SELECT AVG( PEOPLEalias0.AGE ) FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct hometowns of gymnasts with total points more than var0 ?<CODESPLIT>SELECT COUNT( DISTINCT ACC_TYPE ) FROM CUSTOMER AS CUSTOMERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the hometowns of gymnasts and the corresponding number of gymnasts ?<CODESPLIT>SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common hometown of gymnasts ?<CODESPLIT>SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the hometowns that are shared by at least two gymnasts ?<CODESPLIT>SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the language used least number of TV Channel . List language and number of TV Channel .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY PEOPLEalias0.HEIGHT ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct hometowns that are not associated with any gymnast .<CODESPLIT>SELECT DISTINCT PEOPLEalias0.HOMETOWN FROM PEOPLE AS PEOPLEalias0 EXCEPT SELECT DISTINCT PEOPLEalias1.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias1 ON PEOPLEalias1.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers used var0 datasets in var1 ?<CODESPLIT>SELECT PEOPLEalias0.HOMETOWN FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE > var0 INTERSECT SELECT PEOPLEalias1.HOMETOWN FROM PEOPLE AS PEOPLEalias1 WHERE PEOPLEalias1.AGE < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers are in var0 ?<CODESPLIT>SELECT COUNT( DISTINCT PEOPLEalias0.HOMETOWN ) FROM PEOPLE AS PEOPLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ages of gymnasts in descending order of total points .<CODESPLIT>SELECT DISTINCT VISITSalias0.VISIT_DATE FROM VISITS AS VISITSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total savings balance of all accounts except the account with name ' var0 ' .<CODESPLIT>SELECT SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total checking balance in all accounts ?<CODESPLIT>SELECT SUM( CHECKINGalias0.BALANCE ) FROM CHECKING AS CHECKINGalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average checking balance .<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 EXCEPT SELECT LOTSalias1.LOT_DETAILS FROM LOTS AS LOTSalias1 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.LOT_ID = LOTSalias1.LOT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many accounts have a savings balance above the average savings balance ?<CODESPLIT>SELECT COUNT( * ) FROM SAVINGS AS SAVINGSalias0 WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and id of accounts whose checking balance is below the maximum checking balance .<CODESPLIT>SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the checking balance of the account whose owner 's name contains the substring ' var0 ' ?<CODESPLIT>SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the checking balance and saving balance in the var0 's account .<CODESPLIT>SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_ID FROM ASSETS AS ASSETSalias0 JOIN ASSET_PARTS AS ASSET_PARTSalias0 ON ASSET_PARTSalias0.ASSET_ID = ASSETSalias0.ASSET_ID GROUP BY ASSETSalias0.ASSET_ID HAVING COUNT( * ) = var0 INTERSECT SELECT ASSETSalias1.ASSET_DETAILS , ASSETSalias1.ASSET_ID FROM ASSETS AS ASSETSalias1 JOIN FAULT_LOG AS FAULT_LOGalias0 ON FAULT_LOGalias0.ASSET_ID = ASSETSalias1.ASSET_ID GROUP BY ASSETSalias1.ASSET_ID HAVING COUNT( * ) < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of accounts whose checking balance is above the average checking balance , but savings balance is below the average savings balance .<CODESPLIT>SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > ( SELECT AVG( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) INTERSECT SELECT ACCOUNTSalias1.NAME FROM ACCOUNTS AS ACCOUNTSalias1 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias1.CUSTID WHERE SAVINGSalias0.BALANCE < ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the checking balance of the accounts whose savings balance is higher than the average savings balance .<CODESPLIT>SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME IN ( SELECT ACCOUNTSalias1.NAME FROM ACCOUNTS AS ACCOUNTSalias1 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias1.CUSTID WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all customers ' names in the alphabetical order .<CODESPLIT>SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 ORDER BY ACCOUNTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of account that has the lowest total checking and saving balance .<CODESPLIT>SELECT COUNT( * ) , EMP_JOBCODE FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMP_JOBCODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance .<CODESPLIT>SELECT COUNT( * ) FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.ID NOT IN ( SELECT FLIGHTalias0.AIRPORT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PILOT = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and checking balance of the account with the lowest savings balance .<CODESPLIT>SELECT TEAMalias0.NAME FROM TEAM AS TEAMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers in " var0 " .<CODESPLIT>SELECT ACCOUNTSalias0.NAME , COUNT( CHECKINGalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who were born in var0<CODESPLIT>SELECT ACCOUNTSalias0.NAME , SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of accounts whose checking balance is below the average checking balance .<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" AND RESTAURANTalias0.RATING > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the saving balance of the account with the highest checking balance .<CODESPLIT>SELECT SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total checking and saving balance of all accounts sorted by the total balance in ascending order .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers whose name contains " var0 " .<CODESPLIT>SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order .<CODESPLIT>SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of accounts whose checking balance is higher than corresponding saving balance .<CODESPLIT>SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > SAVINGSalias0.BALANCE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance .<CODESPLIT>SELECT ACCOUNTSalias0.NAME , SAVINGSalias0.BALANCE + CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE SAVINGSalias0.BALANCE < CHECKINGalias0.BALANCE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and savings balance of the top var0 accounts with the highest saving balance sorted by savings balance in descending order .<CODESPLIT>SELECT ACCOUNTSalias0.NAME , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many main stream browsers whose market share is at least var0 exist ?<CODESPLIT>SELECT COUNT( * ) FROM BROWSER AS BROWSERalias0 WHERE BROWSERalias0.MARKET_SHARE >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of browsers in descending order by market share .<CODESPLIT>SELECT BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 ORDER BY BROWSERalias0.MARKET_SHARE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the ids , names and market shares of all browsers .<CODESPLIT>SELECT BROWSERalias0.ID , BROWSERalias0.MARKET_SHARE , BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are there<CODESPLIT>SELECT AVG( BROWSERalias0.MARKET_SHARE ) , MAX( BROWSERalias0.MARKET_SHARE ) , MIN( BROWSERalias0.MARKET_SHARE ) FROM BROWSER AS BROWSERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and market share of the browser var0 ?<CODESPLIT>SELECT DERIVED_TABLEalias0.AGE , DERIVED_TABLEalias0.ID , DERIVED_TABLEalias0.NAME FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID GROUP BY DERIVED_TABLEalias0.ID HAVING COUNT( VISITalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and os of web client accelerators that do not work with only a ' var0 ' type connection ?<CODESPLIT>SELECT WEB_CLIENT_ACCELERATORalias0.NAME , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 WHERE WEB_CLIENT_ACCELERATORalias0.CONNECTION != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the browser that became compatible with the accelerator ' var0 ' after year var1 ?<CODESPLIT>SELECT BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID JOIN WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID WHERE ACCELERATOR_COMPATIBLE_BROWSERalias0.COMPATIBLE_SINCE_YEAR > var1 AND WEB_CLIENT_ACCELERATORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and names of the web accelerators that are compatible with two or more browsers ?<CODESPLIT>SELECT AIRCRAFTalias0.MODEL , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and name of the browser that is compatible with the most web accelerators ?<CODESPLIT>SELECT BROWSERalias0.ID , BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID GROUP BY BROWSERalias0.ID ORDER BY COUNT( ACCELERATOR_COMPATIBLE_BROWSERalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the web accelerator ' var0 ' and browser ' var1 ' become compatible ?<CODESPLIT>SELECT ACCELERATOR_COMPATIBLE_BROWSERalias0.COMPATIBLE_SINCE_YEAR FROM ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID JOIN WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID WHERE BROWSERalias0.NAME = "var1" AND WEB_CLIENT_ACCELERATORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different kinds of clients are supported by the web clients accelerators ?<CODESPLIT>SELECT COUNT( DISTINCT WEB_CLIENT_ACCELERATORalias0.CLIENT ) FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the information of all instructors ordered by their salary in ascending order .<CODESPLIT>SELECT COUNT( * ) FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 WHERE WEB_CLIENT_ACCELERATORalias0.ID NOT IN ( SELECT ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID FROM ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What distinct accelerator names are compatible with the browswers that have market share higher than var0 ?<CODESPLIT>SELECT DISTINCT WEB_CLIENT_ACCELERATORalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE BROWSERalias0.MARKET_SHARE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the browser that are compatible with both ' var0 ' and ' var1 ' .<CODESPLIT>SELECT BROWSERalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE WEB_CLIENT_ACCELERATORalias0.NAME = "var0" INTERSECT SELECT BROWSERalias1.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias1 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias1 ON WEB_CLIENT_ACCELERATORalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias1.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias1 ON BROWSERalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias1.BROWSER_ID WHERE WEB_CLIENT_ACCELERATORalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the accelerator names and supporting operating systems that are not compatible with the browser named ' var0 ' .<CODESPLIT>SELECT COUNT( * ) , EMPLOYEESalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE TITLE = "var0" GROUP BY EMPLOYEESalias0.CITY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of professors for different school ?<CODESPLIT>SELECT WEB_CLIENT_ACCELERATORalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 WHERE WEB_CLIENT_ACCELERATORalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of web accelerators used for each Operating system .<CODESPLIT>SELECT COUNT( * ) , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 GROUP BY WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me names of all compatible browsers and accelerators in the descending order of compatible year<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID WHERE MARKETalias0.NUM_OF_SHOPS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many wrestlers are there ?<CODESPLIT>SELECT COUNT( * ) FROM WRESTLER AS WRESTLERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of wrestlers in descending order of days held .<CODESPLIT>SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ORDER BY WRESTLERalias0.DAYS_HELD DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the wrestler with the fewest days held ?<CODESPLIT>SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ORDER BY WRESTLERalias0.DAYS_HELD ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct reigns of wrestlers whose location is not " Tokyo,Japan " ?<CODESPLIT>SELECT DISTINCT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.LOCATION != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and location of the wrestlers ?<CODESPLIT>SELECT WRESTLERalias0.LOCATION , WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which product has been ordered most number of times ?<CODESPLIT>SELECT ELIMINATIONalias0.ELIMINATION_MOVE FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.TEAM = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of wrestlers and the elimination moves ?<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the largest state<CODESPLIT>SELECT ELIMINATIONalias0.TEAM , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the time of elimination of the wrestlers with largest days held .<CODESPLIT>SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the last names of the author of the paper titled " var0 " ?<CODESPLIT>SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID WHERE WRESTLERalias0.DAYS_HELD > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different teams in eliminations and the number of eliminations from each team .<CODESPLIT>SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show teams that have suffered more than three eliminations .<CODESPLIT>SELECT ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 GROUP BY ELIMINATIONalias0.TEAM HAVING COUNT( ELIMINATIONalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the reign and days held of wrestlers .<CODESPLIT>SELECT WRESTLERalias0.DAYS_HELD , WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of wrestlers days held less than var0 ?<CODESPLIT>SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.DAYS_HELD < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common reigns of wrestlers .<CODESPLIT>SELECT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 GROUP BY REIGN ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the locations that are shared by more than two wrestlers .<CODESPLIT>SELECT WRESTLERalias0.LOCATION FROM WRESTLER AS WRESTLERalias0 GROUP BY WRESTLERalias0.LOCATION HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of wrestlers that have not been eliminated .<CODESPLIT>SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.WRESTLER_ID NOT IN ( SELECT ELIMINATIONalias0.WRESTLER_ID FROM ELIMINATION AS ELIMINATIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the teams that have both wrestlers eliminated by " var0 " and wrestlers eliminated by " var1 " .<CODESPLIT>SELECT ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.ELIMINATED_BY = "var0" INTERSECT SELECT ELIMINATIONalias1.TEAM FROM ELIMINATION AS ELIMINATIONalias1 WHERE ELIMINATIONalias1.ELIMINATED_BY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of distinct teams that suffer elimination ?<CODESPLIT>SELECT COUNT( DISTINCT ELIMINATIONalias0.TEAM ) FROM ELIMINATION AS ELIMINATIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name and id of the furniture with the highest market rate .<CODESPLIT>SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.ELIMINATED_BY = "var0" OR ELIMINATIONalias0.ELIMINATED_BY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many schools are there ?<CODESPLIT>SELECT COUNT( * ) FROM SCHOOL AS SCHOOLalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all school names in alphabetical order .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.SCHOOL_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name , location , mascot for all schools .<CODESPLIT>SELECT SCHOOLalias0.LOCATION , SCHOOLalias0.MASCOT , SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the staff member with first name as var0 and last name as var1 leave the company ?<CODESPLIT>SELECT AVG( SCHOOLalias0.ENROLLMENT ) , SUM( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total and average amount paid in claim headers .<CODESPLIT>SELECT SCHOOLalias0.MASCOT FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.ENROLLMENT > ( SELECT AVG( SCHOOLalias1.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the school with the smallest enrollment .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the residences that have both a player of gender " var0 " and a player of gender " var1 " .<CODESPLIT>SELECT AVG( SCHOOLalias0.ENROLLMENT ) , MAX( SCHOOLalias0.ENROLLMENT ) , MIN( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average , maximum and total revenues of all companies ?<CODESPLIT>SELECT COUNT( * ) , SCHOOLalias0.COUNTY , SUM( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.COUNTY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many donors have endowment for school named " var0 " ?<CODESPLIT>SELECT COUNT( DISTINCT ENDOWMENTalias0.DONATOR_NAME ) FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each donator name and the amount of endowment in descending order of the amount of endowment .<CODESPLIT>SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MAX( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.RATING < var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of colleges that have at least two players in descending alphabetical order .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT ENDOWMENTalias0.SCHOOL_ID FROM ENDOWMENT AS ENDOWMENTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the names of schools with an endowment amount smaller than or equal to var0 .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING SUM( ENDOWMENTalias0.AMOUNT ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stores whose number products is more than the average number of products .<CODESPLIT>SELECT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = "var0" INTERSECT SELECT ENDOWMENTalias1.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias1 JOIN SCHOOL AS SCHOOLalias1 ON SCHOOLalias1.SCHOOL_ID = ENDOWMENTalias1.SCHOOL_ID WHERE SCHOOLalias1.SCHOOL_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of all the donors except those whose donation amount less than var0 .<CODESPLIT>SELECT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 EXCEPT SELECT ENDOWMENTalias1.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias1 WHERE ENDOWMENTalias1.AMOUNT < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the amount and donor name for the largest amount of donation .<CODESPLIT>SELECT COUNT( * ) FROM DEVICE AS DEVICEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many budgets are above var0 in year var1 or before ?<CODESPLIT>SELECT COUNT( * ) FROM BUDGET AS BUDGETalias0 WHERE BUDGETalias0.BUDGETED > var0 AND BUDGETalias0.YEAR <= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each school name , its budgeted amount , and invested amount in year var0 or after .<CODESPLIT>SELECT BUDGETalias0.BUDGETED , BUDGETalias0.INVESTED , SCHOOLalias0.SCHOOL_NAME FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE BUDGETalias0.YEAR >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description , code and the corresponding count of each service type ?<CODESPLIT>SELECT DISTINCT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many budget record has a budget amount smaller than the invested amount ?<CODESPLIT>SELECT COUNT( * ) FROM BUDGET AS BUDGETalias0 WHERE BUDGETalias0.BUDGETED < BUDGETalias0.INVESTED ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers by var1 are cited by michael i . jordan<CODESPLIT>SELECT SUM( BUDGETalias0.BUDGETED ) FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of schools with a total budget amount greater than var0 or a total endowment greater than var1 .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID JOIN ENDOWMENT AS ENDOWMENTalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID GROUP BY SCHOOLalias0.SCHOOL_NAME HAVING SUM( BUDGETalias0.BUDGETED ) > var0 OR SUM( ENDOWMENTalias0.AMOUNT ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names , color descriptions and product descriptions of products with category " var0 " .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE ENDOWMENTalias0.AMOUNT > var0 GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING COUNT( ENDOWMENTalias0.* ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of schools that have more than one donator whose donation amount is less than var0 .<CODESPLIT>SELECT COUNT( * ) FROM ( SELECT ENDOWMENTalias0.* FROM ENDOWMENT AS ENDOWMENTalias0 WHERE AMOUNT > var0 GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING COUNT( ENDOWMENTalias0.* ) > var1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What neighbourhood is restaurant " var0 " in ?<CODESPLIT>SELECT SCHOOLalias0.IHSAA_FOOTBALL_CLASS , SCHOOLalias0.MASCOT , SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 JOIN BUDGET AS BUDGETalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE BUDGETED > var0 OR YEAR < var1 ORDER BY BUDGETalias0.TOTAL_BUDGET_PERCENT_INVESTED , BUDGETalias0.TOTAL_BUDGET_PERCENT_BUDGETED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many buildings are there ?<CODESPLIT>SELECT COUNT( * ) FROM BUILDING AS BUILDINGalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the studios of each film and the number of films produced by that studio .<CODESPLIT>SELECT BUILDINGalias0.FLOORS , BUILDINGalias0.NAME , BUILDINGalias0.STREET_ADDRESS FROM BUILDING AS BUILDINGalias0 ORDER BY BUILDINGalias0.FLOORS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the tallest building ?<CODESPLIT>SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 ORDER BY BUILDINGalias0.HEIGHT_FEET DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average , maximum , and minimum number of floors for all buildings ?<CODESPLIT>SELECT AVG( BUILDINGalias0.FLOORS ) , MAX( BUILDINGalias0.FLOORS ) , MIN( BUILDINGalias0.FLOORS ) FROM BUILDING AS BUILDINGalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the transaction type that has processed the greatest total amount in transactions ?<CODESPLIT>SELECT COUNT( * ) FROM BUILDING AS BUILDINGalias0 WHERE BUILDINGalias0.FLOORS > ( SELECT AVG( BUILDINGalias2.FLOORS ) FROM BUILDING AS BUILDINGalias2 ) OR BUILDINGalias0.HEIGHT_FEET > ( SELECT AVG( BUILDINGalias1.HEIGHT_FEET ) FROM BUILDING AS BUILDINGalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of buildings with at least var0 feet of height and with at least var1 floors .<CODESPLIT>SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 WHERE BUILDINGalias0.FLOORS >= var1 AND BUILDINGalias0.HEIGHT_FEET >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and locations of institutions that are founded after var0 and have the type " var1 " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND CONFERENCEalias0.NAME = "var1" AND PUBLICATIONalias0.CITATION_NUM > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the most expensive hardware product .<CODESPLIT>SELECT COUNT( * ) , INSTITUTIONalias0.TYPE , SUM( INSTITUTIONalias0.ENROLLMENT ) FROM INSTITUTION AS INSTITUTIONalias0 GROUP BY INSTITUTIONalias0.TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum enrollment across all schools ?<CODESPLIT>SELECT INSTITUTIONalias0.TYPE FROM INSTITUTION AS INSTITUTIONalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the institution type with an institution founded after var0 and an institution with at least var1 enrollment .<CODESPLIT>SELECT INSTITUTIONalias0.TYPE FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.ENROLLMENT >= var1 AND INSTITUTIONalias0.FOUNDED > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of buildings that do not have any institution .<CODESPLIT>SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 WHERE BUILDINGalias0.BUILDING_ID NOT IN ( SELECT INSTITUTIONalias0.BUILDING_ID FROM INSTITUTION AS INSTITUTIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of buildings except for those having an institution founded in var0 .<CODESPLIT>SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 EXCEPT SELECT BUILDINGalias1.NAME FROM BUILDING AS BUILDINGalias1 JOIN INSTITUTION AS INSTITUTIONalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias1.BUILDING_ID WHERE INSTITUTIONalias0.FOUNDED = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each building , show the name of the building and the number of institutions in it .<CODESPLIT>SELECT BUILDINGalias0.NAME , COUNT( * ) FROM BUILDING AS BUILDINGalias0 JOIN INSTITUTION AS INSTITUTIONalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias0.BUILDING_ID GROUP BY BUILDINGalias0.BUILDING_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and heights of buildings with at least two institutions founded after var0 .<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct institution types .<CODESPLIT>SELECT DISTINCT INSTITUTIONalias0.TYPE FROM INSTITUTION AS INSTITUTIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show institution names along with the number of proteins for each institution .<CODESPLIT>SELECT COUNT( PROTEINalias0.* ) , INSTITUTIONalias0.INSTITUTION FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID GROUP BY INSTITUTIONalias0.INSTITUTION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many proteins are associated with an institution founded after var0 or an institution with type " var1 " ?<CODESPLIT>SELECT COUNT( PROTEINalias0.* ) FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID WHERE INSTITUTIONalias0.FOUNDED > var0 OR INSTITUTIONalias0.TYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different addresses do the students currently live ?<CODESPLIT>SELECT INSTITUTIONalias0.INSTITUTION , PROTEINalias0.PROTEIN_NAME FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many proteins are associated with an institution in a building with at least var0 floors ?<CODESPLIT>SELECT COUNT( PROTEINalias0.* ) FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID JOIN BUILDING AS BUILDINGalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias0.BUILDING_ID WHERE BUILDINGalias0.FLOORS >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many institutions do not have an associated protein in our record ?<CODESPLIT>SELECT COUNT( * ) FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.INSTITUTION_ID NOT IN ( SELECT PROTEINalias0.INSTITUTION_ID FROM PROTEIN AS PROTEINalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the locations where no cinema has capacity over var0 .<CODESPLIT>SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 EXCEPT SELECT CINEMAalias1.LOCATION FROM CINEMA AS CINEMAalias1 WHERE CINEMAalias1.CAPACITY > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the locations where some cinemas were opened in both year var0 and year var1 .<CODESPLIT>SELECT COUNT( * ) FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.DATE_FROM < "var1" OR PROJECT_STAFFalias0.ROLE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cinema do we have ?<CODESPLIT>SELECT COUNT( * ) FROM CINEMA AS CINEMAalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name , opening year , and capacity for each cinema .<CODESPLIT>SELECT CINEMAalias0.CAPACITY , CINEMAalias0.NAME , CINEMAalias0.OPENNING_YEAR FROM CINEMA AS CINEMAalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and gpa of the students whose gpa is lower than the average gpa of all students .<CODESPLIT>SELECT CINEMAalias0.LOCATION , CINEMAalias0.NAME FROM CINEMA AS CINEMAalias0 WHERE CINEMAalias0.CAPACITY > ( SELECT AVG( CINEMAalias1.CAPACITY ) FROM CINEMA AS CINEMAalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the locations with a cinema ?<CODESPLIT>SELECT DISTINCT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average prices of all products from each manufacture , and list each company's name .<CODESPLIT>SELECT CINEMAalias0.NAME , CINEMAalias0.OPENNING_YEAR FROM CINEMA AS CINEMAalias0 ORDER BY CINEMAalias0.OPENNING_YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and location of the cinema with the largest capacity ?<CODESPLIT>SELECT CINEMAalias0.LOCATION , CINEMAalias0.NAME FROM CINEMA AS CINEMAalias0 ORDER BY CINEMAalias0.CAPACITY DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average , minimum , and maximum capacity for all the cinemas opened in year var0 or later .<CODESPLIT>SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RANK > var0 INTERSECT SELECT ITEMalias1.TITLE FROM ITEM AS ITEMalias1 JOIN REVIEW AS REVIEWalias1 ON REVIEWalias1.I_ID = ITEMalias1.I_ID GROUP BY REVIEWalias1.I_ID HAVING AVG( REVIEWalias1.RATING ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all students ' first names and last names who majored in var0 .<CODESPLIT>SELECT CINEMAalias0.LOCATION , COUNT( * ) FROM CINEMA AS CINEMAalias0 GROUP BY CINEMAalias0.LOCATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location with the most cinemas opened in year var0 or later ?<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.ELEVATION BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the locations with at least two cinemas with capacity above var0 .<CODESPLIT>SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CAPACITY > var0 GROUP BY CINEMAalias0.LOCATION HAVING COUNT( * ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the title and director for all films .<CODESPLIT>SELECT FILMalias0.DIRECTED_BY , FILMalias0.TITLE FROM FILM AS FILMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var2 var3 in var0 with at least var1 stars<CODESPLIT>SELECT DISTINCT FILMalias0.DIRECTED_BY FROM FILM AS FILMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all directors along with the number of films directed by each director .<CODESPLIT>SELECT COUNT( * ) , FILMalias0.DIRECTED_BY FROM FILM AS FILMalias0 GROUP BY FILMalias0.DIRECTED_BY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is total number of show times per dat for each cinema ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTRIES AS COUNTRIESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the title and maximum price of each film ?<CODESPLIT>SELECT FILMalias0.TITLE , MAX( SCHEDULEalias0.PRICE ) FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY SCHEDULEalias0.FILM_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show cinema name , film title , date , and price for each record in schedule .<CODESPLIT>SELECT CINEMAalias0.NAME , FILMalias0.TITLE , SCHEDULEalias0.DATE , SCHEDULEalias0.PRICE FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID JOIN CINEMA AS CINEMAalias0 ON SCHEDULEalias0.CINEMA_ID = CINEMAalias0.CINEMA_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the title and director of the films without any schedule ?<CODESPLIT>SELECT FILMalias0.DIRECTED_BY , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT SCHEDULEalias0.FILM_ID FROM SCHEDULE AS SCHEDULEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show director with the largest number of show times in total .<CODESPLIT>SELECT FILMalias0.DIRECTED_BY FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY FILMalias0.DIRECTED_BY ORDER BY SUM( SCHEDULEalias0.SHOW_TIMES_PER_DAY ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the locations that have more than one movie theater with capacity above var0 .<CODESPLIT>SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CAPACITY > var0 GROUP BY CINEMAalias0.LOCATION HAVING COUNT( * ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List document id of documents status is var0 and document type is var1 and the document is shipped by shipping agent named var2 .<CODESPLIT>SELECT COUNT( * ) FROM FILM AS FILMalias0 WHERE FILMalias0.TITLE LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Are the customers holding coupons with amount var0 bad or good ?<CODESPLIT>SELECT CUSTOMERSalias0.GOOD_OR_BAD_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN DISCOUNT_COUPONS AS DISCOUNT_COUPONSalias0 ON DISCOUNT_COUPONSalias0.COUPON_ID = CUSTOMERSalias0.COUPON_ID WHERE DISCOUNT_COUPONSalias0.COUPON_AMOUNT = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many bookings did each customer make ? List the customer id , first name , and the count .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.FIRST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN BOOKINGS AS BOOKINGSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = BOOKINGSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latitude , longitude , city of the station from which the shortest trip started ?<CODESPLIT>SELECT PAYMENTSalias0.CUSTOMER_ID , SUM( PAYMENTSalias0.AMOUNT_PAID ) FROM PAYMENTS AS PAYMENTSalias0 GROUP BY CUSTOMER_ID ORDER BY SUM( PAYMENTSalias0.AMOUNT_PAID ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the course that has the most student enrollment ?<CODESPLIT>SELECT BOOKINGSalias0.AMOUNT_OF_REFUND , BOOKINGSalias0.BOOKING_ID FROM BOOKINGS AS BOOKINGSalias0 JOIN PAYMENTS AS PAYMENTSalias0 ON PAYMENTSalias0.BOOKING_ID = BOOKINGSalias0.BOOKING_ID GROUP BY BOOKINGSalias0.BOOKING_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the product that is booked for var0 times ?<CODESPLIT>SELECT COUNT( * ) , FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FILESalias0.FORMATS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the product description of the product booked with an amount of var0 ?<CODESPLIT>SELECT PRODUCTS_FOR_HIREalias0.PRODUCT_DESCRIPTION FROM PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 JOIN PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 ON PRODUCTS_FOR_HIREalias0.PRODUCT_ID = PRODUCTS_BOOKEDalias0.PRODUCT_ID WHERE PRODUCTS_BOOKEDalias0.BOOKED_AMOUNT = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the start date and end date of the booking that has booked the product named ' var0 ' ?<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = "var0" INTERSECT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average grade of all students who have some friends .<CODESPLIT>SELECT PRODUCTS_FOR_HIREalias0.PRODUCT_NAME FROM VIEW_PRODUCT_AVAILABILITY AS VIEW_PRODUCT_AVAILABILITYalias0 JOIN PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 ON VIEW_PRODUCT_AVAILABILITYalias0.PRODUCT_ID = PRODUCTS_FOR_HIREalias0.PRODUCT_ID WHERE VIEW_PRODUCT_AVAILABILITYalias0.AVAILABLE_YN = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different product types are there ?<CODESPLIT>SELECT COUNT( DISTINCT PRODUCTS_FOR_HIREalias0.PRODUCT_TYPE_CODE ) FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first name , last name , and gender of all the var0 customers ? Order by their last name .<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE GUESTSalias0.GENDER_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the conductor with the most years of work .<CODESPLIT>SELECT AVG( PAYMENTSalias0.AMOUNT_DUE ) FROM PAYMENTS AS PAYMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the school name and type for schools without a school bus .<CODESPLIT>SELECT AVG( PRODUCTS_BOOKEDalias0.BOOKED_COUNT ) , MAX( PRODUCTS_BOOKEDalias0.BOOKED_COUNT ) , MIN( PRODUCTS_BOOKEDalias0.BOOKED_COUNT ) FROM PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the distinct payment types ?<CODESPLIT>SELECT DISTINCT PAYMENTSalias0.PAYMENT_TYPE_CODE FROM PAYMENTS AS PAYMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the daily hire costs for the products with substring ' var0 ' in its name ?<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many products are never booked with amount higher than var0 ?<CODESPLIT>SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 JOIN CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ON CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID = CLAIMS_PROCESSING_STAGESalias0.CLAIM_STAGE_ID GROUP BY CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID ORDER BY COUNT( CLAIMS_PROCESSINGalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the coupon amount of the coupons owned by both var0 and var1 customers ?<CODESPLIT>SELECT COUNT( DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the payment date of the payment with amount paid higher than var0 or with payment type is ' var1 '<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and descriptions of the products that are of ' var0 ' type and have daily hire cost lower than var1 ?<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many phones are there ?<CODESPLIT>SELECT COUNT( * ) FROM PHONE AS PHONEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the business with the most number of reviews in var0<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 ORDER BY PHONEalias0.PRICE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total revenue of all companies whose main office is at var0 or var1 ?<CODESPLIT>SELECT PHONEalias0.CARRIER , PHONEalias0.MEMORY_IN_G FROM PHONE AS PHONEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct carriers of phones with memories bigger than var0 .<CODESPLIT>SELECT DISTINCT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 WHERE PHONEalias0.MEMORY_IN_G > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and ids of tourist attractions that are visited at most once .<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.CARRIER = "var0" OR PHONEalias0.CARRIER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the carrier of the most expensive phone ?<CODESPLIT>SELECT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 ORDER BY PHONEalias0.PRICE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many drivers are there ?<CODESPLIT>SELECT COUNT( * ) , PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.CARRIER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the state which has the most number of customers .<CODESPLIT>SELECT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 GROUP BY CARRIER ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the carriers that have both phones with memory smaller than var0 and phones with memory bigger than var1 .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = "var0" AND DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var1" INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias1 JOIN REF_SHIPPING_AGENTS ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias1.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of phones and the districts of markets they are on .<CODESPLIT>SELECT MARKETalias0.DISTRICT , PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of phones and the districts of markets they are on , in ascending order of the ranking of the market .<CODESPLIT>SELECT MARKETalias0.DISTRICT , PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID ORDER BY MARKETalias0.RANKING ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students have pervar0al names that contain the word " var0 " ?<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID WHERE MARKETalias0.NUM_OF_SHOPS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each phone , show its names and total number of stocks .<CODESPLIT>SELECT ELIMINATIONalias0.TEAM , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of phones that have total number of stocks bigger than var0 , in descending order of the total number of stocks .<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID GROUP BY PHONEalias0.NAME HAVING SUM( PHONE_MARKETalias0.NUM_OF_STOCK ) >= var0 ORDER BY SUM( PHONE_MARKETalias0.NUM_OF_STOCK ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct last names of all the students who have president votes and whose advisor is not var0 .<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.PHONE_ID NOT IN ( SELECT PHONE_MARKETalias0.PHONE_ID FROM PHONE_MARKET AS PHONE_MARKETalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many gas companies are there ?<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.SEX = "var0" AND VOTING_RECORDalias0.ELECTION_CYCLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the company name and rank for all companies in the decreasing order of their sales .<CODESPLIT>SELECT COUNT( PROTEINalias0.* ) FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID JOIN BUILDING AS BUILDINGalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias0.BUILDING_ID WHERE BUILDINGalias0.FLOORS >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the company name and the main industry for all companies whose headquarters are not from var0 .<CODESPLIT>SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_CLAIMED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , headquarter and founder of the manufacturer that has the highest revenue .<CODESPLIT>SELECT COMPANYalias0.COMPANY , COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.MARKET_VALUE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the carriers of devices in ascending alphabetical order .<CODESPLIT>SELECT AVG( COMPANYalias0.MARKET_VALUE ) , MAX( COMPANYalias0.MARKET_VALUE ) , MIN( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all main industry for all companies .<CODESPLIT>SELECT DISTINCT COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all headquarters and the number of companies in each headquarter .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all invoice dates corresponding to customers with first name var0 and last name var1 .<CODESPLIT>SELECT COMPANYalias0.MAIN_INDUSTRY , SUM( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.MAIN_INDUSTRY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the name , job title of all people ordered by their names .<CODESPLIT>SELECT COMPANYalias0.MAIN_INDUSTRY , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY MAIN_INDUSTRY ORDER BY SUM( COMPANYalias0.MARKET_VALUE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show headquarters with at least two companies in the banking industry .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE MAIN_INDUSTRY = "var0" GROUP BY COMPANYalias0.HEADQUARTERS HAVING COUNT( * ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show gas station id , location , and manager_name for all gas stations ordered by open year .<CODESPLIT>SELECT GAS_STATIONalias0.LOCATION , GAS_STATIONalias0.MANAGER_NAME , GAS_STATIONalias0.STATION_ID FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many gas station are opened between var0 and var1 ?<CODESPLIT>SELECT COUNT( * ) FROM GAS_STATION AS GAS_STATIONalias0 WHERE GAS_STATIONalias0.OPEN_YEAR BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all locations and the number of gas stations in each location ordered by the count .<CODESPLIT>SELECT COUNT( * ) , GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 GROUP BY LOCATION ORDER BY COUNT( * ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all headquarters with both a company in banking industry and a company in var1 .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.MAIN_INDUSTRY = "var0" INTERSECT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.MAIN_INDUSTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all headquarters without a company in banking industry .<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = "var0" AND MOVIEalias0.RELEASE_YEAR < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the company name with the number of gas station .<CODESPLIT>SELECT COMPANYalias0.COMPANY , COUNT( STATION_COMPANYalias0.* ) FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID GROUP BY STATION_COMPANYalias0.COMPANY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show company name and main industry without a gas station .<CODESPLIT>SELECT COUNT( DISTINCT JOURNALalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of users who did not leave any review .<CODESPLIT>SELECT GAS_STATIONalias0.MANAGER_NAME FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID WHERE COMPANYalias0.COMPANY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all locations where a gas station for company with market value greater than var0 is located .<CODESPLIT>SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 ORDER BY ENZYMEalias0.NAME DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the album titles for albums containing both ' var0 ' and ' var1 ' genre tracks ?<CODESPLIT>SELECT GAS_STATIONalias0.MANAGER_NAME FROM GAS_STATION AS GAS_STATIONalias0 WHERE OPEN_YEAR > var0 GROUP BY MANAGER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>order all gas station locations by the opening year .<CODESPLIT>SELECT GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the rank , company names , market values of the companies in the banking industry order by their sales and profits in billion .<CODESPLIT>SELECT COMPANYalias0.COMPANY , COMPANYalias0.MARKET_VALUE , COMPANYalias0.RANK FROM COMPANY AS COMPANYalias0 WHERE MAIN_INDUSTRY = "var0" ORDER BY COMPANYalias0.SALES_BILLION , COMPANYalias0.PROFITS_BILLION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the location and Representative name of the gas stations owned by the companies with top var0 Asset amounts .<CODESPLIT>SELECT GAS_STATIONalias0.LOCATION , GAS_STATIONalias0.REPRESENTATIVE_NAME FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID ORDER BY COMPANYalias0.ASSETS_BILLION DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many regions do we have ?<CODESPLIT>SELECT COUNT( * ) FROM REGION AS REGIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct region names ordered by their labels .<CODESPLIT>SELECT DISTINCT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.LABEL ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many parties do we have ?<CODESPLIT>SELECT COUNT( DISTINCT PARTYalias0.PARTY_NAME ) FROM PARTY AS PARTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ministers and the time they took and left office , listed by the time they left office .<CODESPLIT>SELECT PARTYalias0.LEFT_OFFICE , PARTYalias0.MINISTER , PARTYalias0.TOOK_OFFICE FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.LEFT_OFFICE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the minister who took office after var0 or before var1 .<CODESPLIT>SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.TOOK_OFFICE < var1 OR PARTYalias0.TOOK_OFFICE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all ministers who do not belong to var0 .<CODESPLIT>SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_NAME != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all ministers and parties they belong to in descending order of the time they took office .<CODESPLIT>SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.GRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var1" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all donor names .<CODESPLIT>SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.LEFT_OFFICE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List member names and their party names .<CODESPLIT>SELECT MEMBERalias0.MEMBER_NAME , PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all party names and the number of members in each party .<CODESPLIT>SELECT SUM( TIPalias0.LIKES ) FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of cities of markets with low film market estimate bigger than var0 ?<CODESPLIT>SELECT PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID GROUP BY MEMBERalias0.PARTY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all party names and their region names .<CODESPLIT>SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the smallest state<CODESPLIT>SELECT PARTYalias0.PARTY_NAME FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_ID NOT IN ( SELECT MEMBERalias0.PARTY_ID FROM MEMBER AS MEMBERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the member names which are in both the party with id var0 and the party with id var1 .<CODESPLIT>SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.PARTY_ID = var0 INTERSECT SELECT MEMBERalias1.MEMBER_NAME FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.PARTY_ID = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show member names that are not in the var0 .<CODESPLIT>SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID WHERE PARTYalias0.PARTY_NAME != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many party events do we have ?<CODESPLIT>SELECT COUNT( PARTY_EVENTSalias0.* ) FROM PARTY_EVENTS AS PARTY_EVENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the phone numbers of all customers and suppliers .<CODESPLIT>SELECT COUNT( PARTY_EVENTSalias0.* ) , PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total checking and saving balance of all accounts sorted by the total balance in ascending order .<CODESPLIT>SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 EXCEPT SELECT MEMBERalias1.MEMBER_NAME FROM MEMBER AS MEMBERalias1 JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID = MEMBERalias1.MEMBER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which artist does the album " var0 " belong to ?<CODESPLIT>SELECT PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID HAVING COUNT( PARTY_EVENTSalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of member in charge of greatest number of events ?<CODESPLIT>SELECT BUSINESSalias0.STATE , SUM( CHECKINalias0.COUNT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" AND CATEGORYalias1.CATEGORY_NAME = "var1" AND CHECKINalias0.DAY = "var2" GROUP BY BUSINESSalias0.STATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the event names that have more than var0 records .<CODESPLIT>SELECT PARTY_EVENTSalias0.EVENT_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 GROUP BY PARTY_EVENTSalias0.EVENT_NAME HAVING COUNT( PARTY_EVENTSalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account id and name with at least var0 transactions .<CODESPLIT>SELECT COUNT( PARTY_EVENTSalias0.* ) FROM REGION AS REGIONalias0 JOIN PARTY AS PARTYalias0 ON REGIONalias0.REGION_ID = PARTYalias0.REGION_ID JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID WHERE PARTY_EVENTSalias0.EVENT_NAME = "var1" AND REGIONalias0.REGION_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many pilots are there ?<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.BIRTH_YEAR > var1 AND ACTORalias0.GENDER = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which gender makes up the majority of the staff ?<CODESPLIT>SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.RANK ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the positions and teams of pilots ?<CODESPLIT>SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct positions of pilots older than var0 .<CODESPLIT>SELECT DISTINCT PILOTalias0.POSITION FROM PILOT AS PILOTalias0 WHERE PILOTalias0.AGE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of pilots from team " var0 " or " var1 " .<CODESPLIT>SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.TEAM = "var0" OR PILOTalias0.TEAM = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the joined year of the pilot of the highest rank ?<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct apartment numbers of the apartments that have bookings with status code " var0 " .<CODESPLIT>SELECT COUNT( * ) , PILOTalias0.NATIONALITY FROM PILOT AS PILOTalias0 GROUP BY PILOTalias0.NATIONALITY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common nationality of pilots .<CODESPLIT>SELECT PILOTalias0.NATIONALITY FROM PILOT AS PILOTalias0 GROUP BY NATIONALITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the photos for mountains ?<CODESPLIT>SELECT PILOTalias0.POSITION FROM PILOT AS PILOTalias0 WHERE PILOTalias0.JOIN_YEAR < var0 INTERSECT SELECT PILOTalias1.POSITION FROM PILOT AS PILOTalias1 WHERE PILOTalias1.JOIN_YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of pilots and models of aircrafts they have flied with .<CODESPLIT>SELECT AIRCRAFTalias0.MODEL , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot .<CODESPLIT>SELECT MAX( CLUB_RANKalias0.SILVER ) , MIN( CLUB_RANKalias0.SILVER ) FROM CLUB_RANK AS CLUB_RANKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has most number of arriving flights ?<CODESPLIT>SELECT AIRCRAFTalias0.FLEET_SERIES FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID WHERE PILOTalias0.AGE < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of pilots and the number of records they have .<CODESPLIT>SELECT COUNT( PILOT_RECORDalias0.* ) , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID GROUP BY PILOTalias0.PILOT_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of pilots that have more than one record .<CODESPLIT>SELECT COUNT( PILOT_RECORDalias0.* ) , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID GROUP BY PILOTalias0.PILOT_NAME HAVING COUNT( PILOT_RECORDalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the high schooler who has the greatest number of likes ?<CODESPLIT>SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.PILOT_ID NOT IN ( SELECT PILOT_RECORDalias0.PILOT_ID FROM PILOT_RECORD AS PILOT_RECORDalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What document status codes do we have ?<CODESPLIT>SELECT DOCUMENT_STATUS_CODE FROM REF_DOCUMENT_STATUS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of document status code ' var0 ' ?<CODESPLIT>SELECT DOCUMENT_STATUS_DESCRIPTION FROM REF_DOCUMENT_STATUS WHERE DOCUMENT_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What document type codes do we have ?<CODESPLIT>SELECT DOCUMENT_TYPE_CODE FROM REF_DOCUMENT_TYPES ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average ram mib size of the chip models that are never used by any phone .<CODESPLIT>SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the shipping agent names ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = "var0" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the shipping agent code of shipping agent var0 ?<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all role codes ?<CODESPLIT>SELECT ROLESalias0.ROLE_CODE FROM ROLES AS ROLESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of role code var0 ?<CODESPLIT>SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many employees do we have ?<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the role of the employee named var0 ?<CODESPLIT>SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE EMPLOYEESalias0.EMPLOYEE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the race class and number of races in each class .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.RECEIPT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many employees does each role have ? List role description , id and number of employees .<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List roles that have more than one employee . List the role description and number of employees .<CODESPLIT>SELECT COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) , ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE GROUP BY EMPLOYEESalias0.ROLE_CODE HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document status description of the document with id var0 ?<CODESPLIT>SELECT LOCATION_DESCRIPTION , LOCATION_NAME FROM REF_LOCATIONS WHERE LOCATION_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents have the status code var0 ?<CODESPLIT>SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the document type code for the document with the id var0 .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the document ids for any documents with the status code var0 and the type code paper .<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the shipping agent of the document with id var0 ?<CODESPLIT>SELECT RAILWAYalias0.LOCATION , TRAINalias0.NAME FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of trains starting from each origin .<CODESPLIT>SELECT COUNT( * ) FROM REF_SHIPPING_AGENTS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias0.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which shipping agent shipped the most documents ? List the shipping agent name and the number of documents .<CODESPLIT>SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID ORDER BY STADIUMalias0.CAPACITY DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the address and staff number of the shops that do not have any happy hour .<CODESPLIT>SELECT DOCUMENTSalias0.RECEIPT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What address was the document with id var0 mailed to ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the mail date of the document with id var0 ?<CODESPLIT>SELECT COUNT( * ) FROM DEBATE AS DEBATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the document ids of documents with the status var0 and type var1 , which not shipped by the shipping agent named var2 .<CODESPLIT>SELECT CNAME , COLLEGEalias0.STATE , MIN( ENR ) FROM COLLEGE AS COLLEGEalias0 GROUP BY COLLEGEalias0.STATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List document id of documents status is var0 and document type is var1 and the document is shipped by shipping agent named var2 .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = "var0" AND DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var1" INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias1 JOIN REF_SHIPPING_AGENTS ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias1.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many rooms whose capacity is less than var1 does the var0 building have ?<CODESPLIT>SELECT DOCUMENT_DRAFTSalias0.DRAFT_DETAILS FROM DOCUMENT_DRAFTS AS DOCUMENT_DRAFTSalias0 WHERE DOCUMENT_DRAFTSalias0.DOCUMENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many video games have type var0 ?<CODESPLIT>SELECT COUNT( * ) FROM DRAFT_COPIES AS DRAFT_COPIESalias0 WHERE DRAFT_COPIESalias0.DOCUMENT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which document has the most draft copies ? List its document id and number of draft copies .<CODESPLIT>SELECT COUNT( DRAFT_COPIESalias0.COPY_NUMBER ) , DRAFT_COPIESalias0.DOCUMENT_ID FROM DRAFT_COPIES AS DRAFT_COPIESalias0 GROUP BY DOCUMENT_ID ORDER BY COUNT( DRAFT_COPIESalias0.COPY_NUMBER ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the Char cells , Pixels and Hardware colours for the screen of the phone whose hardware model name is " var0 " .<CODESPLIT>SELECT COUNT( * ) , DRAFT_COPIESalias0.DOCUMENT_ID FROM DRAFT_COPIES AS DRAFT_COPIESalias0 GROUP BY DRAFT_COPIESalias0.DOCUMENT_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct students have been in detention ?<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID WHERE CIRCULATION_HISTORYalias0.DOCUMENT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the employees who have not showed up in any circulation history of documents . List the employee's name .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT EMPLOYEESalias1.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias1 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias1.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which employee has showed up in most circulation history documents . List the employee's name and the number of drafts and copies .<CODESPLIT>SELECT COUNT( * ) , EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID GROUP BY CIRCULATION_HISTORYalias0.DOCUMENT_ID , CIRCULATION_HISTORYalias0.DRAFT_NUMBER , CIRCULATION_HISTORYalias0.COPY_NUMBER ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each document , list the number of employees who have showed up in the circulation history of that document . List the document ids and number of employees .<CODESPLIT>SELECT CIRCULATION_HISTORYalias0.DOCUMENT_ID , COUNT( DISTINCT CIRCULATION_HISTORYalias0.EMPLOYEE_ID ) FROM CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 GROUP BY CIRCULATION_HISTORYalias0.DOCUMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the hometowns shared by people older than var0 and younger than var1 .<CODESPLIT>SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY MGR_START_DATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the airport name for airport ' var0 ' ?<CODESPLIT>SELECT DEPENDENTalias0.DEPENDENT_NAME FROM DEPENDENT AS DEPENDENTalias0 WHERE DEPENDENTalias0.RELATIONSHIP = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many female dependents are there ?<CODESPLIT>SELECT COUNT( * ) FROM DEPENDENT AS DEPENDENTalias0 WHERE DEPENDENTalias0.SEX = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of departments that are located in var0 .<CODESPLIT>SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN DEPT_LOCATIONS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.DNUMBER = DEPARTMENTalias0.DNUMBER WHERE DERIVED_TABLEalias0.DLOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the first names and last names of employees who earn more than var0 in salary .<CODESPLIT>SELECT FNAME , LNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of employees of each gender whose salary is lower than var0 .<CODESPLIT>SELECT COUNT( * ) , EMPLOYEEalias0.SEX FROM EMPLOYEE AS EMPLOYEEalias0 WHERE SALARY < var0 GROUP BY EMPLOYEEalias0.SEX ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the first and last names , and the addresses of all employees in the ascending order of their birth date .<CODESPLIT>SELECT EMPLOYEEalias0.ADDRESS , FNAME , LNAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY BDATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the event details of the services that have the type code ' var0 ' ?<CODESPLIT>SELECT EVENTSalias0.EVENT_DETAILS FROM EVENTS AS EVENTSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and details of events that have more than one participants ?<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTESalias0.OVERALL_RATING DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many events have each participants attended ? List the participant id , type and the number .<CODESPLIT>SELECT COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) , PARTICIPANTSalias0.PARTICIPANT_ID , PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID GROUP BY PARTICIPANTSalias0.PARTICIPANT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the the participant ids , type code and details ?<CODESPLIT>SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.COMMITTEE = "var0" INTERSECT SELECT PARTYalias1.PARTY FROM ELECTION AS ELECTIONalias1 JOIN PARTY AS PARTYalias1 ON PARTYalias1.PARTY_ID = ELECTIONalias1.PARTY WHERE ELECTIONalias1.COMMITTEE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many participants belong to the type ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) FROM PARTICIPANTS AS PARTICIPANTSalias0 WHERE PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the number of invoices and the invoice total from California .<CODESPLIT>SELECT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 ORDER BY SERVICESalias0.SERVICE_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the service id and details for the events .<CODESPLIT>SELECT COUNT( * ) FROM ( SELECT * FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" UNION SELECT * FROM POSTSEASON AS POSTSEASONalias1 JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = POSTSEASONalias1.TEAM_ID_LOSER WHERE TEAMalias1.NAME = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many events had participants whose details had the substring ' Dr . '<CODESPLIT>SELECT COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) FROM PARTICIPANTS AS PARTICIPANTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID WHERE PARTICIPANTSalias0.PARTICIPANT_DETAILS LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common participant type ?<CODESPLIT>SELECT PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 GROUP BY PARTICIPANT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the countries that have more than one mountain .<CODESPLIT>SELECT EVENTSalias0.SERVICE_ID , SERVICESalias0.SERVICE_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID JOIN EVENTS AS EVENTSalias0 ON PARTICIPANTS_IN_EVENTSalias0.EVENT_ID = EVENTSalias0.EVENT_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID GROUP BY EVENTSalias0.SERVICE_ID ORDER BY COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the event with the most participants ?<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL INTERSECT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which events id does not have any participant with detail ' var0 ' ?<CODESPLIT>SELECT SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SONG_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which services type had both successful and failure event details ?<CODESPLIT>SELECT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 JOIN EVENTS AS EVENTSalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID WHERE EVENTSalias0.EVENT_DETAILS = "var0" INTERSECT SELECT SERVICESalias1.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias1 JOIN EVENTS AS EVENTSalias1 ON SERVICESalias1.SERVICE_ID = EVENTSalias1.SERVICE_ID WHERE EVENTSalias1.EVENT_DETAILS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many events did not have any participants ?<CODESPLIT>SELECT RID FROM REVIEWER AS REVIEWERalias0 WHERE REVIEWERalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information in the item table .<CODESPLIT>SELECT COUNT( DISTINCT PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID ) FROM PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first name and last name for the customer with account name var0 .<CODESPLIT>SELECT RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.DATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and date of the most recent race ?<CODESPLIT>SELECT RACESalias0.DATE , RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.DATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the item whose title is " var0 " .<CODESPLIT>SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct names of all races held between var0 and var1 ?<CODESPLIT>SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the forename and surname of all distinct drivers who once had laptime less than var0 milliseconds ?<CODESPLIT>SELECT DISTINCT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE LAPTIMESalias0.MILLISECONDS < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of ratings that has more than var1 var0 ?<CODESPLIT>SELECT DISTINCT DRIVERSalias0.DRIVERID , DRIVERSalias0.NATIONALITY FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE LAPTIMESalias0.MILLISECONDS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the forename and surname of the driver who has the smallest laptime ?<CODESPLIT>SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID ORDER BY LAPTIMESalias0.MILLISECONDS LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and family name of the driver who has the longest laptime ?<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.AMENID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many Annual Meeting events happened in the var0 region ?<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE POSITION = "var0" GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( LAPTIMESalias0.* ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many drivers participated in the race var0 held in var1 ?<CODESPLIT>SELECT COUNT( * ) FROM RESULTS AS RESULTSalias0 JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = "var0" AND RACESalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many drivers did not participate in the races held in var0 ?<CODESPLIT>SELECT COUNT( DISTINCT DRIVERID ) FROM RESULTS AS RESULTSalias0 WHERE RACEID NOT IN ( SELECT RACEID FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR != var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of names and years of races that had any driver whose forename is var0 ?<CODESPLIT>SELECT COUNT( * ) , GRADE FROM HIGHSCHOOLER GROUP BY GRADE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the forename and surname of drivers whose nationality is var0 ?<CODESPLIT>SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 WHERE DRIVERSalias0.NATIONALITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and forenames of drivers who participated both the races with name var0 and the races with name var1 ?<CODESPLIT>SELECT DRIVERSalias0.FORENAME , RESULTSalias0.DRIVERID FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = "var0" INTERSECT SELECT DRIVERSalias1.FORENAME , RESULTSalias1.DRIVERID FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the forenames and surnames of drivers who participated in the races named var0 but not the races named var1 ?<CODESPLIT>SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = "var0" EXCEPT SELECT DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var2 papers in var1 with var0 in the title<CODESPLIT>SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN DRIVERSTANDINGS AS DERIVED_TABLEalias0 ON DRIVERSalias0.DRIVERID = DERIVED_TABLEalias0.DRIVERID WHERE DERIVED_TABLEalias0.POSITION = var0 AND DERIVED_TABLEalias0.WINS = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the forenames of distinct drivers who won in position var0 as driver standing and had more than var2 points ?<CODESPLIT>SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN DRIVERSTANDINGS AS DERIVED_TABLEalias0 ON DRIVERSalias0.DRIVERID = DERIVED_TABLEalias0.DRIVERID WHERE DERIVED_TABLEalias0.POINTS > var2 AND DERIVED_TABLEalias0.POSITION = var0 AND DERIVED_TABLEalias0.WINS = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the numbers of constructors for different nationalities ?<CODESPLIT>SELECT CONSTRUCTORSalias0.NATIONALITY , COUNT( * ) FROM CONSTRUCTORS AS CONSTRUCTORSalias0 GROUP BY CONSTRUCTORSalias0.NATIONALITY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the numbers of races for each constructor id ?<CODESPLIT>SELECT CONSTRUCTORID , COUNT( * ) FROM CONSTRUCTORSTANDINGS GROUP BY CONSTRUCTORID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all budget type codes and descriptions .<CODESPLIT>SELECT RACESalias0.NAME FROM RACES AS RACESalias0 JOIN CIRCUITS AS CIRCUITSalias0 ON RACESalias0.CIRCUITID = CIRCUITSalias0.CIRCUITID WHERE CIRCUITSalias0.COUNTRY = "var0" AND RACESalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the unique names of races that held after var1 and the circuits were in var0 ?<CODESPLIT>SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 JOIN CIRCUITS AS CIRCUITSalias0 ON RACESalias0.CIRCUITID = CIRCUITSalias0.CIRCUITID WHERE CIRCUITSalias0.COUNTRY = "var0" AND RACESalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id var0 .<CODESPLIT>SELECT DORMalias0.GENDER , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 WHERE DORMalias0.DORM_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is var0 ?<CODESPLIT>SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION > ( SELECT MIN( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the nationality of the actress " var0 " ?<CODESPLIT>SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 ORDER BY DRIVERSalias0.FORENAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct races in reversed lexicographic order ?<CODESPLIT>SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.NAME DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of races held between var0 and var1 ?<CODESPLIT>SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of races held after var0 or before var1 ?<CODESPLIT>SELECT COUNT( * ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CAMPUSFEE > ( SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the drivers ' first , last names and id who had more than var0 pit stops or participated in more than var1 race results ?<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN PITSTOPS AS PITSTOPSalias0 ON PITSTOPSalias0.DRIVERID = DRIVERSalias0.DRIVERID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) > var0 UNION SELECT DRIVERSalias1.DRIVERID , DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM DRIVERS AS DRIVERSalias1 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias1.DRIVERID GROUP BY DRIVERSalias1.DRIVERID HAVING COUNT( * ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the drivers ' last names and id who had var0 pit stops and participated in more than var1 race results ?<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN PITSTOPS AS PITSTOPSalias0 ON PITSTOPSalias0.DRIVERID = DRIVERSalias0.DRIVERID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) = var0 INTERSECT SELECT DRIVERSalias1.DRIVERID , DRIVERSalias1.SURNAME FROM DRIVERS AS DRIVERSalias1 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias1.DRIVERID GROUP BY DRIVERSalias1.DRIVERID HAVING COUNT( * ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and last name of the driver who participated in the most races after var0 ?<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY DRIVERSalias0.DRIVERID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of circuits that belong to var0 or var1 ?<CODESPLIT>SELECT CIRCUITSalias0.NAME FROM CIRCUITS AS CIRCUITSalias0 WHERE CIRCUITSalias0.COUNTRY = "var0" OR CIRCUITSalias0.COUNTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and types of the companies that have ever operated a flight ?<CODESPLIT>SELECT CIRCUITID , CIRCUITSalias0.LOCATION FROM CIRCUITS AS CIRCUITSalias0 WHERE CIRCUITSalias0.COUNTRY = "var0" OR CIRCUITSalias0.COUNTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country does customer with first name as var0 and last name as var1 lived in ?<CODESPLIT>SELECT CONSTRUCTORSalias0.NAME FROM CONSTRUCTORS AS CONSTRUCTORSalias0 JOIN CONSTRUCTORSTANDINGS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.CONSTRUCTORID = CONSTRUCTORSalias0.CONSTRUCTORID WHERE CONSTRUCTORSalias0.NATIONALITY = "var0" AND DERIVED_TABLEalias0.POINTS > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the maximum share count of transactions where the amount is smaller than var0<CODESPLIT>SELECT AVG( RESULTSalias0.FASTESTLAPSPEED ) FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = "var1" AND RACESalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum fastest lap speed in race named ' var1 ' in var0 ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year ?<CODESPLIT>SELECT ACCOUNTSalias0.NAME , SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM WRITTEN_BY AS WRITTEN_BYalias0 JOIN MOVIE AS MOVIEalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE WRITERalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all template type codes and number of templates for each .<CODESPLIT>SELECT COUNT( * ) , DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " direct ?<CODESPLIT>SELECT COUNT( * ) , DRIVERSalias0.DRIVERID FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and surname of the driver who participated the most number of races ?<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many technicians are there ?<CODESPLIT>SELECT COUNT( * ) FROM TECHNICIAN AS TECHNICIANalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the Episode of all TV series sorted by rating .<CODESPLIT>SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the team and starting year of technicians ?<CODESPLIT>SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 ORDER BY BANKalias0.NO_OF_CUSTOMERS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birthdays of people in ascending order of height ?<CODESPLIT>SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TEAM != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of technicians aged either var0 or var1<CODESPLIT>SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.AGE = var0 OR TECHNICIANalias0.AGE = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the starting year of the oldest technicians ?<CODESPLIT>SELECT TECHNICIANalias0.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different teams of technicians and the number of technicians in each team .<CODESPLIT>SELECT STAFFalias0.NAME FROM STAFF AS STAFFalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STAFFalias0.TOURIST_ATTRACTION_ID WHERE TOURIST_ATTRACTIONSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all vehicle id<CODESPLIT>SELECT TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TEAM ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the team that have at least two technicians .<CODESPLIT>SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID ORDER BY STADIUMalias0.CAPACITY DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of technicians and series of machines they are assigned to repair .<CODESPLIT>SELECT MACHINEalias0.MACHINE_SERIES , TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of technicians in ascending order of quality rank of the machine they are assigned .<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MAX( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.YEAR = var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of technicians who are assigned to repair machines with value point more than var0 .<CODESPLIT>SELECT TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID WHERE MACHINEalias0.VALUE_POINTS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of technicians and the number of machines they are assigned to repair .<CODESPLIT>SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN TRUST AS TRUSTalias0 ON USERACCTalias0.U_ID = TRUSTalias0.SOURCE_U_ID GROUP BY TRUSTalias0.SOURCE_U_ID ORDER BY AVG( TRUSTalias0.TRUST ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of technicians who have not been assigned to repair machines .<CODESPLIT>SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TECHNICIAN_ID NOT IN ( SELECT REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the starting years shared by technicians from team " var0 " and " var1 " .<CODESPLIT>SELECT TECHNICIANalias0.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TEAM = "var0" INTERSECT SELECT TECHNICIANalias1.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias1 WHERE TECHNICIANalias1.TEAM = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many entrepreneurs are there ?<CODESPLIT>SELECT COUNT( * ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names of all counties sorted by county name in descending alphabetical order .<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY FROM ENTREPRENEUR AS ENTREPRENEURalias0 ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the status of the city that has hosted the greatest number of competitions .<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average money requested by all entrepreneurs ?<CODESPLIT>SELECT AVG( ENTREPRENEURalias0.MONEY_REQUESTED ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the policy types that are used by more than var0 customers .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.WEIGHT ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of entrepreneurs ?<CODESPLIT>SELECT TRAINalias0.ARRIVAL , TRAINalias0.NAME FROM TRAIN AS TRAINalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of entrepreneurs whose investor is not " var0 " ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the weight of the shortest person ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR > var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the entrepreneur with the greatest weight ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total money requested by entrepreneurs with height more than var0 ?<CODESPLIT>SELECT SUM( ENTREPRENEURalias0.MONEY_REQUESTED ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates of birth of entrepreneurs with investor " var0 " or " var1 " ?<CODESPLIT>SELECT PEOPLEalias0.DATE_OF_BIRTH FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR = "var0" OR ENTREPRENEURalias0.INVESTOR = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the weights of entrepreneurs in descending order of money requested ?<CODESPLIT>SELECT PEOPLEalias0.WEIGHT FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which model of the car has the minimum horsepower ?<CODESPLIT>SELECT COUNT( * ) , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the investor that has invested in the most number of entrepreneurs ?<CODESPLIT>SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY INVESTOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the login names and family names of course author and tutors .<CODESPLIT>SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of entrepreneurs and their companies in descending order of money requested ?<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY , PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of people that are not entrepreneurs .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT ENTREPRENEURalias0.PEOPLE_ID FROM ENTREPRENEUR AS ENTREPRENEURalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the investors shared by entrepreneurs that requested more than var0 and entrepreneurs that requested less than var1 .<CODESPLIT>SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 WHERE ENTREPRENEURalias0.MONEY_REQUESTED > var0 INTERSECT SELECT ENTREPRENEURalias1.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias1 WHERE ENTREPRENEURalias1.MONEY_REQUESTED < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct companies are there ?<CODESPLIT>SELECT COUNT( DISTINCT ENTREPRENEURalias0.COMPANY ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the company of the tallest entrepreneur .<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many perpetrators are there ?<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.MONTH = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the date of perpetrators in descending order of the number of people killed .<CODESPLIT>SELECT COUNTRYalias0.COUNTRY FROM CITY AS CITYalias0 JOIN COUNTRY AS COUNTRYalias0 ON COUNTRYalias0.COUNTRY_ID = CITYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the number of people injured by perpetrators in ascending order .<CODESPLIT>SELECT PERPETRATORalias0.INJURED FROM PERPETRATOR AS PERPETRATORalias0 ORDER BY PERPETRATORalias0.INJURED ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the team of the player of the highest age .<CODESPLIT>SELECT AVG( PERPETRATORalias0.INJURED ) FROM PERPETRATOR AS PERPETRATORalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location of the perpetrator with the largest kills .<CODESPLIT>SELECT PERPETRATORalias0.LOCATION FROM PERPETRATOR AS PERPETRATORalias0 ORDER BY PERPETRATORalias0.KILLED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of people in ascending order of height ?<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM MINOR_IN AS MINOR_INalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MINOR_INalias0.STUID WHERE MINOR_INalias0.DNO = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of perpetrators ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of perpetrators whose country is not " var0 " ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PERPETRATORalias0.COUNTRY != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var0 songs whose name contains var0 word " var0 " .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total kills of the perpetrators with height more than var0 .<CODESPLIT>SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE TIPalias0.MONTH = "var0" AND USERalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of perpetrators in country " var0 " or " var1 " ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PERPETRATORalias0.COUNTRY = "var0" OR PERPETRATORalias0.COUNTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the heights of perpetrators in descending order of the number of people they injured ?<CODESPLIT>SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries of perpetrators ? Show each country and the corresponding number of perpetrators there .<CODESPLIT>SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY PERPETRATORalias0.COUNTRY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the country that has the most perpetrators ?<CODESPLIT>SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries that have at least two perpetrators ?<CODESPLIT>SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY PERPETRATORalias0.COUNTRY HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of perpetrators in descending order of the year .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PERPETRATORalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the money rank of the poker player with the highest earnings ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT PERPETRATORalias0.PEOPLE_ID FROM PERPETRATOR AS PERPETRATORalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the countries that have both perpetrators with injures more than var0 and perpetrators with injures smaller than var1 .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct locations of perpetrators are there ?<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID ORDER BY CAPTAINalias0.AGE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the date of the tallest perpetrator .<CODESPLIT>SELECT PERPETRATORalias0.DATE FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which year did the most recent crime happen ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report the name of all campuses in var0 county .<CODESPLIT>SELECT AVG( CHECKINalias0.COUNT ) , CHECKINalias0.DAY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" GROUP BY CHECKINalias0.DAY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all different customers who have some loan sorted by their total loan amount .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.LOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the campuses opened in var0 .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the campuses opened before var0 .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which campus was opened between var0 and var1 ?<CODESPLIT>SELECT COUNTRYalias0.COUNTRY_NAME , MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the campuses that is in var0 , var1 or in var2 , var2 .<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many phones are there ?<CODESPLIT>SELECT CAMPUSFEE FROM CAMPUSES AS CAMPUSESalias0 JOIN CSU_FEES AS CSU_FEESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var0" AND CSU_FEESalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the count of universities whose campus fee is greater than the average campus fee .<CODESPLIT>SELECT COUNT( * ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CAMPUSFEE > ( SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and buildings of all departments sorted by the budget from large to small .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = "var0" AND CAMPUSESalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which year has the most degrees conferred ?<CODESPLIT>SELECT FOLLOWSalias0.F1 FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F2 WHERE USER_PROFILESalias0.NAME = "var0" INTERSECT SELECT FOLLOWSalias1.F1 FROM USER_PROFILES AS USER_PROFILESalias1 JOIN FOLLOWS AS FOLLOWSalias1 ON USER_PROFILESalias1.UID = FOLLOWSalias1.F2 WHERE USER_PROFILESalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which campus has the most degrees conferred in all times ?<CODESPLIT>SELECT DEGREESalias0.CAMPUS FROM DEGREES AS DEGREESalias0 GROUP BY CAMPUS ORDER BY SUM( DEGREESalias0.DEGREES ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which campus has the most faculties in year var0 ?<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE FACULTYalias0.YEAR = var0 ORDER BY FACULTYalias0.FACULTY DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average fee on a CSU campus in var0<CODESPLIT>SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CSU_FEESalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>report the total number of degrees granted between var0 and var1 .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS , SUM( DEGREESalias0.DEGREES ) FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE DEGREESalias0.YEAR <= var1 AND DEGREESalias0.YEAR >= var0 GROUP BY CAMPUSESalias0.CAMPUS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each var0 county campus , report the number of degrees granted after var1 .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS , SUM( DEGREESalias0.DEGREES ) FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.COUNTY = "var0" AND DEGREESalias0.YEAR >= var1 GROUP BY CAMPUSESalias0.CAMPUS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the campus which has more faculties in var0 than every campus in var2 county .<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = "var0" INTERSECT SELECT AIRCRAFTalias1.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias1 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias1 ON AIRPORT_AIRCRAFTalias1.AIRCRAFT_ID = AIRCRAFTalias1.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias1 ON AIRPORTalias1.AIRPORT_ID = AIRPORT_AIRCRAFTalias1.AIRPORT_ID WHERE AIRPORTalias1.AIRPORT_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What campus had more than var1 total enrollment but more than var2 full time enrollment in year var0 ?<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN ENROLLMENTS AS ENROLLMENTSalias0 ON ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE ENROLLMENTSalias0.FTE_AY > var2 AND ENROLLMENTSalias0.TOTALENROLLMENT_AY > var1 AND ENROLLMENTSalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many campuses are there in var0 county ?<CODESPLIT>SELECT COUNT( * ) FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many degrees were conferred in " var0 " in var1 ?<CODESPLIT>SELECT DEGREESalias0.DEGREES FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var0" AND DEGREESalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many faculty is there in total in the year of var0 ?<CODESPLIT>SELECT SUM( FACULTYalias0.FACULTY ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lesson does customer with first name var0 took ?<CODESPLIT>SELECT FACULTYalias0.FACULTY FROM FACULTY AS FACULTYalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var1" AND FACULTYalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the campus that have between var0 and var1 faculty lines in year var2 .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.YEAR = var2 AND FACULTYalias0.FACULTY <= var1 AND FACULTYalias0.FACULTY >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many faculty lines are there in the university that conferred the most number of degrees in year var0 ?<CODESPLIT>SELECT FACULTYalias0.FACULTY FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID AND FACULTYalias0.YEAR = DEGREESalias0.YEAR WHERE FACULTYalias0.YEAR = var0 ORDER BY DEGREESalias0.DEGREES DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all open years when at least two shops are opened .<CODESPLIT>SELECT FACULTYalias0.FACULTY FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID AND FACULTYalias0.YEAR = DEGREESalias0.YEAR WHERE FACULTYalias0.YEAR = var0 ORDER BY DEGREESalias0.DEGREES LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many poker players are there ?<CODESPLIT>SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.UNDERGRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var1" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average attendance of stadiums with capacity percentage higher than var0% ?<CODESPLIT>SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.GRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var1" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the campus fee of " var0 " in year var1 ?<CODESPLIT>SELECT CSU_FEESalias0.CAMPUSFEE FROM CSU_FEES AS CSU_FEESalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var0" AND CSU_FEESalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many CSU campuses are there ?<CODESPLIT>SELECT COUNT( * ) FROM TECHNICIAN AS TECHNICIANalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many candidates are there ?<CODESPLIT>SELECT COUNT( * ) FROM CANDIDATE AS CANDIDATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the season , the player , and the name of the team that players belong to .<CODESPLIT>SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 GROUP BY POLL_SOURCE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many elections are there ?<CODESPLIT>SELECT CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.SUPPORT_RATE DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the candidate who got the lowest oppose rate .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND JOURNALalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the years , book titles , and publishers for all books , in descending order by year .<CODESPLIT>SELECT CANDIDATEalias0.CONSIDER_RATE , CANDIDATEalias0.OPPOSE_RATE , CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.UNSURE_RATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average access count of documents with the least popular structure .<CODESPLIT>SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.OPPOSE_RATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all people names in the order of their date of birth from old to young .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.DATE_OF_BIRTH ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average height and weight for all males (sex is var0) .<CODESPLIT>SELECT AVG( PEOPLEalias0.HEIGHT ) , AVG( PEOPLEalias0.WEIGHT ) FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.SEX = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the names of people who are taller than var0 or lower than var1 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.HEIGHT < var1 OR PEOPLEalias0.HEIGHT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average and minimum weight for each gender .<CODESPLIT>SELECT SCHOOLalias0.TYPE FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.TYPE HAVING COUNT( * ) = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and gender of the candidate who got the highest support rate .<CODESPLIT>SELECT PEOPLEalias0.NAME , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID ORDER BY CANDIDATEalias0.SUPPORT_RATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the candidates whose oppose percentage is the lowest for each sex .<CODESPLIT>SELECT MIN( CANDIDATEalias0.OPPOSE_RATE ) , PEOPLEalias0.NAME , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID GROUP BY PEOPLEalias0.SEX ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which gender got the highest average uncertain ratio .<CODESPLIT>SELECT PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID GROUP BY PEOPLEalias0.SEX ORDER BY AVG( CANDIDATEalias0.UNSURE_RATE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the names of people who did not participate in the candidate election .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT CANDIDATEalias0.PEOPLE_ID FROM CANDIDATE AS CANDIDATEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the lot details of lots associated with transactions with share count smaller than var0 ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE CANDIDATEalias0.SUPPORT_RATE < CANDIDATEalias0.OPPOSE_RATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people are there whose weight is higher than var0 for each gender ?<CODESPLIT>SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 WHERE WEIGHT > var0 GROUP BY PEOPLEalias0.SEX ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the hardware model name for the phones that were produced by " var1 " or whose screen mode type is " var0 . "<CODESPLIT>SELECT MAX( CANDIDATEalias0.SUPPORT_RATE ) , MIN( CANDIDATEalias0.CONSIDER_RATE ) , MIN( CANDIDATEalias0.OPPOSE_RATE ) FROM CANDIDATE AS CANDIDATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all female (sex is var0) candidate names in the alphabetical order .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE PEOPLEalias0.SEX = "var0" ORDER BY PEOPLEalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the name of people whose height is lower than the average .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 INTERSECT SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all info about all people .<CODESPLIT>SELECT PEOPLEalias0.* FROM PEOPLE AS PEOPLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of all movies directed by steven spielberg .<CODESPLIT>SELECT COUNT( TRACKalias0.* ) FROM TRACK AS TRACKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the movie produced after var1 and directed by var0 ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = "var0" AND MOVIEalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies were made before var0 ?<CODESPLIT>SELECT COUNT( * ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the director of movie var0 ?<CODESPLIT>SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members in ascending order of their rank in rounds .<CODESPLIT>SELECT COUNT( * ) FROM REVIEWER AS REVIEWERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the reviewer whose name has substring " var0 " ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the movie titles and average rating of the movies with the lowest average rating ?<CODESPLIT>SELECT RID FROM REVIEWER AS REVIEWERalias0 WHERE REVIEWERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of ratings that has more than var1 var0 ?<CODESPLIT>SELECT COUNT( RATINGalias0.* ) FROM RATING AS RATINGalias0 WHERE var0 > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the lowest and highest rating star ?<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many assets does each third party company supply ? List the count and the company id .<CODESPLIT>SELECT MAX( var0 ) , MIN( var1 ) FROM RATING AS RATINGalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states lie on the largest river in the united states<CODESPLIT>SELECT DISTINCT MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS >= var0 ORDER BY MOVIEalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of directors who directed movies with var0 star rating ? Also return the title of these movies .<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating star for each reviewer ?<CODESPLIT>SELECT AVG( RATINGalias0.STARS ) , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID GROUP BY REVIEWERalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of all movies that have no ratings .<CODESPLIT>SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of money spent by var0 var1 ?<CODESPLIT>SELECT DISTINCT REVIEWERalias0.NAME FROM REVIEWER AS REVIEWERalias0 JOIN RATING AS RATINGalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGDATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different ids and names of the battles that lost any ' var0 ' type shipes ?<CODESPLIT>SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE MOVIEalias0.YEAR = ( SELECT MIN( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the most recent movie ?<CODESPLIT>SELECT MAX( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the abbreviation and country of the airline that has fewest number of flights ?<CODESPLIT>SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.YEAR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE MOVIEalias0.YEAR = ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the names of movies whose created year is after all movies directed by var0 ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR > ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 WHERE MOVIEalias1.DIRECTOR = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by var0 ?<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS > ( SELECT AVG( RATINGalias1.STARS ) FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE MOVIEalias1.DIRECTOR = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the carriers of devices that have no devices in stock .<CODESPLIT>SELECT MOVIEalias0.TITLE , RATINGalias0.RATINGDATE , RATINGalias0.STARS , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID ORDER BY REVIEWERalias0.NAME , MOVIEalias0.TITLE , RATINGalias0.STARS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all reviewers who have contributed three or more ratings .<CODESPLIT>SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID GROUP BY RATINGalias0.RID HAVING COUNT( RATINGalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common builder of railways .<CODESPLIT>SELECT DISTINCT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE MOVIEalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all directors whose movies are rated by var0 .<CODESPLIT>SELECT DISTINCT MOVIEalias0.DIRECTOR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which film has the highest rental rate ? And what is the rate ?<CODESPLIT>SELECT DISTINCT MOVIEalias0.TITLE , RATINGalias0.STARS , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = MOVIEalias0.DIRECTOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all reviewer names and movie names together in a single list .<CODESPLIT>SELECT REVIEWERalias0.NAME FROM REVIEWER AS REVIEWERalias0 UNION SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of all movies not reviewed by var0 .<CODESPLIT>SELECT COUNT( * ) , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For all directors who directed more than one movie , return the titles of all movies directed by them , along with the director name . Sort by director name , then movie title .<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.DIRECTOR = MOVIEalias0.DIRECTOR WHERE MOVIEalias1.TITLE != MOVIEalias0.TITLE ORDER BY MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For directors who had more than one movie , return the titles and produced years of all movies directed by them .<CODESPLIT>SELECT MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.DIRECTOR = MOVIEalias0.DIRECTOR WHERE MOVIEalias1.TITLE != MOVIEalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the directors who made exactly one movie ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the directors who made exactly one movie excluding director NULL ?<CODESPLIT>SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE DIRECTOR != "var0" GROUP BY MOVIEalias0.DIRECTOR HAVING COUNT( * ) = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movie reviews does each director get ?<CODESPLIT>SELECT COUNT( RATINGalias0.* ) , MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY MOVIEalias0.DIRECTOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the movies with the highest average rating . Return the movie titles and average rating .<CODESPLIT>SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.RANK = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many calendar items do we have ?<CODESPLIT>SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY AVG( RATINGalias0.STARS ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and years of the movies that has the top var0 highest rating star ?<CODESPLIT>SELECT MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID ORDER BY RATINGalias0.STARS DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each director , return the director's name together with the title of the movie they directed that received the highest rating among all of their movies , and the value of that rating . Ignore movies whose director is NULL .<CODESPLIT>SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE DIRECTOR != "var0" GROUP BY MOVIEalias0.DIRECTOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title and star rating of the movie that got the least rating star for each reviewer .<CODESPLIT>SELECT PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 GROUP BY PARTY ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the title and score of the movie with the lowest rating among all movies directed by each director .<CODESPLIT>SELECT MIN( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY MOVIEalias0.DIRECTOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the movie that is rated by most of times ?<CODESPLIT>SELECT MOVIEalias0.TITLE , RATINGalias0.MID FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY COUNT( RATINGalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the building full names that contain the word " var0 " ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of reviewers who had given higher than var0 star ratings .<CODESPLIT>SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGalias0.STARS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age of all the dogs ?<CODESPLIT>SELECT AVG( STARS ) , MID FROM RATING AS RATINGalias0 WHERE MID NOT IN ( SELECT RATINGalias1.MID FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias1.RID WHERE REVIEWERalias0.NAME = "var0" ) GROUP BY MID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of the movies that are not reviewed by var0 .<CODESPLIT>SELECT MID FROM RATING AS RATINGalias0 EXCEPT SELECT RATINGalias1.MID FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias1.RID WHERE REVIEWERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average rating star for each movie that received at least var0 ratings .<CODESPLIT>SELECT AVG( STARS ) , MID FROM RATING AS RATINGalias0 GROUP BY MID HAVING COUNT( RATINGalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the ids of reviewers who did not give var0 star .<CODESPLIT>SELECT RID FROM RATING AS RATINGalias0 EXCEPT SELECT RID FROM RATING AS RATINGalias1 WHERE STARS = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of all reviewers who did not give var1 var0 ?<CODESPLIT>SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of reviewers who didn't only give var0 star .<CODESPLIT>SELECT COUNT( * ) , RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which contact channel has been used by the customer with name " var0 " ?<CODESPLIT>SELECT RID FROM RATING AS RATINGalias0 WHERE var0 != var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are names of the movies that are either made after var1 or reviewed by var0 ?<CODESPLIT>SELECT DISTINCT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE MOVIEalias0.YEAR > var1 OR REVIEWERalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are names of the movies that are either made before var1 or directed by var0 ?<CODESPLIT>SELECT COUNT( DISTINCT CNAME ) FROM TRYOUT AS TRYOUTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the pilot positions that have both pilots joining after year var1 and pilots joining before var0 .<CODESPLIT>SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGalias0.STARS = var0 INTERSECT SELECT REVIEWERalias1.NAME FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias1 ON REVIEWERalias1.RID = RATINGalias1.RID WHERE RATINGalias1.STARS = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of movies that get var0 star and var1 star ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 INTERSECT SELECT MOVIEalias1.TITLE FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE RATINGalias1.STARS = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many counties are there ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of counties in descending order of population .<CODESPLIT>SELECT * FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct police forces of counties whose location is not on east side .<CODESPLIT>SELECT DISTINCT COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.LOCATION != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the asset id , details , make and model for every asset .<CODESPLIT>SELECT MAX( COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE ) , MIN( COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE ) FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the crime rates of counties in ascending order of number of police officers .<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POLICE_OFFICERS ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of cities in ascending alphabetical order ?<CODESPLIT>SELECT CITYalias0.NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , phone number and email address of the customer who made the largest number of orders ?<CODESPLIT>SELECT CITYalias0.HISPANIC FROM CITY AS CITYalias0 WHERE CITYalias0.BLACK > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the coupon amount of the coupons owned by both var0 and var1 customers ?<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the city with the top var0 white percentages .<CODESPLIT>SELECT COUNT( UNIVERSITYalias0.* ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE ENROLLMENT > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the types of competition that have at most five competitions of that type .<CODESPLIT>SELECT CITYalias0.NAME , COUNTY_PUBLIC_SAFETYalias0.NAME FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct payment methods are used by parties ?<CODESPLIT>SELECT CITYalias0.WHITE , COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average attendance of stadiums with capacity percentage higher than var0% ?<CODESPLIT>SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID = ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POLICE_OFFICERS DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of cities in counties that have a population more than var0 .<CODESPLIT>SELECT COUNT( CITYalias0.* ) FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.POPULATION > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average height of the players from the college named ' var0 ' ?<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID WHERE CITYalias0.WHITE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the police forces and the number of counties with each police force .<CODESPLIT>SELECT COUNT( * ) , COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location shared by most counties ?<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.LOCATION FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of counties that do not have any cities .<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID NOT IN ( SELECT CITYalias0.COUNTY_ID FROM CITY AS CITYalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the police force shared by counties with location on the east and west .<CODESPLIT>SELECT COUNT( * ) FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of cities in counties that have a crime rate less than var0 .<CODESPLIT>SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE < var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the case burden of counties in descending order of population .<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.CASE_BURDEN FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the team name and acc regular season score of the school that was founded for the longest time ?<CODESPLIT>SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE < var0 AND ROOMSalias0.BEDS = var1 AND ROOMSalias0.DECOR = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the rooms that have a price higher than var0 and can accommodate more than var1 people . Report room names and ids .<CODESPLIT>SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 AND MAXOCCUPANCY > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the most popular room in the hotel . The most popular room is the room that had seen the largest number of reservations .<CODESPLIT>SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ORDER BY COUNT( RESERVATIONSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kids stay in the rooms reserved by var0 var1 ?<CODESPLIT>SELECT RESERVATIONSalias0.KIDS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE FIRSTNAME = "var0" AND LASTNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many times does var0 var1 has reserved a room .<CODESPLIT>SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 WHERE FIRSTNAME = "var0" AND LASTNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which room has the highest rate ? List the room's full name , rate , check in and check out date .<CODESPLIT>SELECT RESERVATIONSalias0.CHECKIN , RESERVATIONSalias0.CHECKOUT , RESERVATIONSalias0.RATE , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ORDER BY RESERVATIONSalias0.RATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many adults stay in the room var1 var2 checked in on Oct 23 , 2010 ?<CODESPLIT>SELECT RESERVATIONSalias0.ADULTS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE CHECKIN = "var0" AND FIRSTNAME = "var1" AND LASTNAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kids stay in the room var1 var2 checked in on Sep 21 , 2010 ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.RATING = var1 AND CATEGORYalias0.CATEGORY_NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What nurses are on call with block floor var0 and block code var0 ? Tell me their names .<CODESPLIT>SELECT SUM( ROOMSalias0.BEDS ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and decor of rooms that have a king bed . Sort the list by their price .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ORDER BY ALBUMSalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of roller coasters by ascending order of length .<CODESPLIT>SELECT BASEPRICE , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the decor of room var0 ?<CODESPLIT>SELECT ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE ROOMNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average base price of different bed type ? List bed type and average base price .<CODESPLIT>SELECT AVG( BASEPRICE ) , BEDTYPE FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all academic papers on var0<CODESPLIT>SELECT SUM( MAXOCCUPANCY ) FROM ROOMS AS ROOMSalias0 WHERE ROOMSalias0.DECOR = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What kind of decor has the least number of reservations ?<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID JOIN ENDOWMENT AS ENDOWMENTalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID GROUP BY SCHOOLalias0.SCHOOL_NAME HAVING SUM( BUDGETalias0.BUDGETED ) > var0 OR SUM( ENDOWMENTalias0.AMOUNT ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids .<CODESPLIT>SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE ROOMSalias0.MAXOCCUPANCY = RESERVATIONSalias0.ADULTS + RESERVATIONSalias0.KIDS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the description and code of the attraction type most tourist attractions belong to .<CODESPLIT>SELECT RESERVATIONSalias0.FIRSTNAME , RESERVATIONSalias0.LASTNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE RESERVATIONSalias0.RATE - ROOMSalias0.BASEPRICE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many rooms are there ?<CODESPLIT>SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of rooms with a king bed .<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 EXCEPT SELECT LOTSalias1.LOT_DETAILS FROM LOTS AS LOTSalias1 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.LOT_ID = LOTSalias1.LOT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of rooms for each bed type .<CODESPLIT>SELECT BEDTYPE , COUNT( * ) FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the room with the maximum occupancy .<CODESPLIT>SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY MAXOCCUPANCY DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and ids of stations that had more than var0 bikes available on average or were installed in December ?<CODESPLIT>SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the type of bed and name of all var0 rooms .<CODESPLIT>SELECT BEDTYPE , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE ROOMSalias0.DECOR = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the largest state<CODESPLIT>SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" GROUP BY ROOMSalias0.DECOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of teachers whose email address contains the word " var0 " .<CODESPLIT>SELECT AVG( BASEPRICE ) , MIN( BASEPRICE ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 GROUP BY ROOMSalias0.DECOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total grant amount of the organisations described as research ?<CODESPLIT>SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct years in which the competitions type is not " var0 " ?<CODESPLIT>SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 GROUP BY ROOMSalias0.DECOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of rooms with king or queen bed .<CODESPLIT>SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" OR BEDTYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different types of beds are there ?<CODESPLIT>SELECT COUNT( DISTINCT BEDTYPE ) FROM ROOMS AS ROOMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the color used by least products ?<CODESPLIT>SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of rooms whose price is higher than the average price .<CODESPLIT>SELECT MEMBERalias0.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.MEMBERSHIP_CARD HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of rooms that do not have any reservation .<CODESPLIT>SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 WHERE ROOMID NOT IN ( SELECT DISTINCT RESERVATIONSalias0.ROOM FROM RESERVATIONS AS RESERVATIONSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name and number of reservations made for each of the rooms .<CODESPLIT>SELECT COUNT( RESERVATIONSalias0.* ) , RESERVATIONSalias0.ROOM , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers in state of var0 ?<CODESPLIT>SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM HAVING COUNT( RESERVATIONSalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of rooms whose base price is between var0 and var1 .<CODESPLIT>SELECT COUNT( COMPLAINTSalias0.* ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of rooms booked by some customers whose first name contains var0 .<CODESPLIT>SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE FIRSTNAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the details of the cmi masters that have the cross reference code ' var0 ' ?<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the cmi cross reference id that is related to at least one council tax entry ? List the cross reference id and source system code .<CODESPLIT>SELECT CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN COUNCIL_TAX AS COUNCIL_TAXalias0 ON COUNCIL_TAXalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID GROUP BY CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many business rates are related to each cmi cross reference ? List cross reference id , master customer id and the n<CODESPLIT>SELECT CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID , CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID , COUNT( * ) FROM BUSINESS_RATES AS BUSINESS_RATESalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID = BUSINESS_RATESalias0.CMI_CROSS_REF_ID GROUP BY CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of all the faculty members who participate in an activity and advise a student .<CODESPLIT>SELECT BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN BENEFITS_OVERPAYMENTS AS BENEFITS_OVERPAYMENTSalias0 ON CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID = BENEFITS_OVERPAYMENTSalias0.CMI_CROSS_REF_ID ORDER BY BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average ticket sales gross in dollars of films ?<CODESPLIT>SELECT CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE , PARKING_FINESalias0.COUNCIL_TAX_ID FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN PARKING_FINES AS PARKING_FINESalias0 ON PARKING_FINESalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the renting arrears tax ids related to the customer master index whose detail is not ' var0 ' ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND USERalias0.NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the register ids of electoral registries that have the cross reference source system code ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT ELECTORAL_REGISTERalias0.ELECTORAL_REGISTER_ID FROM ELECTORAL_REGISTER AS ELECTORAL_REGISTERalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON ELECTORAL_REGISTERalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID WHERE CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE = "var0" OR CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the states which have between var0 to var1 staffs living there .<CODESPLIT>SELECT COUNT( DISTINCT CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE ) FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information about customer master index , and sort them by details in descending order .<CODESPLIT>SELECT * FROM CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 ORDER BY CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was the first asset acquired ?<CODESPLIT>SELECT CMI_CROSS_REF_ID , PARKING_FINESalias0.COUNCIL_TAX_ID FROM PARKING_FINES AS PARKING_FINESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many council taxes are collected for renting arrears ?<CODESPLIT>SELECT * FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total surface area of the continents var0 and var1 ?<CODESPLIT>SELECT DISTINCT CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON CUSTOMER_MASTER_INDEXalias0.MASTER_CUSTOMER_ID = CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID WHERE CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which cmi cross reference id is not related to any parking taxes ?<CODESPLIT>SELECT CMI_CROSS_REF_ID FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 EXCEPT SELECT CMI_CROSS_REF_ID FROM PARKING_FINES AS PARKING_FINESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the document type code , document name , and document description for the document with name ' var0 ' or name ' var1 ' .<CODESPLIT>SELECT DISTINCT CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 WHERE CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many parties are there ?<CODESPLIT>SELECT COUNT( * ) FROM PARTY AS PARTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the themes of parties in ascending order of number of hosts .<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and degree of all professors who are teaching some class in Computer Info . Systems department .<CODESPLIT>SELECT PARTYalias0.LOCATION , PARTYalias0.PARTY_THEME FROM PARTY AS PARTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Number of var0 papers with more than var1 citations<CODESPLIT>SELECT PARTYalias0.FIRST_YEAR , PARTYalias0.LAST_YEAR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_THEME = "var0" OR PARTYalias0.PARTY_THEME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of hosts for parties ?<CODESPLIT>SELECT AVG( PARTYalias0.NUMBER_OF_HOSTS ) FROM PARTY AS PARTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location of the party with the most hosts ?<CODESPLIT>SELECT PARTYalias0.LOCATION FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.NUMBER_OF_HOSTS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different nationalities along with the number of hosts of each nationality .<CODESPLIT>SELECT PAYMENTSalias0.CUSTOMER_ID , SUM( PAYMENTSalias0.AMOUNT_PAID ) FROM PAYMENTS AS PAYMENTSalias0 GROUP BY CUSTOMER_ID ORDER BY SUM( PAYMENTSalias0.AMOUNT_PAID ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common nationality of hosts .<CODESPLIT>SELECT LNAME FROM FACULTY AS FACULTYalias0 WHERE BUILDING = "var0" ORDER BY LNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the nations that have both hosts older than var0 and hosts younger than var1 .<CODESPLIT>SELECT HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 WHERE HOSTalias0.AGE > var0 INTERSECT SELECT HOSTalias1.NATIONALITY FROM HOST AS HOSTalias1 WHERE HOSTalias1.AGE < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the themes of parties and the names of the party hosts .<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations of parties and the names of the party hosts in ascending order of the age of the host .<CODESPLIT>SELECT HOSTalias0.NAME , PARTYalias0.LOCATION FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID ORDER BY HOSTalias0.AGE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations of parties with hosts older than var0 .<CODESPLIT>SELECT PARTYalias0.LOCATION FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE HOSTalias0.AGE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the host names for parties with number of hosts greater than var0 .<CODESPLIT>SELECT HOSTalias0.NAME FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE PARTYalias0.NUMBER_OF_HOSTS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and the nationality of the oldest host .<CODESPLIT>SELECT HOSTalias0.NAME , HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 ORDER BY HOSTalias0.AGE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the first and last name , department , city , and state province for each employee .<CODESPLIT>SELECT HOSTalias0.NAME FROM HOST AS HOSTalias0 WHERE HOSTalias0.HOST_ID NOT IN ( SELECT PARTY_HOSTalias0.HOST_ID FROM PARTY_HOST AS PARTY_HOSTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all region code and region name sorted by the codes .<CODESPLIT>SELECT REGIONalias0.REGION_CODE , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.REGION_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all region names in alphabetical order .<CODESPLIT>SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.REGION_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of medications prescribed for each brand .<CODESPLIT>SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 WHERE REGIONalias0.REGION_NAME != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many storms had death records ?<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_SIZE FROM PRODUCTS AS PRODUCTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of albums that are released by aritist whose name has ' var0 '<CODESPLIT>SELECT STORMalias0.DATES_ACTIVE , STORMalias0.NAME , STORMalias0.NUMBER_DEATHS FROM STORM AS STORMalias0 WHERE STORMalias0.NUMBER_DEATHS >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average and maximum damage for all storms with max speed higher than var0 .<CODESPLIT>SELECT AVG( STORMalias0.DAMAGE_MILLIONS_USD ) , MAX( STORMalias0.DAMAGE_MILLIONS_USD ) FROM STORM AS STORMalias0 WHERE STORMalias0.MAX_SPEED > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of deaths and damage for all storms with a max speed greater than the average ?<CODESPLIT>SELECT PAYMENTSalias0.PAYMENT_DATE FROM PAYMENTS AS PAYMENTSalias0 WHERE PAYMENTSalias0.AMOUNT_PAID > var0 OR PAYMENTSalias0.PAYMENT_TYPE_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the attendances of the performances at location " var0 " or " var1 "<CODESPLIT>SELECT STORMalias0.DAMAGE_MILLIONS_USD , STORMalias0.NAME FROM STORM AS STORMalias0 ORDER BY STORMalias0.MAX_SPEED DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many regions are affected ?<CODESPLIT>SELECT COUNT( DISTINCT AFFECTED_REGIONalias0.REGION_ID ) FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name for regions not affected .<CODESPLIT>SELECT COUNT( DISTINCT TIMED_STATUS_OF_THINGSalias0.STATUS_OF_THING_CODE ) FROM TIMED_STATUS_OF_THINGS AS TIMED_STATUS_OF_THINGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all of the ids for var2-footed players with a height between var0cm and var1cm .<CODESPLIT>SELECT COUNT( AFFECTED_REGIONalias0.* ) , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID GROUP BY REGIONalias0.REGION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name for storms and the number of affected regions for each storm .<CODESPLIT>SELECT COUNT( AFFECTED_REGIONalias0.* ) , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct template type codes for all templates .<CODESPLIT>SELECT STORMalias0.MAX_SPEED , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ORDER BY COUNT( AFFECTED_REGIONalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of storms which don't have affected region in record .<CODESPLIT>SELECT STORMalias0.NAME FROM STORM AS STORMalias0 WHERE STORMalias0.STORM_ID NOT IN ( SELECT AFFECTED_REGIONalias0.STORM_ID FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are first and last names of players participating in all star game in var0 ?<CODESPLIT>SELECT STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 INTERSECT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING SUM( AFFECTED_REGIONalias1.NUMBER_CITY_AFFECTED ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all storm names except for those with at least two affected regions .<CODESPLIT>SELECT STORMalias0.NAME FROM STORM AS STORMalias0 EXCEPT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the region names affected by the storm with a number of deaths of least var0 ?<CODESPLIT>SELECT REGIONalias0.REGION_NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE STORMalias0.NUMBER_DEATHS >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all storm names affecting region " var0 " .<CODESPLIT>SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the region name with at least two storms .<CODESPLIT>SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID = MEMBERalias0.MEMBER_ID GROUP BY PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID ORDER BY COUNT( PARTY_EVENTSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the regions which were affected by the storm that killed the greatest number of people .<CODESPLIT>SELECT REGIONalias0.REGION_NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID ORDER BY STORMalias0.NUMBER_DEATHS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show distinct names of singers that have songs with sales more than var0 .<CODESPLIT>SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = "var0" INTERSECT SELECT STORMalias1.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias1 JOIN REGION AS REGIONalias1 ON REGIONalias1.REGION_ID = AFFECTED_REGIONalias1.REGION_ID JOIN STORM AS STORMalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID WHERE REGIONalias1.REGION_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many counties are there in total ?<CODESPLIT>SELECT FACULTYalias0.RANK , FNAME , LNAME FROM FACULTY AS FACULTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist names who didn't have an exhibition in var0 .<CODESPLIT>SELECT COUNTYalias0.COUNTY_NAME , COUNTYalias0.POPULATION FROM COUNTY AS COUNTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average population of all counties .<CODESPLIT>SELECT AVG( COUNTYalias0.POPULATION ) FROM COUNTY AS COUNTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each donator name and the amount of endowment in descending order of the amount of endowment .<CODESPLIT>SELECT MAX( COUNTYalias0.POPULATION ) , MIN( COUNTYalias0.POPULATION ) FROM COUNTY AS COUNTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct districts for elections .<CODESPLIT>SELECT DISTINCT ELECTIONalias0.DISTRICT FROM ELECTION AS ELECTIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the zip code of the county with name " var0 " .<CODESPLIT>SELECT PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 GROUP BY PARTY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Display the first and last name , and salary for those employees whose first name is ending with the letter m .<CODESPLIT>SELECT ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 WHERE ELECTIONalias0.DISTRICT = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the delegate and committee information of elections .<CODESPLIT>SELECT ELECTIONalias0.COMMITTEE , ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct governors are there ?<CODESPLIT>SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the lieutenant governor and comptroller from the democratic party .<CODESPLIT>SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which distinct years was the governor " var0 " ?<CODESPLIT>SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.FLAG = "var0" INTERSECT SELECT SHIPalias1.TYPE FROM SHIP AS SHIPalias1 WHERE SHIPalias1.FLAG = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average rank of winners in all matches .<CODESPLIT>SELECT ELECTIONalias0.* FROM ELECTION AS ELECTIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the delegates and the names of county they belong to .<CODESPLIT>SELECT COUNTYalias0.COUNTY_NAME , ELECTIONalias0.DELEGATE FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which delegates are from counties with population smaller than var0 ?<CODESPLIT>SELECT ELECTIONalias0.DELEGATE FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct delegates are from counties with population larger than var0 ?<CODESPLIT>SELECT COUNT( DISTINCT ELECTIONalias0.DELEGATE ) FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the largest state<CODESPLIT>SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE ELECTIONalias0.COMMITTEE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list all album titles in alphabetical order .<CODESPLIT>SELECT ELECTIONalias0.DELEGATE , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who were the governors of the parties associated with delegates from district var0 ?<CODESPLIT>SELECT PARTYalias0.GOVERNOR FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.DISTRICT = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who were the comptrollers of the parties associated with the delegates from district var0 or district var1 ?<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the details for all chip models .<CODESPLIT>SELECT ELECTIONalias0.COMMITTEE FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE PARTYalias0.PARTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of each county along with the corresponding number of delegates from that county .<CODESPLIT>SELECT COUNT( ELECTIONalias0.* ) , COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID GROUP BY COUNTYalias0.COUNTY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of customers in all banks of var0 state .<CODESPLIT>SELECT COUNT( ELECTIONalias0.* ) , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and cost of all procedures sorted by the cost from the highest to the lowest .<CODESPLIT>SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names of all counties sorted by county name in descending alphabetical order .<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 JOIN RIVER AS RIVERalias0 ON RIVERalias0.TRAVERSE = CITYalias0.STATE_NAME WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM RIVER AS RIVERalias1 JOIN CITY AS CITYalias1 ON RIVERalias1.TRAVERSE = CITYalias1.STATE_NAME ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of the county with the biggest population .<CODESPLIT>SELECT PHONEalias0.CHIP_MODEL , PHONEalias0.SCREEN_MODE FROM PHONE AS PHONEalias0 WHERE PHONEalias0.HARDWARE_MODEL_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the var0 counties with the smallest population .<CODESPLIT>SELECT SHIPalias0.NAME , SHIPalias0.TONNAGE FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.NAME DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of counties that have at least two delegates .<CODESPLIT>SELECT REVIEWalias0.TEXT FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.RATING > var0 AND USERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average sales of the journals that have an editor whose work type is ' var0 ' ?<CODESPLIT>SELECT PARTYalias0.PARTY FROM PARTY AS PARTYalias0 GROUP BY PARTYalias0.PARTY HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of all the contestants who got voted , what is the contestant number and name of the contestant who got least votes ?<CODESPLIT>SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ORDER BY COUNT( ELECTIONalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of reviewers who didn't only give var0 star .<CODESPLIT>SELECT PARTYalias0.GOVERNOR FROM PARTY AS PARTYalias0 GROUP BY GOVERNOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of the students in third grade that are not taught by var1 var2 .<CODESPLIT>SELECT COUNT( * ) , PARTYalias0.COMPTROLLER FROM PARTY AS PARTYalias0 GROUP BY COMPTROLLER ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keyword , which have been contained by the most number of papers in var0 .<CODESPLIT>SELECT PARTYalias0.PARTY FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_ID NOT IN ( SELECT ELECTIONalias0.PARTY FROM ELECTION AS ELECTIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries that have greater surface area than any country in var0 ?<CODESPLIT>SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.COMMITTEE = "var0" INTERSECT SELECT PARTYalias1.PARTY FROM ELECTION AS ELECTIONalias1 JOIN PARTY AS PARTYalias1 ON PARTYalias1.PARTY_ID = ELECTIONalias1.PARTY WHERE ELECTIONalias1.COMMITTEE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which committees have delegates from both democratic party and liberal party ?<CODESPLIT>SELECT ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many journalists are there ?<CODESPLIT>SELECT COUNT( * ) FROM JOURNALIST AS JOURNALISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer first , last name and id with least number of accounts .<CODESPLIT>SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 ORDER BY JOURNALISTalias0.YEARS_WORKING ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What articles have been published since var1 about var0 ?<CODESPLIT>SELECT JOURNALISTalias0.AGE , JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of journalists from " var0 " or " var1 " .<CODESPLIT>SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.NATIONALITY = "var0" OR JOURNALISTalias0.NATIONALITY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Number of var0 papers with more than var1 citations<CODESPLIT>SELECT AVG( JOURNALISTalias0.YEARS_WORKING ) FROM JOURNALIST AS JOURNALISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the nationality of the journalist with the largest number of years working ?<CODESPLIT>SELECT PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 WHERE PERPETRATORalias0.INJURED > var0 INTERSECT SELECT PERPETRATORalias1.COUNTRY FROM PERPETRATOR AS PERPETRATORalias1 WHERE PERPETRATORalias1.INJURED < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the different nationalities and the number of journalists of each nationality .<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common nationality for journalists .<CODESPLIT>SELECT JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 GROUP BY NATIONALITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the nations that have both journalists with more than var0 years of working and journalists with less than var1 years of working .<CODESPLIT>SELECT BIRTHDATE FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the dates , places , and names of events in descending order of the attendance .<CODESPLIT>SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 WHERE ARTWORKalias0.ARTWORK_ID NOT IN ( SELECT NOMINATIONalias0.ARTWORK_ID FROM NOMINATION AS NOMINATIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the employee id of the head whose department has the least number of employees ?<CODESPLIT>SELECT EVENTalias0.DATE , JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of journalists and the names of the events they reported in ascending order<CODESPLIT>SELECT EVENTalias0.NAME , JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID ORDER BY EVENTalias0.EVENT_ATTENDANCE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct buildings that have faculty rooms .<CODESPLIT>SELECT COUNT( NEWS_REPORTalias0.* ) , JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID GROUP BY JOURNALISTalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of journalists that have reported more than one event .<CODESPLIT>SELECT JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID GROUP BY JOURNALISTalias0.NAME HAVING COUNT( NEWS_REPORTalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name , class , and date for all races .<CODESPLIT>SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.JOURNALIST_ID NOT IN ( SELECT NEWS_REPORTalias0.JOURNALIST_ID FROM NEWS_REPORT AS NEWS_REPORTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the average and maximum attendances of all events ?<CODESPLIT>SELECT AVG( EVENTalias0.EVENT_ATTENDANCE ) , MAX( EVENTalias0.EVENT_ATTENDANCE ) FROM EVENT AS EVENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age and experience working length of journalists working on different role type .<CODESPLIT>SELECT AVG( JOURNALISTalias0.AGE ) , AVG( JOURNALISTalias0.YEARS_WORKING ) , NEWS_REPORTalias0.WORK_TYPE FROM JOURNALIST AS JOURNALISTalias0 JOIN NEWS_REPORT AS NEWS_REPORTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID GROUP BY NEWS_REPORTalias0.WORK_TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the event venues and names that have the top var0 most number of people attended .<CODESPLIT>SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER GROUP BY CONTESTANTSalias0.CONTESTANT_NUMBER ORDER BY COUNT( VOTESalias0.* ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me all the restaurants .<CODESPLIT>SELECT RESNAME FROM RESTAURANT AS RESTAURANTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the year in which there are more than one festivals .<CODESPLIT>SELECT RESTAURANTalias0.ADDRESS FROM RESTAURANT AS RESTAURANTalias0 WHERE RESNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the rating of the restaurant var0 ?<CODESPLIT>SELECT RESTAURANTalias0.RATING FROM RESTAURANT AS RESTAURANTalias0 WHERE RESNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all restaurant types .<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = "var0" GROUP BY BILLING_STATE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the restaurant type var0 ?<CODESPLIT>SELECT RESTYPEDESCRIPTION FROM RESTAURANT_TYPE AS RESTAURANT_TYPEalias0 WHERE RESTYPENAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which restaurants have highest rating ? List the restaurant name and its rating .<CODESPLIT>SELECT RESNAME , RESTAURANTalias0.RATING FROM RESTAURANT AS RESTAURANTalias0 ORDER BY RESTAURANTalias0.RATING DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of student var0 var1 ?<CODESPLIT>SELECT STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE FNAME = "var0" AND LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the gender of the student var0 var1 ?<CODESPLIT>SELECT STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE FNAME = "var0" AND LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all students ' first names and last names who majored in var0 .<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city does student var0 var1 live in ?<CODESPLIT>SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE FNAME = "var0" AND LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Advisor var0 has how many students ?<CODESPLIT>SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ADVISOR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which Advisor has most of students ? List advisor and the number of students .<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY ADVISOR ORDER BY COUNT( STUDENTalias0.ADVISOR ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which major has least number of students ? List the major and the number of students .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.POPULATION < ( SELECT MAX( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which major has between var0 and var1 number of students ? List major and the number of students .<CODESPLIT>SELECT COUNT( * ) FROM TRAIN AS TRAINalias0 WHERE TRAINalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the products that have the color description " var0 " and have the characteristic name " var1 " .<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 AND STUDENTalias0.MAJOR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all female students age is older than var0 who is not majoring in var1 . List students ' first name and last name .<CODESPLIT>SELECT LESSONSalias0.LESSON_ID FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" AND STAFFalias0.NICKNAME LIKE "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many restaurant is the var0 type restaurant ?<CODESPLIT>SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ORDER BY PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How long does student var0 var1 spend on the restaurant in total ?<CODESPLIT>SELECT SUM( VISITS_RESTAURANTalias0.SPENT ) FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID WHERE STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the physician who prescribed the highest dose ?<CODESPLIT>SELECT COUNT( VISITS_RESTAURANTalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID JOIN RESTAURANT AS RESTAURANTalias0 ON VISITS_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID WHERE RESTAURANTalias0.RESNAME = "var2" AND STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did var0 var1 visit var2 ?<CODESPLIT>SELECT VISITS_RESTAURANTalias0.TIME FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID JOIN RESTAURANT AS RESTAURANTalias0 ON VISITS_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID WHERE RESTAURANTalias0.RESNAME = "var2" AND STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>At which restaurant did the students spend the least amount of time ? List restaurant and the time students spent on in total .<CODESPLIT>SELECT RESTAURANTalias0.RESNAME , SUM( VISITS_RESTAURANTalias0.SPENT ) FROM VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON VISITS_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID GROUP BY RESTAURANTalias0.RESID ORDER BY SUM( VISITS_RESTAURANTalias0.SPENT ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which student visited restaurant most often ? List student's first name and last name .<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID GROUP BY STUDENTalias0.STUID ORDER BY COUNT( VISITS_RESTAURANTalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of orders whose status is ' var0 ' .<CODESPLIT>SELECT ACTUAL_ORDERSalias0.ACTUAL_ORDER_ID FROM ACTUAL_ORDERS AS ACTUAL_ORDERSalias0 WHERE ACTUAL_ORDERSalias0.ORDER_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and price of the product that has been ordered the greatest number of times .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 JOIN REGULAR_ORDER_PRODUCTS AS REGULAR_ORDER_PRODUCTSalias0 ON REGULAR_ORDER_PRODUCTSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID GROUP BY REGULAR_ORDER_PRODUCTSalias0.PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different payment methods are there ?<CODESPLIT>SELECT COUNT( DISTINCT CUSTOMERSalias0.PAYMENT_METHOD ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average access count of documents with the least popular structure .<CODESPLIT>SELECT TRUCKSalias0.TRUCK_DETAILS FROM TRUCKS AS TRUCKSalias0 ORDER BY TRUCKSalias0.TRUCK_LICENCE_NUMBER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of tracks which are in var0 playlist but not in music playlist .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers who are not living in the state of var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for artists without any exhibition .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names and phone numbers of customers living in var0 state .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states which do not have any employee in their record .<CODESPLIT>SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 GROUP BY ROOMSalias0.DECOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Display the first name and department name for each employee .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.DATE_BECAME_CUSTOMER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.DATE_BECAME_CUSTOMER LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the payment method that is used most frequently .<CODESPLIT>SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all routes in alphabetic order .<CODESPLIT>SELECT DELIVERY_ROUTESalias0.ROUTE_NAME FROM DELIVERY_ROUTES AS DELIVERY_ROUTESalias0 ORDER BY DELIVERY_ROUTESalias0.ROUTE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of route that has the highest number of deliveries .<CODESPLIT>SELECT DELIVERY_ROUTESalias0.ROUTE_NAME FROM DELIVERY_ROUTES AS DELIVERY_ROUTESalias0 JOIN DELIVERY_ROUTE_LOCATIONS AS DELIVERY_ROUTE_LOCATIONSalias0 ON DELIVERY_ROUTE_LOCATIONSalias0.ROUTE_ID = DELIVERY_ROUTESalias0.ROUTE_ID GROUP BY DELIVERY_ROUTESalias0.ROUTE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the state names and the number of customers living in each state .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many authors are there ?<CODESPLIT>SELECT COUNT( * ) FROM AUTHORS AS AUTHORSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many institutions are there ?<CODESPLIT>SELECT COUNT( * ) FROM INST ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers are published in total ?<CODESPLIT>SELECT COUNT( * ) FROM PAPERS AS PAPERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the titles of papers published by " var0 var1 " ?<CODESPLIT>SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = "var0" AND AUTHORSalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the clubs that have at least a member with advisor " var0 " .<CODESPLIT>SELECT COUNT( * ) FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = "var0" AND AUTHORSalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct police forces of counties whose location is not on east side .<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.NAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.FNAME = "var0" AND AUTHORSalias0.LNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who belong to the institution " var0 " ? Show the first names and last names .<CODESPLIT>SELECT DISTINCT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers on var0 conference .<CODESPLIT>SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of the author(s) who wrote the paper " var0 " .<CODESPLIT>SELECT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which game type has most number of games ?<CODESPLIT>SELECT DISTINCT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers are published by the institution " var0 " ?<CODESPLIT>SELECT COUNT( DISTINCT PAPERSalias0.TITLE ) FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which paper is published in an institution in " var0 " and have " var2 " as its second author ?<CODESPLIT>SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.LNAME = "var2" AND DERIVED_TABLEalias0.AUTHORDER = var1 AND DERIVED_TABLEalias1.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the author that has published the most papers ?<CODESPLIT>SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID GROUP BY AUTHORSalias0.FNAME , AUTHORSalias0.LNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last transcript release date ?<CODESPLIT>SELECT DERIVED_TABLEalias0.COUNTRY FROM INST AS DERIVED_TABLEalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias1.PAPERID GROUP BY DERIVED_TABLEalias0.COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the organization that has published the largest number of papers .<CODESPLIT>SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.PERSONAL_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of the papers that contain the word " var0 " .<CODESPLIT>SELECT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 WHERE PAPERSalias0.TITLE LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of all the authors who have written a paper with title containing the word " var0 " .<CODESPLIT>SELECT SUM( DEPARTMENTalias0.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = "var0" OR DEPT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What ranks do we have for faculty ?<CODESPLIT>SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Retrieve the title of the paper that has the largest number of authors .<CODESPLIT>SELECT PAPERSalias0.TITLE FROM AUTHORSHIP AS DERIVED_TABLEalias0 JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias0.AUTHORDER = ( SELECT MAX( AUTHORDER ) FROM AUTHORSHIP ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name of the author with last name " var0 " ?<CODESPLIT>SELECT AVG( HOTELSalias0.PRICE_RANGE ) , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 GROUP BY HOTELSalias0.STAR_RATING_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the author with first name " var0 " .<CODESPLIT>SELECT LNAME FROM AUTHORS AS AUTHORSalias0 WHERE FNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of all the authors ordered in alphabetical order .<CODESPLIT>SELECT FNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY FNAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Retrieve all the last names of authors in alphabetical order .<CODESPLIT>SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY TEACHERalias0.HOMETOWN HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of faculty lines in campus " var1 " in var0 ?<CODESPLIT>SELECT FNAME , LNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY LNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different last names do the actors and actresses have ?<CODESPLIT>SELECT COUNT( DISTINCT ACTORalias0.LAST_NAME ) FROM ACTOR AS ACTORalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most popular first name of the actors ?<CODESPLIT>SELECT ACTORalias0.FIRST_NAME FROM ACTOR AS ACTORalias0 GROUP BY FIRST_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most popular full name of the actors ?<CODESPLIT>SELECT COUNT( * ) FROM PAPERS AS PAPERSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all main industry for all companies .<CODESPLIT>SELECT ADDRESSalias0.DISTRICT FROM ADDRESS AS ADDRESSalias0 GROUP BY ADDRESSalias0.DISTRICT HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the unique names of races that held after var1 and the circuits were in var0 ?<CODESPLIT>SELECT ADDRESSalias0.PHONE , ADDRESSalias0.POSTAL_CODE FROM ADDRESS AS ADDRESSalias0 WHERE ADDRESSalias0.ADDRESS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the forenames of all distinct drivers in alphabetical order ?<CODESPLIT>SELECT ADDRESSalias0.CITY_ID , CITYalias0.CITY , COUNT( * ) FROM ADDRESS AS ADDRESSalias0 JOIN CITY AS CITYalias0 ON CITYalias0.CITY_ID = ADDRESSalias0.CITY_ID GROUP BY ADDRESSalias0.CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many addresses are in the district of var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ADDRESS AS ADDRESSalias0 WHERE ADDRESSalias0.DISTRICT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which film is rented at a fee of var0 and has less than var1 in the inventory ? List the film title and id .<CODESPLIT>SELECT PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cities are in var0 ?<CODESPLIT>SELECT APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE , COUNT( * ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 GROUP BY APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries have at least var0 cities ?<CODESPLIT>SELECT PARTYalias0.GOVERNOR FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.DISTRICT = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the payment dates for the payments with an amount larger than var0 and the payments handled by a staff person with the first name var1 .<CODESPLIT>SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 WHERE PAYMENTalias0.AMOUNT > var0 UNION SELECT PAYMENTalias1.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias1 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PAYMENTalias1.STAFF_ID WHERE STAFFalias0.FIRST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have an active value of var0 ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.ACTIVE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which film has the highest rental rate ? And what is the rate ?<CODESPLIT>SELECT MOUNTAINalias0.ID , MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID GROUP BY MOUNTAINalias0.ID HAVING COUNT( PHOTOSalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which film has the most number of actors or actresses ? List the film name , film id and description .<CODESPLIT>SELECT TRACKSalias0.NAME FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE ALBUMSalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which film actor (actress) starred the most films ? List his or her first name , last name and actor id .<CODESPLIT>SELECT ACTORalias0.ACTOR_ID , ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN ACTOR AS ACTORalias0 ON FILM_ACTORalias0.ACTOR_ID = ACTORalias0.ACTOR_ID GROUP BY ACTORalias0.ACTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the line 1 of addresses shared by some students and some teachers ?<CODESPLIT>SELECT ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN ACTOR AS ACTORalias0 ON FILM_ACTORalias0.ACTOR_ID = ACTORalias0.ACTOR_ID GROUP BY ACTORalias0.ACTOR_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the tv series created by " var0 " ?<CODESPLIT>SELECT INVENTORYalias0.STORE_ID FROM INVENTORY AS INVENTORYalias0 GROUP BY STORE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of all payments ?<CODESPLIT>SELECT SUM( PAYMENTalias0.AMOUNT ) FROM PAYMENT AS PAYMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which customer , who has made at least one payment , has spent the least money ? List his or her first name , last name , and the id .<CODESPLIT>SELECT CUSTOMERalias0.CUSTOMER_ID , CUSTOMERalias0.FIRST_NAME , CUSTOMERalias0.LAST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN PAYMENT AS PAYMENTalias0 ON PAYMENTalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID GROUP BY CUSTOMERalias0.CUSTOMER_ID ORDER BY SUM( PAYMENTalias0.AMOUNT ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct positions of pilots older than var0 .<CODESPLIT>SELECT CATEGORYalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN FILM_CATEGORY AS FILM_CATEGORYalias0 ON FILM_CATEGORYalias0.CATEGORY_ID = CATEGORYalias0.CATEGORY_ID JOIN FILM AS FILMalias0 ON FILMalias0.FILM_ID = FILM_CATEGORYalias0.FILM_ID WHERE FILMalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and phone of the customer with the most ordered product quantity ?<CODESPLIT>SELECT CATEGORYalias0.NAME , COUNT( * ) , FILM_CATEGORYalias0.CATEGORY_ID FROM FILM_CATEGORY AS FILM_CATEGORYalias0 JOIN CATEGORY AS CATEGORYalias0 ON FILM_CATEGORYalias0.CATEGORY_ID = CATEGORYalias0.CATEGORY_ID GROUP BY FILM_CATEGORYalias0.CATEGORY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each birth place along with the number of people from there .<CODESPLIT>SELECT FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY FILMalias0.FILM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the film title and inventory id of the item in the inventory which was rented most frequently ?<CODESPLIT>SELECT FILMalias0.TITLE , INVENTORYalias0.INVENTORY_ID FROM FILM AS FILMalias0 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias0.FILM_ID JOIN RENTAL AS RENTALalias0 ON RENTALalias0.INVENTORY_ID = INVENTORYalias0.INVENTORY_ID GROUP BY INVENTORYalias0.INVENTORY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many languages are in these films ?<CODESPLIT>SELECT ARTWORKalias0.TYPE FROM ARTWORK AS ARTWORKalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the movies rated as var0 ? List the titles .<CODESPLIT>SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.RATING = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the writers of the books in ascending alphabetical order .<CODESPLIT>SELECT ADDRESSalias0.ADDRESS FROM STORE AS STOREalias0 JOIN ADDRESS AS ADDRESSalias0 ON STOREalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE STOREalias0.STORE_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which staff handled least number of payments ? List the full name and the id .<CODESPLIT>SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME , STAFFalias0.STAFF_ID FROM STAFF AS STAFFalias0 JOIN PAYMENT AS PAYMENTalias0 ON STAFFalias0.STAFF_ID = PAYMENTalias0.STAFF_ID GROUP BY STAFFalias0.STAFF_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , location , and number of platforms for all stations .<CODESPLIT>SELECT LANGUAGEalias0.NAME FROM FILM AS FILMalias0 JOIN LANGUAGE AS LANGUAGEalias0 ON LANGUAGEalias0.LANGUAGE_ID = FILMalias0.LANGUAGE_ID WHERE FILMalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the theme , date , and attendance for the exhibition in year var0 ?<CODESPLIT>SELECT COUNT( STOREalias0.* ) FROM STORE AS STOREalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kinds of different ratings are listed ?<CODESPLIT>SELECT COUNT( DISTINCT FILMalias0.RATING ) FROM FILM AS FILMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the birth date of the poker player with the lowest earnings ?<CODESPLIT>SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.SPECIAL_FEATURES LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many items in inventory does store var0 have ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.BUSINESS_ID ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.NAME = "var1" AND BUSINESSalias0.STATE = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the first payment happen ?<CODESPLIT>SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.PAYMENT_DATE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names of all students who took some course and the course description .<CODESPLIT>SELECT ADDRESSalias0.ADDRESS , CUSTOMERalias0.EMAIL FROM CUSTOMER AS CUSTOMERalias0 JOIN ADDRESS AS ADDRESSalias0 ON CUSTOMERalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE CUSTOMERalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the films longer than var0 minutes , or rated var1 , except those who cost more than var2 for replacement . List the titles .<CODESPLIT>SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.LENGTH > var0 OR FILMalias0.RATING = "var1" EXCEPT SELECT FILMalias1.TITLE FROM FILM AS FILMalias1 WHERE FILMalias1.REPLACEMENT_COST > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of trains for each station , as well as the station network name and services .<CODESPLIT>SELECT CUSTOMERalias0.FIRST_NAME , CUSTOMERalias0.LAST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN RENTAL AS RENTALalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID ORDER BY RENTALalias0.RENTAL_DATE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and the amount of refund of the booking that incurred the most times of payments ?<CODESPLIT>SELECT DISTINCT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN RENTAL AS RENTALalias0 ON STAFFalias0.STAFF_ID = RENTALalias0.STAFF_ID JOIN CUSTOMER AS CUSTOMERalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID WHERE CUSTOMERalias0.FIRST_NAME = "var0" AND CUSTOMERalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which store has most the customers ?<CODESPLIT>SELECT CUSTOMERalias0.STORE_ID FROM CUSTOMER AS CUSTOMERalias0 GROUP BY STORE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the largest payment amount ?<CODESPLIT>SELECT PAYMENTalias0.AMOUNT FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.AMOUNT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where does the staff member with the first name var0 live ?<CODESPLIT>SELECT ADDRESSalias0.ADDRESS FROM STAFF AS STAFFalias0 JOIN ADDRESS AS ADDRESSalias0 ON STAFFalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names of customers who have not rented any films after ' var0 ' ?<CODESPLIT>SELECT CUSTOMERalias0.FIRST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.CUSTOMER_ID NOT IN ( SELECT RENTALalias0.CUSTOMER_ID FROM RENTAL AS RENTALalias0 WHERE RENTALalias0.RENTAL_DATE > "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many bank branches are there ?<CODESPLIT>SELECT COUNT( * ) FROM BANK AS BANKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers are there ?<CODESPLIT>SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of customers in the banks at var0 .<CODESPLIT>SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 WHERE BANKalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of customers in all banks of var0 state .<CODESPLIT>SELECT CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE FROM CHECKING AS CHECKINGalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = CHECKINGalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of customers cross all banks .<CODESPLIT>SELECT AVG( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the city and state of the bank branch named var0 .<CODESPLIT>SELECT FAULT_LOGalias0.FAULT_DESCRIPTION , FAULT_LOGalias0.FAULT_LOG_ENTRY_DATETIME , FAULT_LOGalias0.FAULT_LOG_ENTRY_ID FROM FAULT_LOG AS FAULT_LOGalias0 JOIN FAULT_LOG_PARTS AS FAULT_LOG_PARTSalias0 ON FAULT_LOGalias0.FAULT_LOG_ENTRY_ID = FAULT_LOG_PARTSalias0.FAULT_LOG_ENTRY_ID GROUP BY FAULT_LOGalias0.FAULT_LOG_ENTRY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the branch names of banks in the var0 state .<CODESPLIT>SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 WHERE BANKalias0.STATE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all customers sorted by their account balance in ascending order .<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY ACC_BAL ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all different customers who have some loan sorted by their total loan amount .<CODESPLIT>SELECT DEPT_NAME FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the state , account type , and credit score of the customer whose number of loan is var0 .<CODESPLIT>SELECT ACC_TYPE , CUSTOMERalias0.CREDIT_SCORE , CUSTOMERalias0.STATE FROM CUSTOMER AS CUSTOMERalias0 WHERE NO_OF_LOANS = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct region names ordered by their labels .<CODESPLIT>SELECT COUNT( DISTINCT BANKalias0.CITY ) FROM BANK AS BANKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which staff have contacted which engineers ? List the staff name and the engineer first name and last name .<CODESPLIT>SELECT COUNT( DISTINCT BANKalias0.STATE ) FROM BANK AS BANKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct types of accounts are there ?<CODESPLIT>SELECT COUNT( DISTINCT ACC_TYPE ) FROM CUSTOMER AS CUSTOMERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the nvar0me var0nd var0ccount bvar0lvar0nce of the customer whose nvar0me includes the letter ' var0 ' .<CODESPLIT>SELECT ACC_BAL , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many transcripts are released ?<CODESPLIT>SELECT SUM( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.STATE = "var0" OR CUSTOMERalias0.STATE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who have both var0 and var1 account types .<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE ACC_TYPE = "var0" INTERSECT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who do not have an var0 account .<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who do not have a loan with a type of var0 .<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias0.LOAN_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who have loans of both var0 and var1 .<CODESPLIT>SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.LOAN_TYPE = "var0" INTERSECT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias1 ON LOANalias1.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias1.LOAN_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers whose credit score is below the average credit scores of all customers .<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.CREDIT_SCORE < ( SELECT AVG( CUSTOMERalias1.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the student who got a grade var0 in the class with code var1 .<CODESPLIT>SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 ORDER BY BANKalias0.NO_OF_CUSTOMERS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the browser that became compatible with the accelerator ' var0 ' after year var1 ?<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY CUSTOMERalias0.CREDIT_SCORE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , account type , and account balance of the customer who has the highest credit score .<CODESPLIT>SELECT ACC_BAL , ACC_TYPE , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY CUSTOMERalias0.CREDIT_SCORE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the unique name for stations that have ever had var0 bikes available .<CODESPLIT>SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where does the customer with the first name Linda live ? And what is her email ?<CODESPLIT>SELECT BANKalias0.STATE FROM BANK AS BANKalias0 GROUP BY STATE ORDER BY SUM( BANKalias0.NO_OF_CUSTOMERS ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the minimum salary for the departments whose average salary is above the average payment of all instructors .<CODESPLIT>SELECT ACC_TYPE , AVG( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CREDIT_SCORE < var0 GROUP BY ACC_TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each state , find the total account balance of customers whose credit score is above var0 .<CODESPLIT>SELECT CUSTOMERalias0.STATE , SUM( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CREDIT_SCORE > var0 GROUP BY CUSTOMERalias0.STATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total amount of loans offered by each bank branch .<CODESPLIT>SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who have more than one loan .<CODESPLIT>SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME HAVING COUNT( LOANalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and account balance of the customers who have loans with a total amount of more than var0 .<CODESPLIT>SELECT CANDIDATEalias0.CONSIDER_RATE , CANDIDATEalias0.OPPOSE_RATE , CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.UNSURE_RATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total revenue of companies whose revenue is larger than the revenue of some companies based in var0 .<CODESPLIT>SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID GROUP BY BANKalias0.BNAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than var0 .<CODESPLIT>SELECT BANKalias0.BNAME FROM LOAN AS LOANalias0 JOIN BANK AS BANKalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID JOIN CUSTOMER AS CUSTOMERalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE CUSTOMERalias0.CREDIT_SCORE < var0 GROUP BY BANKalias0.BNAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of bank branches that provided some loans .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE PUBLICATIONalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and credit score of the customers who have some loans .<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the the name of the customers who have a loan with amount more than var0 .<CODESPLIT>SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.AMOUNT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the city and name of bank branches that provide business loans .<CODESPLIT>SELECT BANKalias0.BNAME , BANKalias0.CITY FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID WHERE LOANalias0.LOAN_TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List in alphabetic order the names of all distinct instructors .<CODESPLIT>SELECT BANKalias0.BNAME FROM LOAN AS LOANalias0 JOIN BANK AS BANKalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID JOIN CUSTOMER AS CUSTOMERalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE CUSTOMERalias0.CREDIT_SCORE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the start station and end station for the trips with the three oldest id .<CODESPLIT>SELECT SUM( LOANalias0.AMOUNT ) FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID WHERE BANKalias0.STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the highest cost , lowest cost and average cost of procedures ?<CODESPLIT>SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average credit score of the customers who do not have any loan .<CODESPLIT>SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID NOT IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many assessment notes are there in total ?<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECT_OUTCOMESalias0.OUTCOME_CODE = "var0" INTERSECT SELECT PROJECTSalias1.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias1 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias1 ON PROJECT_OUTCOMESalias1.PROJECT_ID = PROJECTSalias1.PROJECT_ID WHERE PROJECT_OUTCOMESalias1.OUTCOME_CODE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates of the assessment notes ?<CODESPLIT>SELECT ASSESSMENT_NOTESalias0.DATE_OF_NOTES FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many addresses have zip code var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers whose credit score is below the average credit scores of all customers .<CODESPLIT>SELECT COUNT( DISTINCT BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE ) FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all distinct detention type codes .<CODESPLIT>SELECT COUNT( * ) FROM PATIENT AS PATIENTalias0 WHERE PATIENTalias0.SSN NOT IN ( SELECT PRESCRIBESalias0.PATIENT FROM PRESCRIBES AS PRESCRIBESalias0 JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the start and end dates for incidents with incident type code " var0 " ?<CODESPLIT>SELECT BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_END , BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_START FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 WHERE BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all detention summaries .<CODESPLIT>SELECT COUNT( UNIVERSITYalias0.* ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.SCHOOL_ID NOT IN ( SELECT BASKETBALL_MATCHalias0.SCHOOL_ID FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the cell phone number and email address for all students .<CODESPLIT>SELECT STUDENTSalias0.CELL_MOBILE_NUMBER , STUDENTSalias0.EMAIL_ADDRESS FROM STUDENTS AS STUDENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the email of the student with first name " var0 " and last name " var1 " ?<CODESPLIT>SELECT STUDENTSalias0.EMAIL_ADDRESS FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FIRST_NAME = "var0" AND STUDENTSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct students have been in detention ?<CODESPLIT>SELECT COUNT( DISTINCT DORMID ) FROM HAS_AMENITY AS HAS_AMENITYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the gender of the teacher with last name " var0 " ?<CODESPLIT>SELECT TEACHERSalias0.GENDER FROM TEACHERS AS TEACHERSalias0 WHERE TEACHERSalias0.LAST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the incident type description for the incident type with code " var0 " ?<CODESPLIT>SELECT INCIDENT_TYPE_DESCRIPTION FROM REF_INCIDENT_TYPE WHERE INCIDENT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the maximum and minimum monthly rental for all student addresses .<CODESPLIT>SELECT MAX( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) , MIN( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the writer of the movie " var0 "<CODESPLIT>SELECT TEACHERSalias0.FIRST_NAME FROM TEACHERS AS TEACHERSalias0 WHERE TEACHERSalias0.EMAIL_ADDRESS LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information about the assessment notes sorted by date in ascending order .<CODESPLIT>SELECT * FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 ORDER BY ASSESSMENT_NOTESalias0.DATE_OF_NOTES ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all cities of addresses in alphabetical order .<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ORDER BY ADDRESSESalias0.CITY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and last names of teachers in alphabetical order of last name .<CODESPLIT>SELECT TEACHERSalias0.FIRST_NAME , TEACHERSalias0.LAST_NAME FROM TEACHERS AS TEACHERSalias0 ORDER BY TEACHERSalias0.LAST_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all information about student addresses , and sort by monthly rental in descending order .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID JOIN WRITTEN_BY AS WRITTEN_BYalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE PRODUCERalias0.NAME = "var0" AND WRITERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and first name of the student that has the most number of assessment notes ?<CODESPLIT>SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids and first names of the var0 teachers that have the most number of assessment notes ?<CODESPLIT>SELECT ASSESSMENT_NOTESalias0.TEACHER_ID , TEACHERSalias0.FIRST_NAME FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = ASSESSMENT_NOTESalias0.TEACHER_ID GROUP BY ASSESSMENT_NOTESalias0.TEACHER_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of card types .<CODESPLIT>SELECT BEHAVIOR_INCIDENTalias0.STUDENT_ID , STUDENTSalias0.LAST_NAME FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = BEHAVIOR_INCIDENTalias0.STUDENT_ID GROUP BY BEHAVIOR_INCIDENTalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the date of enrollment of the course named " var0 " ?<CODESPLIT>SELECT DETENTIONalias0.TEACHER_ID , TEACHERSalias0.LAST_NAME FROM DETENTION AS DETENTIONalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = DETENTIONalias0.TEACHER_ID WHERE DETENTIONalias0.DETENTION_TYPE_CODE = "var0" GROUP BY DETENTIONalias0.TEACHER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and first name of the student whose addresses have the highest average monthly rental ?<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENT_ADDRESSESalias0.STUDENT_ID FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_ADDRESSESalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_ADDRESSESalias0.STUDENT_ID ORDER BY AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and city of the student address with the highest average monthly rental .<CODESPLIT>SELECT ADDRESSESalias0.CITY , STUDENT_ADDRESSESalias0.ADDRESS_ID FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY STUDENT_ADDRESSESalias0.ADDRESS_ID ORDER BY AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the code and description of the most frequent behavior incident type ?<CODESPLIT>SELECT BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE , DERIVED_TABLEalias0.INCIDENT_TYPE_DESCRIPTION FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN REF_INCIDENT_TYPE AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.INCIDENT_TYPE_CODE = BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE GROUP BY BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the code and description of the least frequent detention type ?<CODESPLIT>SELECT DERIVED_TABLEalias0.DETENTION_TYPE_DESCRIPTION , DETENTIONalias0.DETENTION_TYPE_CODE FROM DETENTION AS DETENTIONalias0 JOIN REF_DETENTION_TYPE AS DERIVED_TABLEalias0 ON DETENTIONalias0.DETENTION_TYPE_CODE = DERIVED_TABLEalias0.DETENTION_TYPE_CODE GROUP BY DETENTIONalias0.DETENTION_TYPE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names and last names of students with address in var0 state ?<CODESPLIT>SELECT ASSESSMENT_NOTESalias0.DATE_OF_NOTES FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = ASSESSMENT_NOTESalias0.STUDENT_ID WHERE STUDENTSalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the texts of assessment notes for teachers with last name " var0 " .<CODESPLIT>SELECT ASSESSMENT_NOTESalias0.TEXT_OF_NOTES FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = ASSESSMENT_NOTESalias0.TEACHER_ID WHERE TEACHERSalias0.LAST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the start and end dates of behavior incidents of students with last name " var0 " .<CODESPLIT>SELECT BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_END , BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_START FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = BEHAVIOR_INCIDENTalias0.STUDENT_ID WHERE STUDENTSalias0.LAST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the start and end dates of detentions of teachers with last name " var0 " .<CODESPLIT>SELECT DETENTIONalias0.DATETIME_DETENTION_END , DETENTIONalias0.DATETIME_DETENTION_START FROM DETENTION AS DETENTIONalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = DETENTIONalias0.TEACHER_ID WHERE TEACHERSalias0.LAST_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many people reviewed " var0 " in var1 ?<CODESPLIT>SELECT ADDRESSESalias0.ZIP_POSTCODE , STUDENT_ADDRESSESalias0.ADDRESS_ID FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ORDER BY STUDENT_ADDRESSESalias0.MONTHLY_RENTAL DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state traversed by the var0 river<CODESPLIT>SELECT STUDENTSalias0.CELL_MOBILE_NUMBER FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_ADDRESSESalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID ORDER BY STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the monthly rentals of student addresses in var0 state ?<CODESPLIT>SELECT STUDENT_ADDRESSESalias0.MONTHLY_RENTAL FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names and last names of students with address in var0 state ?<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the line 1 and average monthly rentals of all student addresses ?<CODESPLIT>SELECT ADDRESSESalias0.LINE_1 , AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY STUDENT_ADDRESSESalias0.ADDRESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the zip code of the address where the teacher with first name " var0 " lives ?<CODESPLIT>SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE TEACHERSalias0.FIRST_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the email addresses of teachers whose address has zip code " var0 " ?<CODESPLIT>SELECT DISTINCT ALLERGY FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students are not involved in any behavior incident ?<CODESPLIT>SELECT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = "var0" AND WINEalias0.PRICE < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of teachers who are not involved in any detention .<CODESPLIT>SELECT TEACHERSalias0.LAST_NAME FROM TEACHERS AS TEACHERSalias0 EXCEPT SELECT TEACHERSalias1.LAST_NAME FROM TEACHERS AS TEACHERSalias1 JOIN DETENTION AS DETENTIONalias0 ON TEACHERSalias1.TEACHER_ID = DETENTIONalias0.TEACHER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the line 1 of addresses shared by some students and some teachers ?<CODESPLIT>SELECT ADDRESSESalias0.LINE_1 FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID INTERSECT SELECT ADDRESSESalias1.LINE_1 FROM ADDRESSES AS ADDRESSESalias1 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which assets have var0 parts and have less than var0 fault logs ? List the asset id and detail .<CODESPLIT>SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_ID FROM ASSETS AS ASSETSalias0 JOIN ASSET_PARTS AS ASSET_PARTSalias0 ON ASSET_PARTSalias0.ASSET_ID = ASSETSalias0.ASSET_ID GROUP BY ASSETSalias0.ASSET_ID HAVING COUNT( * ) = var0 INTERSECT SELECT ASSETSalias1.ASSET_DETAILS , ASSETSalias1.ASSET_ID FROM ASSETS AS ASSETSalias1 JOIN FAULT_LOG AS FAULT_LOGalias0 ON FAULT_LOGalias0.ASSET_ID = ASSETSalias1.ASSET_ID GROUP BY ASSETSalias1.ASSET_ID HAVING COUNT( * ) < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names of all the students ?<CODESPLIT>SELECT COUNT( * ) , MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_ID FROM MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 JOIN ASSETS AS ASSETSalias0 ON MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_ID = ASSETSalias0.MAINTENANCE_CONTRACT_ID GROUP BY MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many assets does each third party company supply ? List the count and the company id .<CODESPLIT>SELECT COUNT( * ) , THIRD_PARTY_COMPANIESalias0.COMPANY_ID FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN ASSETS AS ASSETSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = ASSETSalias0.SUPPLIER_COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias0.COMPANY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which third party companies have at least var0 maintenance engineers or have at least var0 maintenance contracts ? List the company id and name .<CODESPLIT>SELECT THIRD_PARTY_COMPANIESalias0.COMPANY_ID , THIRD_PARTY_COMPANIESalias0.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = MAINTENANCE_ENGINEERSalias0.COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias0.COMPANY_ID HAVING COUNT( * ) >= var0 UNION SELECT THIRD_PARTY_COMPANIESalias1.COMPANY_ID , THIRD_PARTY_COMPANIESalias1.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias1 JOIN MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 ON THIRD_PARTY_COMPANIESalias1.COMPANY_ID = MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias1.COMPANY_ID HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers ?<CODESPLIT>SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID NOT IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which engineer has visited the most times ? Show the engineer id , first name and last name .<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = "var0" AND MOVIEalias0.TITLE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which parts have more than var0 faults ? Show the part name and id .<CODESPLIT>SELECT PARTSalias0.PART_ID , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN PART_FAULTS AS PART_FAULTSalias0 ON PART_FAULTSalias0.PART_ID = PARTSalias0.PART_ID GROUP BY PARTSalias0.PART_ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all every engineer's first name , last name , details and coresponding skill description .<CODESPLIT>SELECT MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME , MAINTENANCE_ENGINEERSalias0.OTHER_DETAILS , SKILLSalias0.SKILL_DESCRIPTION FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 JOIN ENGINEER_SKILLS AS ENGINEER_SKILLSalias0 ON MAINTENANCE_ENGINEERSalias0.ENGINEER_ID = ENGINEER_SKILLSalias0.ENGINEER_ID JOIN SKILLS AS SKILLSalias0 ON SKILLSalias0.SKILL_ID = ENGINEER_SKILLSalias0.SKILL_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For all the faults of different parts , what are all the decriptions of the skills required to fix them ? List the name of the faults and the skill description .<CODESPLIT>SELECT PART_FAULTSalias0.FAULT_SHORT_NAME , SKILLSalias0.SKILL_DESCRIPTION FROM PART_FAULTS AS PART_FAULTSalias0 JOIN SKILLS_REQUIRED_TO_FIX AS SKILLS_REQUIRED_TO_FIXalias0 ON SKILLS_REQUIRED_TO_FIXalias0.PART_FAULT_ID = PART_FAULTSalias0.PART_FAULT_ID JOIN SKILLS AS SKILLSalias0 ON SKILLSalias0.SKILL_ID = SKILLS_REQUIRED_TO_FIXalias0.SKILL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different addresses do the students currently live ?<CODESPLIT>SELECT COUNT( * ) , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN ASSET_PARTS AS ASSET_PARTSalias0 ON PARTSalias0.PART_ID = ASSET_PARTSalias0.PART_ID GROUP BY PARTSalias0.PART_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the fault descriptions and the fault status of all the faults recoreded in the logs ?<CODESPLIT>SELECT PUBLICATIONalias0.PRICE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.PUBLISHER = "var0" OR PUBLICATIONalias0.PUBLISHER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many engineer visits are required at most for a single fault log ? List the number and the log entry id .<CODESPLIT>SELECT COUNT( * ) , FAULT_LOGalias0.FAULT_LOG_ENTRY_ID FROM FAULT_LOG AS FAULT_LOGalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON FAULT_LOGalias0.FAULT_LOG_ENTRY_ID = ENGINEER_VISITSalias0.FAULT_LOG_ENTRY_ID GROUP BY FAULT_LOGalias0.FAULT_LOG_ENTRY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the distinct last names of all the engineers ?<CODESPLIT>SELECT DISTINCT MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many fault status codes are recorded in the fault log parts table ?<CODESPLIT>SELECT DISTINCT FAULT_LOG_PARTSalias0.FAULT_STATUS FROM FAULT_LOG_PARTS AS FAULT_LOG_PARTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which engineers have never visited to maintain the assets ? List the engineer first name and last name .<CODESPLIT>SELECT MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 WHERE MAINTENANCE_ENGINEERSalias0.ENGINEER_ID NOT IN ( SELECT ENGINEER_VISITSalias0.ENGINEER_ID FROM ENGINEER_VISITS AS ENGINEER_VISITSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the asset id , details , make and model for every asset .<CODESPLIT>SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_ID , ASSETSalias0.ASSET_MAKE , ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the life spans of representatives from var0 state or var1 state ?<CODESPLIT>SELECT ASSETSalias0.ASSET_ACQUIRED_DATE FROM ASSETS AS ASSETSalias0 ORDER BY ASSETSalias0.ASSET_ACQUIRED_DATE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which part fault requires the most number of skills to fix ? List part id and name .<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.DIRECTOR ) FROM MOVIE AS MOVIEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which kind of part has the least number of faults ? List the part name .<CODESPLIT>SELECT COUNT( * ) , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Among those engineers who have visited , which engineer makes the least number of visits ? List the engineer id , first name and last name .<CODESPLIT>SELECT MAINTENANCE_ENGINEERSalias0.ENGINEER_ID , MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON MAINTENANCE_ENGINEERSalias0.ENGINEER_ID = ENGINEER_VISITSalias0.ENGINEER_ID GROUP BY MAINTENANCE_ENGINEERSalias0.ENGINEER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which staff have contacted which engineers ? List the staff name and the engineer first name and last name .<CODESPLIT>SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which fault log included the most number of faulty parts ? List the fault log id , description and record time .<CODESPLIT>SELECT FAULT_LOGalias0.FAULT_DESCRIPTION , FAULT_LOGalias0.FAULT_LOG_ENTRY_DATETIME , FAULT_LOGalias0.FAULT_LOG_ENTRY_ID FROM FAULT_LOG AS FAULT_LOGalias0 JOIN FAULT_LOG_PARTS AS FAULT_LOG_PARTSalias0 ON FAULT_LOGalias0.FAULT_LOG_ENTRY_ID = FAULT_LOG_PARTSalias0.FAULT_LOG_ENTRY_ID GROUP BY FAULT_LOGalias0.FAULT_LOG_ENTRY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which skill is used in fixing the most number of faults ? List the skill id and description .<CODESPLIT>SELECT MAX( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the distinct asset models ?<CODESPLIT>SELECT DISTINCT ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the all the assets make , model , details by the disposed date ascendingly .<CODESPLIT>SELECT COUNT( DISTINCT PLAYERSalias0.COUNTRY_CODE ) FROM PLAYERS AS PLAYERSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which part has the least chargeable amount ? List the part id and amount .<CODESPLIT>SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which company started the earliest the maintenance contract ? Show the company name .<CODESPLIT>SELECT THIRD_PARTY_COMPANIESalias0.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_COMPANY_ID ORDER BY MAINTENANCE_CONTRACTSalias0.CONTRACT_START_DATE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the type of the company who concluded its contracts most recently ?<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which gender makes up the majority of the staff ?<CODESPLIT>SELECT STAFFalias0.GENDER FROM STAFF AS STAFFalias0 GROUP BY GENDER ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many engineers did each staff contact ? List both the contact staff name and number of engineers contacted .<CODESPLIT>SELECT COUNT( * ) , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON STAFFalias0.STAFF_ID = ENGINEER_VISITSalias0.CONTACT_STAFF_ID GROUP BY STAFFalias0.STAFF_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct positions of matches .<CODESPLIT>SELECT ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 WHERE ASSETSalias0.ASSET_ID NOT IN ( SELECT FAULT_LOGalias0.ASSET_ID FROM FAULT_LOG AS FAULT_LOGalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the local authorities and services provided by all stations .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show all train numbers and names ordered by their time from early to late .<CODESPLIT>SELECT TRAINalias0.NAME , TRAINalias0.TRAIN_NUMBER FROM TRAIN AS TRAINalias0 ORDER BY TRAINalias0.TIME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the times and numbers of all trains that go to var0 , ordered by time .<CODESPLIT>SELECT TRAINalias0.TIME , TRAINalias0.TRAIN_NUMBER FROM TRAIN AS TRAINalias0 WHERE DESTINATION = "var0" ORDER BY TRAINalias0.TIME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many trains have ' var0 ' in their names ?<CODESPLIT>SELECT COUNT( * ) FROM TRAIN AS TRAINalias0 WHERE TRAINalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number and time of the train that goes from var0 to var1 .<CODESPLIT>SELECT TRAINalias0.TIME , TRAINalias0.TRAIN_NUMBER FROM TRAIN AS TRAINalias0 WHERE TRAINalias0.DESTINATION = "var1" AND TRAINalias0.ORIGIN = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of trains starting from each origin .<CODESPLIT>SELECT COUNT( * ) , TRAINalias0.ORIGIN FROM TRAIN AS TRAINalias0 GROUP BY TRAINalias0.ORIGIN ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the train whose route runs through greatest number of stations .<CODESPLIT>SELECT TRAINalias0.NAME FROM TRAIN AS TRAINalias0 JOIN ROUTE AS ROUTEalias0 ON TRAINalias0.ID = ROUTEalias0.TRAIN_ID GROUP BY ROUTEalias0.TRAIN_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of trains for each station , as well as the station network name and services .<CODESPLIT>SELECT COUNT( * ) , STATIONalias0.NETWORK_NAME , STATIONalias0.SERVICES FROM STATION AS STATIONalias0 JOIN ROUTE AS ROUTEalias0 ON STATIONalias0.ID = ROUTEalias0.STATION_ID GROUP BY ROUTEalias0.STATION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average high temperature for each day of week ?<CODESPLIT>SELECT AVG( WEEKLY_WEATHERalias0.HIGH_TEMPERATURE ) , WEEKLY_WEATHERalias0.DAY_OF_WEEK FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 GROUP BY WEEKLY_WEATHERalias0.DAY_OF_WEEK ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the maximum low temperature and average precipitation at the var0 station .<CODESPLIT>SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names and times of trains that run through stations for the local authority var0 .<CODESPLIT>SELECT TRAINalias0.NAME , TRAINalias0.TIME FROM STATION AS STATIONalias0 JOIN ROUTE AS ROUTEalias0 ON STATIONalias0.ID = ROUTEalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.ID = ROUTEalias0.TRAIN_ID WHERE STATIONalias0.LOCAL_AUTHORITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the students who are in the position of var1 and got a var0 tryout decision .<CODESPLIT>SELECT COUNT( DISTINCT STATIONalias0.SERVICES ) FROM STATION AS STATIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and local authority of the station with has the highest average high temperature .<CODESPLIT>SELECT NAME FROM HIGHSCHOOLER EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and local authority of the station whose maximum precipitation is higher than var0 .<CODESPLIT>SELECT STATIONalias0.ID , STATIONalias0.LOCAL_AUTHORITY FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 JOIN STATION AS STATIONalias0 ON WEEKLY_WEATHERalias0.STATION_ID = STATIONalias0.ID GROUP BY WEEKLY_WEATHERalias0.STATION_ID HAVING MAX( WEEKLY_WEATHERalias0.PRECIPITATION ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the winner who has the highest rank points and participated in the var0 tourney .<CODESPLIT>SELECT MAX( WEEKLY_WEATHERalias0.WIND_SPEED_MPH ) , MIN( WEEKLY_WEATHERalias0.LOW_TEMPERATURE ) FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the origins from which more than var0 train starts .<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of professors in accounting department .<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professors are teaching class with code var0 ?<CODESPLIT>SELECT COUNT( DISTINCT PROF_NUM ) FROM CLASS AS CLASSalias0 WHERE CRS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first and last name of the professor in biology department ?<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , EMPLOYEEalias0.EMP_LNAME FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM WHERE DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names and date of birth of professors teaching course var0 ?<CODESPLIT>SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 WHERE CONCERTalias0.YEAR = var0 OR CONCERTalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have email that contains " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE EMPLOYEEalias0.EMP_LNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the code of the school where the accounting department belongs to ?<CODESPLIT>SELECT DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many credits does course var0 have , and what its description ?<CODESPLIT>SELECT CRS_CREDIT , CRS_DESCRIPTION FROM COURSE AS COURSEalias0 WHERE CRS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the address of history department ?<CODESPLIT>SELECT DEPT_ADDRESS FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different locations does the school with code var0 has ?<CODESPLIT>SELECT COUNT( DISTINCT DEPT_ADDRESS ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.SCHOOL_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different locations does each school have ?<CODESPLIT>SELECT AVG( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of departments in each school .<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of different departments in each school whose number of different departments is less than var0 .<CODESPLIT>SELECT CHIP_MODELalias0.MODEL_NAME , CHIP_MODELalias0.RAM_MIB FROM CHIP_MODEL AS CHIP_MODELalias0 ORDER BY CHIP_MODELalias0.RAM_MIB ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the writer of the movie " var0 "<CODESPLIT>SELECT COUNT( * ) , CRS_CODE FROM CLASS AS CLASSalias0 GROUP BY CRS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total credit does each department offer ?<CODESPLIT>SELECT PEOPLEalias0.WEIGHT FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of classes offered for all class rooms that held at least var0 classes .<CODESPLIT>SELECT CLASSalias0.CLASS_ROOM , COUNT( * ) FROM CLASS AS CLASSalias0 GROUP BY CLASSalias0.CLASS_ROOM HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of classes in each department .<CODESPLIT>SELECT COUNT( * ) , DEPT_CODE FROM CLASS AS CLASSalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of classes in each school .<CODESPLIT>SELECT COUNT( * ) , DEPARTMENTalias0.SCHOOL_CODE FROM CLASS AS CLASSalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of professors for different school ?<CODESPLIT>SELECT COUNT( * ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the count and code of the job has most employees .<CODESPLIT>SELECT COUNT( * ) , EMP_JOBCODE FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMP_JOBCODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which school has the smallest amount of professors ?<CODESPLIT>SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE UNIVERSITYalias0.ENROLLMENT < ( SELECT AVG( UNIVERSITYalias1.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List names of all teams in the basketball competition , ordered by all home scores in descending order .<CODESPLIT>SELECT COUNT( * ) , DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = "var0" GROUP BY DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students for each department .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , DEPT_CODE FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of hours have done for all students in each department .<CODESPLIT>SELECT DEPT_CODE , SUM( STU_HRS ) FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the max , average , and minimum gpa of all students in each department .<CODESPLIT>SELECT AVG( STU_GPA ) , DEPT_CODE , MAX( STU_GPA ) , MIN( STU_GPA ) FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and the average gpa of department whose students have the highest average gpa ?<CODESPLIT>SELECT AVG( STUDENTalias0.STU_GPA ) , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY AVG( STUDENTalias0.STU_GPA ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many schools exist in total ?<CODESPLIT>SELECT COUNT( CITYalias0.* ) FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.POPULATION > var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different classes are there ?<CODESPLIT>SELECT COUNT( DISTINCT CLASSalias0.CLASS_CODE ) FROM CLASS AS CLASSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses are offered ?<CODESPLIT>SELECT COUNT( DISTINCT CRS_CODE ) FROM CLASS AS CLASSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many departments does the college has ?<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses are offered by the Computer Info . Systems department ?<CODESPLIT>SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 JOIN COURSE AS COURSEalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many sections does course var0 has ?<CODESPLIT>SELECT COUNT( DISTINCT CLASSalias0.CLASS_SECTION ) FROM CLASS AS CLASSalias0 WHERE CRS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total credits of all classes offered by each department .<CODESPLIT>SELECT COURSEalias0.DEPT_CODE , SUM( COURSEalias0.CRS_CREDIT ) FROM COURSE AS COURSEalias0 JOIN CLASS AS CLASSalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY COURSEalias0.DEPT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department that offers the largest number of credits of all classes .<CODESPLIT>SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students enrolled in class var0 ?<CODESPLIT>SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name of each student enrolled in class var0 ?<CODESPLIT>SELECT COUNT( DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name of students enrolled in class var0 and got grade var1 ?<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = "var0" ORDER BY COUNTRYLANGUAGEalias0.PERCENTAGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professors do have a Ph.D . degree ?<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of ships whose nationality is either var0 or var1 .<CODESPLIT>SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the department that has the largest number of students enrolled ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list names of all departments ordered by their names .<CODESPLIT>SELECT DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airlines are from var0 ?<CODESPLIT>SELECT CLASSalias0.CLASS_CODE FROM CLASS AS CLASSalias0 WHERE CLASSalias0.CLASS_ROOM = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first name of all employees with job code var0 ordered by their date of birth .<CODESPLIT>SELECT EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMP_JOBCODE = "var0" ORDER BY EMP_DOB ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and offices of all professors sorted by alphabetical order of their first name .<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ORDER BY EMPLOYEEalias0.EMP_FNAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the top var1 wineries with the greatest number of wines made of white color grapes .<CODESPLIT>SELECT EMP_FNAME , EMP_LNAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMP_DOB LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first , last name , gpa of the youngest one among students whose GPA is above var0 ?<CODESPLIT>SELECT STU_FNAME , STU_GPA , STU_LNAME FROM STUDENT AS STUDENTalias0 WHERE STU_GPA > var0 ORDER BY STU_DOB DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name of students who got grade var0 in any class ?<CODESPLIT>SELECT DISTINCT STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.ENROLL_GRADE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year ?<CODESPLIT>SELECT DEPARTMENTalias0.DEPT_NAME FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY PROFESSORalias0.DEPT_CODE ORDER BY COUNT( * ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of department where has the largest number of professors with a Ph.D . degree ?<CODESPLIT>SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE PROFESSORalias0.PROF_HIGH_DEGREE = "var0" GROUP BY PROFESSORalias0.DEPT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers written by " H . V . Jagadish " and " var1 " .<CODESPLIT>SELECT EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMP_JOBCODE = "var0" EXCEPT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias1.EMP_NUM = CLASSalias0.PROF_NUM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>recent var0 papers<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" EXCEPT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias1.EMP_NUM = CLASSalias0.PROF_NUM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of the members of the club " var0 " .<CODESPLIT>SELECT EMPLOYEEalias0.EMP_LNAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is department name and office for the professor whose last name is var0 ?<CODESPLIT>SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE EMPLOYEEalias0.EMP_LNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name and hire date of the professor who is in office var0 .<CODESPLIT>SELECT EMPLOYEEalias0.EMP_HIREDATE , EMPLOYEEalias0.EMP_LNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM WHERE PROFESSORalias0.PROF_OFFICE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the code of the course which the student whose last name is var0 took ?<CODESPLIT>SELECT CLASSalias0.CRS_CODE FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE STUDENTalias0.STU_LNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average , minimum , and maximum age for different majors .<CODESPLIT>SELECT COURSEalias0.CRS_CREDIT , COURSEalias0.CRS_DESCRIPTION FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE WHERE STUDENTalias0.STU_LNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professors who has a either Ph.D . or var1 degree ?<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = "var0" OR PROF_HIGH_DEGREE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all documents with budget types described as ' var0 ' .<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" OR DEPARTMENTalias0.DEPT_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of the professor who is teaching two courses with code var0 and var1 .<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE CRS_CODE = "var0" INTERSECT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias1 ON EMPLOYEEalias1.EMP_NUM = CLASSalias1.PROF_NUM WHERE CRS_CODE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of student who is taking classes from accounting and Computer Info . Systems departments<CODESPLIT>SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" INTERSECT SELECT STUDENTalias1.STU_FNAME FROM STUDENT AS STUDENTalias1 JOIN ENROLL AS ENROLLalias1 ON STUDENTalias1.STU_NUM = ENROLLalias1.STU_NUM JOIN CLASS AS CLASSalias1 ON ENROLLalias1.CLASS_CODE = CLASSalias1.CLASS_CODE JOIN COURSE AS COURSEalias1 ON COURSEalias1.CRS_CODE = CLASSalias1.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias1 ON DEPARTMENTalias1.DEPT_CODE = COURSEalias1.DEPT_CODE WHERE DEPARTMENTalias1.DEPT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average gpa of the students enrolled in the course with code var0 ?<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name , gpa and phone number of the top var0 students with highest gpa ?<CODESPLIT>SELECT STU_FNAME , STU_GPA , STU_PHONE FROM STUDENT AS STUDENTalias0 ORDER BY STU_GPA DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the department name of the students with lowest gpa belongs to ?<CODESPLIT>SELECT DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE ORDER BY STU_GPA LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and gpa of the students whose gpa is lower than the average gpa of all students .<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = "var0" ORDER BY STUDENTalias0.TOT_CRED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and address of the department that has the highest number of students .<CODESPLIT>SELECT DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , address , number of students in the departments that have the top var0 highest number of students .<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and office of the professor who is in the history department and has a Ph.D . degree .<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" AND PROFESSORalias0.PROF_HIGH_DEGREE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids of all students who do not have any friends .<CODESPLIT>SELECT CLASSalias0.CRS_CODE , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of all instructors who have taught some course and the course description .<CODESPLIT>SELECT COURSEalias0.CRS_DESCRIPTION , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and offices of all instructors who have taught some course and also find the course description .<CODESPLIT>SELECT COURSEalias0.CRS_DESCRIPTION , EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and offices of all instructors who have taught some course and the course description and the department name .<CODESPLIT>SELECT COURSEalias0.CRS_DESCRIPTION , DEPARTMENTalias0.DEPT_NAME , EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names of all students who took some course and the course description .<CODESPLIT>SELECT COURSEalias0.CRS_DESCRIPTION , STUDENTalias0.STU_FNAME , STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names of all students who took some course and got var1 or var0 .<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.FEATURE_ID = FEATURESalias0.FEATURE_ID WHERE FEATURESalias0.FEATURE_DETAILS = "var0" UNION SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.FEATURE_ID = FEATURESalias1.FEATURE_ID WHERE FEATURESalias1.FEATURE_DETAILS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers in var0 after var2 in " var1 " .<CODESPLIT>SELECT CLASSalias0.CLASS_ROOM , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and degree of all professors who are teaching some class in Computer Info . Systems department .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = "var0" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the student who got a grade var0 in the class with code var1 .<CODESPLIT>SELECT STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.CLASS_CODE = var1 AND ENROLLalias0.ENROLL_GRADE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and office of history professor who did not get a Ph.D . degree .<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" AND PROFESSORalias0.PROF_HIGH_DEGREE != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the full name (first and last name) and salary for all employees who does not have any value for commission ?<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM GROUP BY CLASSalias0.PROF_NUM HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of students who took exactly one class .<CODESPLIT>SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM GROUP BY ENROLLalias0.STU_NUM HAVING COUNT( STUDENTalias0.* ) = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of department that offers the class whose description has the word " var0 " .<CODESPLIT>SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE FROM COMPLAINTS AS COMPLAINTSalias0 GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE HAVING COUNT( COMPLAINTSalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name of the student whose last name starting with the letter S and is taking var0 class ?<CODESPLIT>SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = "var0" AND STUDENTalias0.STU_LNAME LIKE "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many clubs are there ?<CODESPLIT>SELECT COUNT( * ) FROM CLUB AS CLUBalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct region of clubs in ascending alphabetical order .<CODESPLIT>SELECT DISTINCT CLUBalias0.REGION FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.REGION ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of gold medals for clubs ?<CODESPLIT>SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID JOIN AUTHOR AS AUTHORalias2 ON WRITESalias2.AID = AUTHORalias2.AID WHERE AUTHORalias1.NAME = "var0" AND AUTHORalias2.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all document ids with at least two paragraphs .<CODESPLIT>SELECT COMPETITIONalias0.COMPETITION_TYPE , COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department that offers the largest number of credits of all classes .<CODESPLIT>SELECT DISTINCT COMPETITIONalias0.YEAR FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITIONalias0.COMPETITION_TYPE != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum number of silver medals for clubs .<CODESPLIT>SELECT MAX( CLUB_RANKalias0.SILVER ) , MIN( CLUB_RANKalias0.SILVER ) FROM CLUB_RANK AS CLUB_RANKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many clubs have total medals less than var0 ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" AND PUBLICATIONalias0.CITATION_NUM > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all club names in ascending order of start year .<CODESPLIT>SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.START_YEAR ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all club names in descending alphabetical order .<CODESPLIT>SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.NAME DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the names and the players of clubs .<CODESPLIT>SELECT CLUBalias0.NAME , PLAYERalias0.PLAYER_ID FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many types of products have var0 bought in total ?<CODESPLIT>SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID WHERE PLAYERalias0.POSITION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average points of players from club with name " var0 " .<CODESPLIT>SELECT AVG( PLAYERalias0.POINTS ) FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID WHERE CLUBalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of customers cross all banks .<CODESPLIT>SELECT AVG( PLAYERalias0.POINTS ) , PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.POSITION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper by " H . V . Jagadish " with more than var1 citations .<CODESPLIT>SELECT PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.NAME HAVING AVG( PLAYERalias0.POINTS ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and descriptions of the photos taken at the tourist attraction " var0 " ?<CODESPLIT>SELECT COMPETITIONalias0.COMPETITION_TYPE , COUNT( * ) FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of audience for festivals ?<CODESPLIT>SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITION_TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the types of competition that have at most five competitions of that type .<CODESPLIT>SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE HAVING COUNT( * ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of clubs that do not have any players .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of festivals held in year var0 ?<CODESPLIT>SELECT PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.POINTS > var0 INTERSECT SELECT PLAYERalias1.POSITION FROM PLAYER AS PLAYERalias1 WHERE PLAYERalias1.POINTS < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show total points of all players .<CODESPLIT>SELECT SUM( PLAYERalias0.POINTS ) FROM PLAYER AS PLAYERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many different positions are there ?<CODESPLIT>SELECT STUDENTalias0.STUID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.RANK = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the name of players who get more than the average points .<CODESPLIT>SELECT PLAYERalias0.NAME FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.POINTS > ( SELECT AVG( PLAYERalias1.POINTS ) FROM PLAYER AS PLAYERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the wineries that have at least four wines .<CODESPLIT>SELECT COUNT( * ) , PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 WHERE POINTS < var0 GROUP BY PLAYERalias0.POSITION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which country did participated in the most number of var0 competitions ?<CODESPLIT>SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITION_TYPE = "var0" GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the official names of the cities that have hosted more than one competition .<CODESPLIT>SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITIONalias0.COMPETITION_TYPE = "var0" INTERSECT SELECT COMPETITIONalias1.COUNTRY FROM COMPETITION AS COMPETITIONalias1 WHERE COMPETITIONalias1.COMPETITION_TYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the maximum and minimum population among all counties .<CODESPLIT>SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 EXCEPT SELECT COMPETITIONalias1.COUNTRY FROM COMPETITION AS COMPETITIONalias1 WHERE COMPETITIONalias1.COMPETITION_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many furniture components are there in total ?<CODESPLIT>SELECT SUM( FURNITUREalias0.NUM_OF_COMPONENT ) FROM FURNITURE AS FURNITUREalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name and id of the furniture with the highest market rate .<CODESPLIT>SELECT FURNITUREalias0.FURNITURE_ID , FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 ORDER BY FURNITUREalias0.MARKET_RATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total market rate of the furnitures that have the top var0 market shares .<CODESPLIT>SELECT SUM( FURNITUREalias0.MARKET_RATE ) FROM FURNITURE AS FURNITUREalias0 ORDER BY FURNITUREalias0.MARKET_RATE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the component amounts and names of all furnitures that have more than var0 components .<CODESPLIT>SELECT FURNITUREalias0.NAME , FURNITUREalias0.NUM_OF_COMPONENT FROM FURNITURE AS FURNITUREalias0 WHERE FURNITUREalias0.NUM_OF_COMPONENT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and component amount of the least popular furniture .<CODESPLIT>SELECT FURNITUREalias0.NAME , FURNITUREalias0.NUM_OF_COMPONENT FROM FURNITURE AS FURNITUREalias0 ORDER BY FURNITUREalias0.MARKET_RATE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of poker players ordered by the final tables made in ascending order .<CODESPLIT>SELECT FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON FURNITUREalias0.FURNITURE_ID = FURNITURE_MANUFACTEalias0.FURNITURE_ID WHERE FURNITURE_MANUFACTEalias0.PRICE_IN_DOLLAR < ( SELECT MAX( FURNITURE_MANUFACTEalias1.PRICE_IN_DOLLAR ) FROM FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which manufacturer has the most number of shops ? List its name and year of opening .<CODESPLIT>SELECT CUSTOMERSalias0.DATE_OF_BIRTH , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of factories for the manufacturers that have more than var0 shops .<CODESPLIT>SELECT AVG( MANUFACTURERalias0.NUM_OF_FACTORIES ) FROM MANUFACTURER AS MANUFACTURERalias0 WHERE MANUFACTURERalias0.NUM_OF_SHOPS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all manufacturer names and ids ordered by their opening year .<CODESPLIT>SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the name and year of opening of the manufacturers that have either less than var0 factories or more than var0 shops .<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.AREA = ( SELECT MAX( STATEalias2.AREA ) FROM STATE AS STATEalias2 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the average number of factories and maximum number of shops for manufacturers that opened before var0 .<CODESPLIT>SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE SEX = "var0" GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the subject ID , name of subject and the corresponding number of courses for each subject , and sort by the course count in ascending order .<CODESPLIT>SELECT MANUFACTURERalias0.MANUFACTURER_ID , MANUFACTURERalias0.NUM_OF_SHOPS FROM MANUFACTURER AS MANUFACTURERalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON MANUFACTURERalias0.MANUFACTURER_ID = FURNITURE_MANUFACTEalias0.MANUFACTURER_ID ORDER BY FURNITURE_MANUFACTEalias0.PRICE_IN_DOLLAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of funiture types produced by each manufacturer as well as the company names .<CODESPLIT>SELECT COUNT( FURNITURE_MANUFACTEalias0.* ) , MANUFACTURERalias0.NAME FROM MANUFACTURER AS MANUFACTURERalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON MANUFACTURERalias0.MANUFACTURER_ID = FURNITURE_MANUFACTEalias0.MANUFACTURER_ID GROUP BY MANUFACTURERalias0.MANUFACTURER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the names and prices of furnitures which some companies are manufacturing .<CODESPLIT>SELECT FURNITURE_MANUFACTEalias0.PRICE_IN_DOLLAR , FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON FURNITUREalias0.FURNITURE_ID = FURNITURE_MANUFACTEalias0.FURNITURE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the market shares and names of furnitures which no any company is producing in our records .<CODESPLIT>SELECT FURNITUREalias0.MARKET_RATE , FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 WHERE FURNITUREalias0.FURNITURE_ID NOT IN ( SELECT FURNITURE_MANUFACTEalias0.FURNITURE_ID FROM FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the company that produces both furnitures with less than var0 components and furnitures with more than var1 components .<CODESPLIT>SELECT MANUFACTURERalias0.NAME FROM FURNITURE AS FURNITUREalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON FURNITUREalias0.FURNITURE_ID = FURNITURE_MANUFACTEalias0.FURNITURE_ID JOIN MANUFACTURER AS MANUFACTURERalias0 ON MANUFACTURERalias0.MANUFACTURER_ID = FURNITURE_MANUFACTEalias0.MANUFACTURER_ID WHERE FURNITUREalias0.NUM_OF_COMPONENT < var0 INTERSECT SELECT MANUFACTURERalias1.NAME FROM FURNITURE AS FURNITUREalias1 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias1 ON FURNITUREalias1.FURNITURE_ID = FURNITURE_MANUFACTEalias1.FURNITURE_ID JOIN MANUFACTURER AS MANUFACTURERalias1 ON MANUFACTURERalias1.MANUFACTURER_ID = FURNITURE_MANUFACTEalias1.MANUFACTURER_ID WHERE FURNITUREalias1.NUM_OF_COMPONENT > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 area with more than var1 citations .<CODESPLIT>SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , EMPLOYEESalias0.FIRST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the full name (first and last name) , and salary for those employees who earn below var0 .<CODESPLIT>SELECT REPRESENTATIVEalias0.NAME , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Display the first name , and department number for all employees whose last name is " var0 " .<CODESPLIT>SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.LAST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all the information for all employees without any department number .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Display all the information about the department var0 .<CODESPLIT>SELECT * FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>when is the hire date for those employees whose first name does not containing the letter var0 ?<CODESPLIT>SELECT EMPLOYEESalias0.HIRE_DATE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME NOT LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the unit of measurement and product category code of product named " var0 " .<CODESPLIT>SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME NOT LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the full name (first and last) , hire date , salary , and department number for those employees whose first name does not containing the letter var0 and make the result set in ascending order by department number .<CODESPLIT>SELECT PILOTalias0.POSITION , PILOTalias0.TEAM FROM PILOT AS PILOTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the phone number of employees whose salary is in the range of var0 and var1 ?<CODESPLIT>SELECT EMPLOYEESalias0.PHONE_NUMBER FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display all the information of employees whose salary is in the range of var0 and var1 and commission is not var2 or department number does not equal to var3 .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN var0 AND var1 AND EMPLOYEESalias0.COMMISSION_PCT != "var2" OR EMPLOYEESalias0.DEPARTMENT_ID != var3 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the companies of entrepreneurs in descending order of money requested .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COMMISSION_PCT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airlines are there ?<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var10 in var0 with more than var1 citations .<CODESPLIT>SELECT EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE BETWEEN "var0" AND "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first and last name for those employees who works either in department var0 or var1 ?<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = var0 OR EMPLOYEESalias0.DEPARTMENT_ID = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the salary and manager number for those employees who is working under a manager .<CODESPLIT>SELECT ACTORalias0.CHARACTER , ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the names of programs , ordering by launch time .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE < "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of tracks belongs to genre var0 and whose media type is var1 .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE FIRST_NAME LIKE "var0" OR FIRST_NAME LIKE "var1" ORDER BY EMPLOYEESalias0.SALARY DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display those employees who joined after 7th September , 1987 .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE > "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the job title of jobs which minimum salary is greater than var0 .<CODESPLIT>SELECT JOBSalias0.JOB_TITLE FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MIN_SALARY > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display job Title , the difference between minimum and maximum salaries for those jobs which max salary within the range var0 to var1 .<CODESPLIT>SELECT JOBSalias0.JOB_TITLE , JOBSalias0.MAX_SALARY - JOBSalias0.MIN_SALARY FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MAX_SALARY BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the emails of the employees who have no commission percentage and salary within the range var1 to var2 and works in that department which number is var3 .<CODESPLIT>SELECT EMPLOYEESalias0.EMAIL FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COMMISSION_PCT = "var0" AND EMPLOYEESalias0.DEPARTMENT_ID = var3 AND EMPLOYEESalias0.SALARY BETWEEN var1 AND var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee ID for each employee and the date on which he ended his previous job .<CODESPLIT>SELECT JOB_HISTORYalias0.EMPLOYEE_ID , MAX( JOB_HISTORYalias0.END_DATE ) FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document type code for document type " var0 " ?<CODESPLIT>SELECT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID HAVING COUNT( EMPLOYEESalias0.COMMISSION_PCT ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of the departments where any manager is managing var0 or more employees .<CODESPLIT>SELECT DISTINCT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.MANAGER_ID HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the average salary of employees for each department who gets a commission percentage .<CODESPLIT>SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY > var0 INTERSECT SELECT STADIUMalias1.COUNTRY FROM STADIUM AS STADIUMalias1 WHERE STADIUMalias1.CAPACITY < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the country ID and number of cities for each country .<CODESPLIT>SELECT COUNT( LOCATIONSalias0.* ) , LOCATIONSalias0.COUNTRY_ID FROM LOCATIONS AS LOCATIONSalias0 GROUP BY LOCATIONSalias0.COUNTRY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display job ID for those jobs that were done by two or more for more than var0 days .<CODESPLIT>SELECT JOB_HISTORYalias0.JOB_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 WHERE END_DATE - START_DATE > var0 GROUP BY JOB_HISTORYalias0.JOB_ID HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the shipping agent names ?<CODESPLIT>SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find employee with ID and name of the country presently where (s)he is working .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the department name and number of employees in each of the department .<CODESPLIT>SELECT COUNT( * ) , DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID GROUP BY DEPARTMENTSalias0.DEPARTMENT_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above var0 ?<CODESPLIT>SELECT * FROM JOB_HISTORY AS JOB_HISTORYalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON JOB_HISTORYalias0.EMPLOYEE_ID = EMPLOYEESalias0.EMPLOYEE_ID WHERE EMPLOYEESalias0.SALARY >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles of all movies not reviewed by var0 .<CODESPLIT>SELECT AVG( EMPLOYEESalias0.SALARY ) , JOBSalias0.JOB_TITLE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN JOBS AS JOBSalias0 ON JOBSalias0.JOB_ID = EMPLOYEESalias0.JOB_ID GROUP BY JOBSalias0.JOB_TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is var0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the largest state<CODESPLIT>SELECT EMPLOYEESalias0.DEPARTMENT_ID , MIN( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments .<CODESPLIT>SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ORDER BY COUNT( * ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the employee id for all employees who earn more than the average salary .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee id and salary of all employees who report to var0 (first name) .<CODESPLIT>SELECT ACCOUNTSalias0.NAME , SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the name of all departments that do actually have one or more employees assigned to them .<CODESPLIT>SELECT RESERVATIONSalias0.ADULTS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE CHECKIN = "var0" AND FIRSTNAME = "var1" AND LASTNAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id and type of each thing , and the details of the organization that owns it .<CODESPLIT>SELECT DISTINCT * FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID WHERE EMPLOYEESalias0.EMPLOYEE_ID = DEPARTMENTSalias0.MANAGER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the job ID for those jobs which average salary is above var0 .<CODESPLIT>SELECT EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.JOB_ID HAVING AVG( EMPLOYEESalias0.SALARY ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of instructors who taught a class in var0 var1 but not in var2 var3 .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID , JOBSalias0.JOB_TITLE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN JOBS AS JOBSalias0 ON JOBSalias0.JOB_ID = EMPLOYEESalias0.JOB_ID WHERE EMPLOYEESalias0.DEPARTMENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name and job id for all employees in the var0 department ?<CODESPLIT>SELECT DISTINCT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RATING > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all advisors who have at least two students .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) AND var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range var0 and var1 .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID NOT IN ( SELECT DEPARTMENTSalias0.DEPARTMENT_ID FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.MANAGER_ID BETWEEN var0 AND var1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee name ( first name and last name ) and hire date for all employees in the same department as var0 .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and office of the professor who is in the history department and has a Ph.D . degree .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = "var0" ) AND EMPLOYEESalias0.FIRST_NAME != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a  'var0 ' .<CODESPLIT>SELECT EMPLOYEESalias0.PHONE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee number , name( first name and last name ) , and salary for all employees who earn more than the average salary and who work in a department with any employee with a ' var0 ' in their first name .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID IN ( SELECT EMPLOYEESalias2.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias2 WHERE EMPLOYEESalias2.FIRST_NAME LIKE "var0" ) AND EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find number of pets owned by students who are older than var0 .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY < ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the employee number , name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is var0 .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.JOB_ID , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT MAX( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average amount of transactions for different lots .<CODESPLIT>SELECT EMPLOYEESalias0.DEPARTMENT_ID , SUM( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display all the information of those employees who did not have any job in the past .<CODESPLIT>SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_ID NOT IN ( SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns ?<CODESPLIT>SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY , MAX( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the states<CODESPLIT>SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , LOCATIONSalias0.CITY , LOCATIONSalias0.STATE_PROVINCE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average checking balance .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , LOCATIONSalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID WHERE EMPLOYEESalias0.FIRST_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the department name , city , and state province for each department .<CODESPLIT>SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , LOCATIONSalias0.CITY , LOCATIONSalias0.STATE_PROVINCE FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of the papers in " var0 " .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the full name (first and last name) , and salary of those employees who working in any department located in var0 .<CODESPLIT>SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID WHERE LOCATIONSalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the song that was released in the most recent year ?<CODESPLIT>SELECT SONGalias0.RELEASEDATE , SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RELEASEDATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the longest song ?<CODESPLIT>SELECT F_ID FROM FILES AS FILESalias0 ORDER BY FILESalias0.DURATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the nurse has the most appointments ?<CODESPLIT>SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of enzymes in descending lexicographical order .<CODESPLIT>SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and country of origin for all singers who have produced songs with rating above var0 .<CODESPLIT>SELECT DISTINCT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RATING > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What paper did var0 wrote in the 90s ?<CODESPLIT>SELECT DISTINCT FILESalias0.FILE_SIZE , FILESalias0.FORMATS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE SONGalias0.RESOLUTION < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the artist who produced the shortest song ?<CODESPLIT>SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 JOIN FILES AS FILESalias0 ON SONGalias0.F_ID = FILESalias0.F_ID ORDER BY FILESalias0.DURATION LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and countries of origin for the artists who produced the top three highly rated songs .<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME ORDER BY SONGalias0.RATING DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many songs have 4 minute duration ?<CODESPLIT>SELECT COUNT( * ) FROM FILES AS FILESalias0 WHERE FILESalias0.DURATION LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artists are from var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating of songs produced by female artists ?<CODESPLIT>SELECT AVG( SONGalias0.RATING ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE ARTISTalias0.GENDER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most popular file format ?<CODESPLIT>SELECT FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FORMATS ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of businesses that are var0 .<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = "var0" INTERSECT SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of songs that are available in var0 format and have resolution lower than var1 .<CODESPLIT>SELECT AVG( MANAGERalias0.AGE ) FROM MANAGER AS MANAGERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the country of origin of the artist who is female and produced a song in Bangla ?<CODESPLIT>SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE ARTISTalias0.GENDER = "var0" AND SONGalias0.LANGUAGES = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average duration of songs that have var0 format and resolution below var1 ?<CODESPLIT>SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.FLOOR_EXERCISE_POINTS DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of artists for each gender ?<CODESPLIT>SELECT ARTISTalias0.GENDER , COUNT( * ) FROM ARTIST AS ARTISTalias0 GROUP BY ARTISTalias0.GENDER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating of songs for each language ?<CODESPLIT>SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 WHERE ARTWORKalias0.TYPE != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states have no bordering state<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.GENDER FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME ORDER BY SONGalias0.RESOLUTION LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each file format , return the number of artists who released songs in that format .<CODESPLIT>SELECT STORMalias0.NAME FROM STORM AS STORMalias0 EXCEPT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the budget of the movie var1 from var0 ?<CODESPLIT>SELECT DISTINCT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MIN( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of all songs that have a lower rating than some song of var0 genre ?<CODESPLIT>SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING < ( SELECT MAX( SONGalias1.RATING ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and country of origin of the artist who released a song that has " var0 " in its title ?<CODESPLIT>SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ORDER BY COUNT( STORE_DISTRICTalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct claim outcome codes are there ?<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.GENDER FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RELEASEDATE LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all genres in alphabetical oder , together with its ratings .<CODESPLIT>SELECT GENREalias0.RATING , G_NAME FROM GENRE AS GENREalias0 ORDER BY G_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of the names of all songs ordered by their resolution .<CODESPLIT>SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RESOLUTION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of songs that are available in either var0 format or have resolution above var1 ?<CODESPLIT>SELECT SPORTNAME FROM SPORTSINFO WHERE ONSCHOLARSHIP = "var0" GROUP BY SPORTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all songs that have 4 minute duration or are in English .<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.* FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" AND ISOFFICIAL = "var1" UNION SELECT COUNTRYLANGUAGEalias1.* FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = "var2" AND ISOFFICIAL = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the language used most often in the songs ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the language that was used most often in songs with resolution above var0 ?<CODESPLIT>SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE RESOLUTION > var0 GROUP BY LANGUAGES ORDER BY COUNT( SONGalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of artists who are var1 and are from var0 ?<CODESPLIT>SELECT STATIONalias0.ID , STATIONalias0.LOCAL_AUTHORITY FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 JOIN STATION AS STATIONalias0 ON WEEKLY_WEATHERalias0.STATION_ID = STATIONalias0.ID GROUP BY WEEKLY_WEATHERalias0.STATION_ID HAVING MAX( WEEKLY_WEATHERalias0.PRECIPITATION ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of songs whose genre is var0 or language is English .<CODESPLIT>SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.GENRE_IS = "var0" OR SONGalias0.LANGUAGES = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names of songs for which format is var0 and resolution is below var1 .<CODESPLIT>SELECT SONGalias0.SONG_NAME FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.FORMATS = "var0" INTERSECT SELECT SONGalias1.SONG_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.RESOLUTION < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names of singers who are from var0 and released an English song .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID AND ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of products that are in at least two events .<CODESPLIT>SELECT AVG( SONGalias0.RATING ) , AVG( SONGalias0.RESOLUTION ) FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum resolution of songs whose duration is 3 minutes ?<CODESPLIT>SELECT MAX( SONGalias0.RESOLUTION ) , MIN( SONGalias0.RESOLUTION ) FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.DURATION LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum duration and resolution of songs grouped and ordered by languages ?<CODESPLIT>SELECT SUM( CHANNELalias0.SHARE_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre ?<CODESPLIT>SELECT MIN( FILESalias0.DURATION ) , MIN( SONGalias0.RATING ) , SONGalias0.GENRE_IS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID GROUP BY SONGalias0.GENRE_IS ORDER BY SONGalias0.GENRE_IS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lesson does customer with first name var0 took ?<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.LANGUAGES = "var0" GROUP BY SONGalias0.ARTIST_NAME HAVING COUNT( SONGalias0.* ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and country of origin for all artists who have release at least one song of resolution above var0 .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) EXCEPT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names and number of works of the three artists who have produced the most songs .<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the address and staff number of the shops that do not have any happy hour .<CODESPLIT>SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the songs whose rating is below the rating of all songs in English ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE < var1 OR PRODUCTSalias0.PRODUCT_PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the high schooler who has the greatest number of likes ?<CODESPLIT>SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MAX( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.RATING < var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is ids of the songs whose resolution is higher than the average resolution of songs in var0 genre ?<CODESPLIT>SELECT MAX( POSTSEASONalias0.WINS ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the top var1 artists who have the largest number of songs works whose language is Bangla .<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.LANGUAGES = "var0" GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id , genre and artist name of English songs ordered by rating .<CODESPLIT>SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the duration , file size and format of songs whose genre is var0 , ordered by title ?<CODESPLIT>SELECT FILESalias0.DURATION , FILESalias0.FILE_SIZE , FILESalias0.FORMATS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE SONGalias0.GENRE_IS = "var0" ORDER BY SONGalias0.SONG_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the artists who have produced English songs but have never received rating higher than var1 .<CODESPLIT>SELECT DISTINCT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = "var0" EXCEPT SELECT DISTINCT SONGalias1.ARTIST_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.RATING > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the artists who are from var0 and have never received rating higher than var1 .<CODESPLIT>SELECT DISTINCT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = "var0" EXCEPT SELECT DISTINCT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the full name and id of the college with the largest number of baseball players ?<CODESPLIT>SELECT COLLEGEalias0.COLLEGE_ID , COLLEGEalias0.NAME_FULL FROM COLLEGE AS COLLEGEalias0 JOIN PLAYER_COLLEGE AS PLAYER_COLLEGEalias0 ON PLAYER_COLLEGEalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID GROUP BY COLLEGEalias0.COLLEGE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average salary of the players in the team named ' var0 ' ?<CODESPLIT>SELECT AVG( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are first and last names of players participating in all star game in var0 ?<CODESPLIT>SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID WHERE ALL_STARalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first name , last name and id of the player with the most all star game experiences ? Also list the count .<CODESPLIT>SELECT COUNT( * ) , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many players enter hall of fame each year ?<CODESPLIT>SELECT COUNT( * ) , HALL_OF_FAMEalias0.YEARID FROM HALL_OF_FAME AS HALL_OF_FAMEalias0 GROUP BY HALL_OF_FAMEalias0.YEARID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of attendance at home games for each year ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.POLICY_TYPE_CODE = "var0" OR POLICIESalias0.POLICY_TYPE_CODE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In var0 , what are the id and rank of the team that has the largest average number of attendance ?<CODESPLIT>SELECT TEAMalias0.RANK , TEAMalias0.TEAM_ID FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR = var0 GROUP BY HOME_GAMEalias0.TEAM_ID ORDER BY AVG( HOME_GAMEalias0.ATTENDANCE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the manager's first name , last name and id who won the most manager award ?<CODESPLIT>SELECT MANAGER_AWARDalias0.PLAYER_ID , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN MANAGER_AWARD AS MANAGER_AWARDalias0 ON PLAYERalias0.PLAYER_ID = MANAGER_AWARDalias0.PLAYER_ID GROUP BY MANAGER_AWARDalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the products that are not using the most frequently-used max page size .<CODESPLIT>SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which var0 players won the most player awards ? List their full name and id .<CODESPLIT>SELECT DISTINCT ALLERGY FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List three countries which are the origins of the least players .<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the players ' first name and last name who have empty death record .<CODESPLIT>SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.DEATH_YEAR = "" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all the customers in alphabetical order .<CODESPLIT>SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.BATS = "var1" AND PLAYERalias0.BIRTH_COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average height of the players from the college named ' var0 ' ?<CODESPLIT>SELECT AVG( PLAYERalias0.HEIGHT ) FROM PLAYER AS PLAYERalias0 JOIN PLAYER_COLLEGE AS PLAYER_COLLEGEalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COLLEGEalias0.PLAYER_ID JOIN COLLEGE AS COLLEGEalias0 ON PLAYER_COLLEGEalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID WHERE COLLEGEalias0.NAME_FULL = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the highest salary among each team ? List the team name , id and maximum salary .<CODESPLIT>SELECT MAX( SALARYalias0.SALARY ) , TEAMalias0.NAME , TEAMalias0.TEAM_ID FROM TEAM AS TEAMalias0 JOIN SALARY AS SALARYalias0 ON TEAMalias0.TEAM_ID = SALARYalias0.TEAM_ID GROUP BY TEAMalias0.TEAM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id of students who registered course var0 in the order of registration date .<CODESPLIT>SELECT TEAMalias0.NAME , TEAMalias0.TEAM_ID FROM TEAM AS TEAMalias0 JOIN SALARY AS SALARYalias0 ON TEAMalias0.TEAM_ID = SALARYalias0.TEAM_ID GROUP BY TEAMalias0.TEAM_ID ORDER BY AVG( SALARYalias0.SALARY ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the players ' first name and last name who won award both in var0 and in var1 .<CODESPLIT>SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN PLAYER_AWARD AS PLAYER_AWARDalias0 WHERE PLAYER_AWARDalias0.YEAR = var0 INTERSECT SELECT PLAYERalias1.NAME_FIRST , PLAYERalias1.NAME_LAST FROM PLAYER AS PLAYERalias1 JOIN PLAYER_AWARD AS PLAYER_AWARDalias1 WHERE PLAYER_AWARDalias1.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List players ' first name and last name who have weight greater than var0 or height shorter than var1 .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" EXCEPT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the maximum scores of the team var0 when the team won in postseason ?<CODESPLIT>SELECT MAX( POSTSEASONalias0.WINS ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many times did var0 lose in var1 postseason ?<CODESPLIT>SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_LOSER WHERE POSTSEASONalias0.YEAR = var1 AND TEAMalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of mountains with height more than var0 or prominence more than var1 .<CODESPLIT>SELECT POSTSEASONalias0.TEAM_ID_WINNER , TEAMalias0.NAME FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE POSTSEASONalias0.YEAR = var0 GROUP BY POSTSEASONalias0.TEAM_ID_WINNER ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of wins the team var0 got in the postseasons each year in history ?<CODESPLIT>SELECT COUNT( * ) , POSTSEASONalias0.YEAR FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" GROUP BY POSTSEASONalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of postseason games that team var0 participated in ?<CODESPLIT>SELECT COUNT( * ) FROM ( SELECT * FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" UNION SELECT * FROM POSTSEASON AS POSTSEASONalias1 JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = POSTSEASONalias1.TEAM_ID_LOSER WHERE TEAMalias1.NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the object number of railways that do not have any trains .<CODESPLIT>SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 WHERE POSTSEASONalias0.TIES = var1 AND POSTSEASONalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total salary paid by team var0 in var1 ?<CODESPLIT>SELECT SUM( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var1 AND TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many players were in the team var0 in var1 ?<CODESPLIT>SELECT COUNT( * ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var1 AND TEAMalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the var1 highest salaries of the players in var0 ?<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the unique block codes that have available rooms ?<CODESPLIT>SELECT SALARYalias0.SALARY FROM SALARY AS SALARYalias0 WHERE SALARYalias0.YEAR = var0 UNION SELECT SALARYalias1.SALARY FROM SALARY AS SALARYalias1 WHERE SALARYalias1.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which year did the least people enter hall of fame ?<CODESPLIT>SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 WHERE SALES_IN_BILLION > var0 ORDER BY COMPANYalias0.SALES_IN_BILLION , COMPANYalias0.PROFITS_IN_BILLION DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many parks are there in var0 city ?<CODESPLIT>SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of all customers without an account .<CODESPLIT>SELECT COUNT( * ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 AND PARKalias0.PARK_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many games were played in city var1 in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 AND PARKalias0.CITY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total home game attendance of team var0 from var1 to var2 ?<CODESPLIT>SELECT SUM( HOME_GAMEalias0.ATTENDANCE ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR BETWEEN var1 AND var2 AND TEAMalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the average and maximum attendances of all events ?<CODESPLIT>SELECT SUM( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN PLAYER AS PLAYERalias0 ON SALARYalias0.PLAYER_ID = PLAYERalias0.PLAYER_ID WHERE PLAYERalias0.NAME_FIRST = "var0" AND PLAYERalias0.NAME_LAST = "var1" AND SALARYalias0.YEAR BETWEEN var2 AND var3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List players ' first name and last name who received salary from team var1 in both var0 and var2 .<CODESPLIT>SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM SALARY AS SALARYalias0 JOIN PLAYER AS PLAYERalias0 ON SALARYalias0.PLAYER_ID = PLAYERalias0.PLAYER_ID JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var0 AND TEAMalias0.NAME = "var1" INTERSECT SELECT PLAYERalias1.NAME_FIRST , PLAYERalias1.NAME_LAST FROM SALARY AS SALARYalias1 JOIN PLAYER AS PLAYERalias1 ON SALARYalias1.PLAYER_ID = PLAYERalias1.PLAYER_ID JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = SALARYalias1.TEAM_ID WHERE SALARYalias1.YEAR = var2 AND TEAMalias1.NAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of courses that have either var0 credits or var1 credit but var2 hours .<CODESPLIT>SELECT SUM( HOME_GAMEalias0.GAMES ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR BETWEEN var1 AND var2 AND TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which team had the least number of attendances in home games in var0 ?<CODESPLIT>SELECT TEAMalias0.NAME FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR = var0 ORDER BY HOME_GAMEalias0.ATTENDANCE ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of states that have more than var0 parks .<CODESPLIT>SELECT PARKalias0.STATE FROM PARK AS PARKalias0 GROUP BY PARKalias0.STATE HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many team franchises are active , with active value ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) FROM TEAM_FRANCHISE AS TEAM_FRANCHISEalias0 WHERE TEAM_FRANCHISEalias0.ACTIVE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which cities have var0 to var1 parks ?<CODESPLIT>SELECT PNAME FROM PLAYER AS PLAYERalias0 WHERE YCARD = "var0" ORDER BY HS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which park had most attendances in var0 ?<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY , PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many camera lenses have a focal length longer than var0 mm ?<CODESPLIT>SELECT COUNT( * ) FROM CAMERA_LENS AS CAMERA_LENSalias0 WHERE CAMERA_LENSalias0.FOCAL_LENGTH_MM > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the brand and name for each camera lens , and sort in descending order of maximum aperture .<CODESPLIT>SELECT CAMERA_LENSalias0.BRAND , CAMERA_LENSalias0.NAME FROM CAMERA_LENS AS CAMERA_LENSalias0 ORDER BY CAMERA_LENSalias0.MAX_APERTURE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id , color scheme , and name for all the photos .<CODESPLIT>SELECT PHOTOSalias0.COLOR , PHOTOSalias0.ID , PHOTOSalias0.NAME FROM PHOTOS AS PHOTOSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and average height of the mountains ?<CODESPLIT>SELECT AVG( MOUNTAINalias0.HEIGHT ) , MAX( MOUNTAINalias0.HEIGHT ) FROM MOUNTAIN AS MOUNTAINalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of editors that are on at least two journal committees .<CODESPLIT>SELECT AVG( MOUNTAINalias0.PROMINENCE ) FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , height and prominence of mountains which do not belong to the range ' var0 ' ?<CODESPLIT>SELECT MOUNTAINalias0.HEIGHT , MOUNTAINalias0.NAME , MOUNTAINalias0.PROMINENCE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.RANGE != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the photos for mountains ?<CODESPLIT>SELECT DISTINCT APARTMENTSalias0.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the mountains that have at least var0 photos ?<CODESPLIT>SELECT DOCUMENT_SECTIONSalias0.SECTION_TITLE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the cameras that have taken picture of the most mountains ?<CODESPLIT>SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID EXCEPT SELECT ADDRESSESalias1.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias1 JOIN PERFORMERS AS PERFORMERSalias0 ON PERFORMERSalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of rooms for each bed type .<CODESPLIT>SELECT CAMERA_LENSalias0.NAME FROM CAMERA_LENS AS CAMERA_LENSalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID WHERE CAMERA_LENSalias0.BRAND = "var0" OR CAMERA_LENSalias0.BRAND = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different kinds of lens brands are there ?<CODESPLIT>SELECT COUNT( DISTINCT CAMERA_LENSalias0.BRAND ) FROM CAMERA_LENS AS CAMERA_LENSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many camera lenses are not used in taking any photos ?<CODESPLIT>SELECT COUNT( * ) FROM CAMERA_LENS AS CAMERA_LENSalias0 WHERE CAMERA_LENSalias0.ID NOT IN ( SELECT PHOTOSalias0.CAMERA_LENS_ID FROM PHOTOS AS PHOTOSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many users have reviewed var1 in var0 ?<CODESPLIT>SELECT COUNT( DISTINCT PHOTOSalias0.CAMERA_LENS_ID ) FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID WHERE MOUNTAINalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the brands of lenses that took both a picture of mountains with range ' var0 ' and a picture of mountains with range ' var1 '<CODESPLIT>SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and prominence of the mountains whose picture is not taken by a lens of brand ' var0 ' .<CODESPLIT>SELECT ELIMINATIONalias0.ELIMINATION_MOVE , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the camera lens names containing substring " var0 " .<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RECORDalias0.RESULT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many museums were opened after var0 or before var1 ?<CODESPLIT>SELECT CAMERA_LENSalias0.NAME , COUNT( PHOTOSalias0.* ) FROM CAMERA_LENS AS CAMERA_LENSalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID GROUP BY CAMERA_LENSalias0.ID ORDER BY COUNT( PHOTOSalias0.* ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of channels that are not owned by var0 .<CODESPLIT>SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all channel names ordered by their rating in percent from big to small .<CODESPLIT>SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 ORDER BY CHANNELalias0.RATING_IN_PERCENT DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the owner of the channel that has the highest rating ratio ?<CODESPLIT>SELECT CHANNELalias0.OWNER FROM CHANNEL AS CHANNELalias0 ORDER BY CHANNELalias0.RATING_IN_PERCENT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many programs are there ?<CODESPLIT>SELECT COUNT( * ) FROM PROGRAM AS PROGRAMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the names of programs , ordering by launch time .<CODESPLIT>SELECT BODY_BUILDERalias0.TOTAL FROM BODY_BUILDER AS BODY_BUILDERalias0 ORDER BY BODY_BUILDERalias0.TOTAL ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name , origin and owner of each program .<CODESPLIT>SELECT PROGRAMalias0.NAME , PROGRAMalias0.ORIGIN , PROGRAMalias0.OWNER FROM PROGRAM AS PROGRAMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the name of the program that was launched most recently .<CODESPLIT>SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.LAUNCH DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total percentage share of all channels owned by var0 .<CODESPLIT>SELECT SUM( CHANNELalias0.SHARE_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the channels that are broadcast in the morning .<CODESPLIT>SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 JOIN BROADCAST AS BROADCASTalias0 ON CHANNELalias0.CHANNEL_ID = BROADCASTalias0.CHANNEL_ID WHERE BROADCASTalias0.TIME_OF_DAY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the names of the channels that broadcast in both morning and night ?<CODESPLIT>SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 JOIN BROADCAST AS BROADCASTalias0 ON CHANNELalias0.CHANNEL_ID = BROADCASTalias0.CHANNEL_ID WHERE BROADCASTalias0.TIME_OF_DAY = "var0" INTERSECT SELECT CHANNELalias1.NAME FROM CHANNEL AS CHANNELalias1 JOIN BROADCAST AS BROADCASTalias1 ON CHANNELalias1.CHANNEL_ID = BROADCASTalias1.CHANNEL_ID WHERE BROADCASTalias1.TIME_OF_DAY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many programs are broadcast in each time section of the day ?<CODESPLIT>SELECT BROADCASTalias0.TIME_OF_DAY , COUNT( * ) FROM BROADCAST AS BROADCASTalias0 GROUP BY BROADCASTalias0.TIME_OF_DAY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of different programs that are broadcast during night time .<CODESPLIT>SELECT COUNT( DISTINCT BROADCASTalias0.PROGRAM_ID ) FROM BROADCAST AS BROADCASTalias0 WHERE BROADCASTalias0.TIME_OF_DAY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers who ordered both products var0 and var1 .<CODESPLIT>SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 EXCEPT SELECT PROGRAMalias1.NAME FROM PROGRAM AS PROGRAMalias1 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias1.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID WHERE BROADCASTalias0.TIME_OF_DAY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the program owners that have some programs in both morning and night time .<CODESPLIT>SELECT PROGRAMalias0.OWNER FROM PROGRAM AS PROGRAMalias0 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias0.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID WHERE BROADCASTalias0.TIME_OF_DAY = "var0" INTERSECT SELECT PROGRAMalias1.OWNER FROM PROGRAM AS PROGRAMalias1 JOIN BROADCAST AS BROADCASTalias1 ON PROGRAMalias1.PROGRAM_ID = BROADCASTalias1.PROGRAM_ID WHERE BROADCASTalias1.TIME_OF_DAY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all program origins in the alphabetical order .<CODESPLIT>SELECT PROGRAMalias0.ORIGIN FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.ORIGIN ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the number of different channel owners ?<CODESPLIT>SELECT COUNT( DISTINCT CHANNELalias0.OWNER ) FROM CHANNEL AS CHANNELalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the names of programs whose origin is not in var0 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) , PUBLICATIONalias0.YEAR FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" GROUP BY PUBLICATIONalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the channels owned by var0 or var1 ?<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.ORGANISATION_ID IN ( SELECT PROJECTSalias1.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias1 GROUP BY ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total rating ratio for each channel owner .<CODESPLIT>SELECT CHANNELalias0.OWNER , SUM( CHANNELalias0.RATING_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 GROUP BY CHANNELalias0.OWNER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many transcripts are released ?<CODESPLIT>SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias0.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID GROUP BY BROADCASTalias0.PROGRAM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find name of the services that has never been used .<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each nomination , show the name of the artwork and name of the festival where it is nominated .<CODESPLIT>SELECT COURSESalias0.COURSE_DESCRIPTION FROM COURSES AS COURSESalias0 WHERE COURSESalias0.COURSE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the addresses of the course authors or tutors with personal name " var0 "<CODESPLIT>SELECT STUID FROM SPORTSINFO GROUP BY STUID HAVING SUM( HOURSPERWEEK ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the addresses of all the course authors or tutors .<CODESPLIT>SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = "var0" INTERSECT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of different cities which banks are located at .<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the highest points of states surrounding var0<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct students are enrolled in courses ?<CODESPLIT>SELECT COUNT( DISTINCT STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID ) FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct courses are enrolled in by students ?<CODESPLIT>SELECT COUNT( STUDENT_COURSE_ENROLMENTalias0.COURSE_ID ) FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the payment method code used by more than var0 parties .<CODESPLIT>SELECT STUDENT_TESTS_TAKENalias0.DATE_TEST_TAKEN FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tests have result " var0 " ?<CODESPLIT>SELECT COUNT( STUDENT_TESTS_TAKENalias0.* ) FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the login names of the students with family name " var0 " ?<CODESPLIT>SELECT DOCUMENT_TYPE_CODE FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates of the latest logon of the students with family name " var0 " or " var1 " ?<CODESPLIT>SELECT STUDENTSalias0.DATE_OF_LATEST_LOGON FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FAMILY_NAME = "var0" OR STUDENTSalias0.FAMILY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students have pervar0al names that contain the word " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.PERSONAL_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers written by " H . V . Jagadish " in each year .<CODESPLIT>SELECT SUBJECTSalias0.SUBJECT_NAME FROM SUBJECTS AS SUBJECTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the information about course authors and tutors in alphabetical order of the personal name .<CODESPLIT>SELECT ALBUMalias0.TITLE , COUNT( TRACKalias0.* ) , TRACKalias0.ALBUMID FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID GROUP BY TRACKalias0.ALBUMID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the personal names and family names of all the students in alphabetical order of family name .<CODESPLIT>SELECT REPRESENTATIVEalias0.LIFESPAN FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.STATE = "var0" OR REPRESENTATIVEalias0.STATE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each test result and its count in descending order of count .<CODESPLIT>SELECT COUNT( STUDENT_TESTS_TAKENalias0.* ) , STUDENT_TESTS_TAKENalias0.TEST_RESULT FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 GROUP BY TEST_RESULT ORDER BY COUNT( STUDENT_TESTS_TAKENalias0.* ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the login name of the course author that teaches the course with name " var0 " .<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSESalias0.COURSE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many programs are broadcast in each time section of the day ?<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSESalias0.COURSE_NAME = "var0" OR COURSESalias0.COURSE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the personal name , family name , and author ID of the course author that teaches the most courses .<CODESPLIT>SELECT COURSESalias0.AUTHOR_ID , COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID GROUP BY COURSESalias0.AUTHOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the addresses and author IDs of the course authors that teach at least two courses .<CODESPLIT>SELECT COURSESalias0.AUTHOR_ID , COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID GROUP BY COURSESalias0.AUTHOR_ID HAVING COUNT ( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of courses taught by the tutor who has personal name " var0 " .<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names and descriptions of courses that belong to the subject named " var0 " .<CODESPLIT>SELECT COURSESalias0.COURSE_DESCRIPTION , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID WHERE SUBJECTSalias0.SUBJECT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the subject ID , subject name , and the corresponding number of available courses for each subject .<CODESPLIT>SELECT CUSTOMERSalias0.COMPANY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account id and the number of transactions for each account<CODESPLIT>SELECT COUNT( * ) , COURSESalias0.SUBJECT_ID , SUBJECTSalias0.SUBJECT_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID GROUP BY COURSESalias0.SUBJECT_ID ORDER BY COUNT( * ) ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student IDs with more than total var0 hours per week on all sports played .<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the maximum scores of the team var0 when the team won in postseason ?<CODESPLIT>SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the courses that have exactly var0 student enrollment ?<CODESPLIT>SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME HAVING COUNT( * ) = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the unique names of races that held after var1 and the circuits were in var0 ?<CODESPLIT>SELECT COURSESalias0.COURSE_DESCRIPTION , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of each course and the corresponding number of student enrollment ?<CODESPLIT>SELECT BATTLEalias0.ID , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID JOIN DEATH AS DEATHalias0 ON SHIPalias0.ID = DEATHalias0.CAUSED_BY_SHIP_ID GROUP BY BATTLEalias0.ID HAVING SUM( DEATHalias0.KILLED ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the enrollment dates of all the tests that have result " var0 " ?<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE ROLESalias0.ROLE_NAME = "var0" OR ROLESalias0.ROLE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the completion dates of all the tests that have result " var0 " ?<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the dates of enrollment and completion of the student with personal name " var0 " .<CODESPLIT>SELECT COUNT( * ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTION_TYPE_CODE = "var0" GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the dates of enrollment and completion of the student with family name " var0 " and personal name " var1 " .<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID WHERE STUDENTSalias0.FAMILY_NAME = "var0" AND STUDENTSalias0.PERSONAL_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the date and venue of each debate ?<CODESPLIT>SELECT STUDENTSalias0.LOGIN_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the student ID and personal name of the student with at least two enrollments .<CODESPLIT>SELECT STUDENTSalias0.PERSONAL_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the customer event id and the corresponding move in date and property id .<CODESPLIT>SELECT STUDENTSalias0.MIDDLE_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the personal names of students not enrolled in any course .<CODESPLIT>SELECT STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 EXCEPT SELECT STUDENTSalias1.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias1 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias1.STUDENT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students did not have any course enrollment ?<CODESPLIT>SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the builder of railways associated with the trains named " var0 " .<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.LOGIN_NAME FROM STUDENTS AS STUDENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the scientists ' names , their projects ' names , and the hours worked by that scientist on each project , in alphabetical order of project name , and then scientist name .<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies written by " var0 "<CODESPLIT>SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID HAVING COUNT( * ) > var0 UNION SELECT CLAIMSalias1.CLAIM_ID , CLAIMSalias1.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias1 JOIN SETTLEMENTS AS SETTLEMENTSalias1 ON SETTLEMENTSalias1.CLAIM_ID = CLAIMSalias1.CLAIM_ID WHERE CLAIMSalias1.AMOUNT_CLAIMED = ( SELECT MAX( CLAIMSalias2.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias2 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Hom many musicians performed in the song " var0 " ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS , CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias1 ON CUSTOMER_POLICIESalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN CLAIMS AS CLAIMSalias0 ON CUSTOMER_POLICIESalias1.POLICY_ID = CLAIMSalias0.POLICY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the method , date and amount of all the payments , in ascending order of date .<CODESPLIT>SELECT PAYMENTSalias0.AMOUNT_PAYMENT , PAYMENTSalias0.DATE_PAYMENT_MADE , PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 ORDER BY PAYMENTSalias0.DATE_PAYMENT_MADE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the budget type code and description and the corresponding document id .<CODESPLIT>SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_CLAIMED DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Among all the claims , what is the amount claimed in the claim with the least amount settled ? List both the settlement amount and claim amount .<CODESPLIT>SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_SETTLED ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Among all the claims , which claims have a claimed amount larger than the average ? List the date the claim was made and the date it was settled .<CODESPLIT>SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 JOIN HAPPY_HOUR AS HAPPY_HOURalias0 ON SHOPalias0.SHOP_ID = HAPPY_HOURalias0.SHOP_ID WHERE HAPPY_HOURalias0.MONTH = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Among all the claims , which settlements have a claimed amount that is no more than the average ? List the claim start date .<CODESPLIT>SELECT CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 WHERE CLAIMSalias0.AMOUNT_SETTLED <= ( SELECT AVG( CLAIMSalias1.AMOUNT_SETTLED ) FROM CLAIMS AS CLAIMSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many settlements does each claim correspond to ? List the claim id and the number of settlements .<CODESPLIT>SELECT CLAIMSalias0.CLAIM_ID , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which claim incurred the most number of settlements ? List the claim id , the date the claim was made , and the number .<CODESPLIT>SELECT ARTISTalias0.AGE , ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many settlements were made on the claim with the most recent claim settlement date ? List the number and the claim id .<CODESPLIT>SELECT CLAIMSalias0.CLAIM_ID , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY CLAIMSalias0.DATE_CLAIM_SETTLED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum accelerate for different number of cylinders ?<CODESPLIT>SELECT CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.DATE_CLAIM_MADE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many departments does the college has ?<CODESPLIT>SELECT SUM( SETTLEMENTSalias0.AMOUNT_SETTLED ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers on var0 conference .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the claim dates and settlement dates of all the settlements ?<CODESPLIT>SELECT SETTLEMENTSalias0.DATE_CLAIM_MADE , SETTLEMENTSalias0.DATE_CLAIM_SETTLED FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most popular payment method ?<CODESPLIT>SELECT PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( PAYMENTSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>With which kind of payment method were the least number of payments processed ?<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME ORDER BY COUNT( PRODUCT_CHARACTERISTICSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of payment ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the distinct details of the customers ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which kind of policy type was chosen by the most customers ?<CODESPLIT>SELECT CUSTOMER_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many settlements are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which Payments were processed with var0 ? List the payment Id , the date and the amount .<CODESPLIT>SELECT PAYMENTSalias0.AMOUNT_PAYMENT , PAYMENTSalias0.DATE_PAYMENT_MADE , PAYMENTSalias0.PAYMENT_ID FROM PAYMENTS AS PAYMENTSalias0 WHERE PAYMENTSalias0.PAYMENT_METHOD_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find distinct cities of addresses of people ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the date the claim was made , the date it was settled and the amount settled for all the claims which had exactly one settlement .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the account id and name with at least var0 transactions .<CODESPLIT>SELECT SUM( CLAIMSalias0.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the date when the document " var0 " was stored ?<CODESPLIT>SELECT DEPARTMENTalias0.NAME FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the employee id of the head whose department has the least number of employees ?<CODESPLIT>SELECT DEPARTMENTalias0.HEAD FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the name and position of the head whose department has least number of employees ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ( SELECT CUSTOMERSalias1.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias1 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the top var0 products which have the largest number of problems ?<CODESPLIT>SELECT PATIENTalias0.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PATIENT AS PATIENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are name and phone number of patients who had more than one appointment ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the different record companies and the corresponding number of orchestras .<CODESPLIT>SELECT APPOINTMENTID FROM APPOINTMENT AS APPOINTMENTalias0 ORDER BY APPOINTMENTalias0.START DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the dates of assessment notes for students with first name " var0 " .<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias0 ON PHYSICIANalias0.EMPLOYEEID = APPOINTMENTalias0.PHYSICIAN ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of physicians who never took any appointment .<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 EXCEPT SELECT PHYSICIANalias1.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias1 ON PHYSICIANalias1.EMPLOYEEID = APPOINTMENTalias0.PHYSICIAN ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the forename and surname of all distinct drivers who once had laptime less than var0 milliseconds ?<CODESPLIT>SELECT DEPARTMENTalias0.NAME , PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE AFFILIATED_WITHalias0.PRIMARYAFFILIATION = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the joined year of the pilot of the highest rank ?<CODESPLIT>SELECT PATIENTalias0.NAME FROM PATIENT AS PATIENTalias0 JOIN APPOINTMENT AS APPOINTMENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT ORDER BY APPOINTMENTalias0.START DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct teams are involved in match seasons ?<CODESPLIT>SELECT COUNT( STAYalias0.PATIENT ) FROM STAY AS STAYalias0 WHERE STAYalias0.ROOM = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many patients ' prescriptions are made by physician var0 ?<CODESPLIT>SELECT COUNT( PATIENTalias0.SSN ) FROM PATIENT AS PATIENTalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias0.SSN JOIN PHYSICIAN AS PHYSICIANalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID WHERE PHYSICIANalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all video games and their types in the order of their names .<CODESPLIT>SELECT MEDICATIONalias0.NAME FROM STAY AS STAYalias0 JOIN PATIENT AS PATIENTalias0 ON STAYalias0.PATIENT = PATIENTalias0.SSN JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias0.SSN JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE STAYalias0.ROOM = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the patient who most recently stayed in room var0 .<CODESPLIT>SELECT STAYalias0.PATIENT FROM STAY AS STAYalias0 WHERE ROOM = var0 ORDER BY STAYSTART DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the nurse has the most appointments ?<CODESPLIT>SELECT FACULTYalias0.FACID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID HAVING COUNT( FACULTYalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many patients do each physician take care of ? List their names and number of patients they take care of .<CODESPLIT>SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 WHERE CONDUCTORalias0.NATIONALITY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of physicians who are in charge of more than one patient .<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PATIENT AS PATIENTalias0 ON PHYSICIANalias0.EMPLOYEEID = PATIENTalias0.PCP GROUP BY PHYSICIANalias0.EMPLOYEEID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of rooms located on each block floor .<CODESPLIT>SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT TV_CHANNELalias1.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias1.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of rooms for different block code ?<CODESPLIT>SELECT BLOCKalias0.BLOCKCODE , COUNT( * ) FROM BLOCK AS BLOCKalias0 JOIN ROOM AS ROOMalias0 ON ROOMalias0.BLOCKFLOOR = BLOCKalias0.BLOCKFLOOR AND ROOMalias0.BLOCKCODE = BLOCKalias0.BLOCKCODE GROUP BY BLOCKalias0.BLOCKCODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the apartment number and the number of rooms for each apartment .<CODESPLIT>SELECT DISTINCT BLOCKCODE FROM ROOM AS ROOMalias0 WHERE ROOMalias0.UNAVAILABLE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the duration of the oldest actor ?<CODESPLIT>SELECT COUNT( DISTINCT ROOMTYPE ) FROM ROOM AS ROOMalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the names of the physicians who prescribe medication var0 ?<CODESPLIT>SELECT DISTINCT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of employees whose title is var0 from each city ?<CODESPLIT>SELECT DISTINCT PHYSICIANalias0.NAME , PHYSICIANalias0.POSITION FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.BRAND = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of medications prescribed for each brand .<CODESPLIT>SELECT COUNT( * ) , MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE GROUP BY MEDICATIONalias0.BRAND ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of physicians whose position title contains the word ' var0 ' .<CODESPLIT>SELECT MATCHalias0.MATCH_ID FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COMPETITION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many fault status codes are recorded in the fault log parts table ?<CODESPLIT>SELECT UNDERGOESalias0.PATIENT FROM UNDERGOES AS UNDERGOESalias0 ORDER BY DATEUNDERGOES LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all patients who have an undergoing treatment and are staying in room var0 .<CODESPLIT>SELECT DISTINCT PATIENTalias0.NAME FROM UNDERGOES AS UNDERGOESalias0 JOIN PATIENT AS PATIENTalias0 ON UNDERGOESalias0.PATIENT = PATIENTalias0.SSN JOIN STAY AS STAYalias0 ON UNDERGOESalias0.STAY = STAYalias0.STAYID WHERE STAYalias0.ROOM = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of all the activities var0 var1 participates in .<CODESPLIT>SELECT DISTINCT NURSEalias0.NAME FROM NURSE AS NURSEalias0 ORDER BY NURSEalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of nurses who are nursing an undergoing treatment .<CODESPLIT>SELECT DISTINCT NURSEalias0.NAME FROM UNDERGOES AS UNDERGOESalias0 JOIN NURSE AS NURSEalias0 ON UNDERGOESalias0.ASSISTINGNURSE = NURSEalias0.EMPLOYEEID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct medications , ordered in an alphabetical order .<CODESPLIT>SELECT DISTINCT MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 ORDER BY MEDICATIONalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the physician who prescribed the highest dose ?<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID ORDER BY PRESCRIBESalias0.DOSE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the physicians ' employee ids together with their primary affiliation departments ' ids .<CODESPLIT>SELECT ACC_BAL , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of departments where some physicians are primarily affiliated with .<CODESPLIT>SELECT DISTINCT DEPARTMENTalias0.NAME FROM AFFILIATED_WITH AS AFFILIATED_WITHalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE PRIMARYAFFILIATION = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What nurses are on call with block floor var0 and block code var0 ? Tell me their names .<CODESPLIT>SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the highest cost , lowest cost and average cost of procedures ?<CODESPLIT>SELECT AVG( PROCEDURESalias0.COST ) , MAX( PROCEDURESalias0.COST ) , MIN( PROCEDURESalias0.COST ) FROM PROCEDURES AS PROCEDURESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of the problems which are reported after var0 ?<CODESPLIT>SELECT PROCEDURESalias0.COST , PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 ORDER BY PROCEDURESalias0.COST DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the three most expensive procedures .<CODESPLIT>SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 ORDER BY PROCEDURESalias0.COST LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the physicians who are trained in a procedure that costs more than var0 .<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PROCEDURESalias0.COST > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the physician who was trained in the most expensive procedure ?<CODESPLIT>SELECT CUSTOMERSalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average cost of procedures that physician var0 was trained in ?<CODESPLIT>SELECT AVG( PROCEDURESalias0.COST ) FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of procedures which physician var0 was trained in .<CODESPLIT>SELECT PROCEDURESalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the names and the players of clubs .<CODESPLIT>SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST > var0 UNION SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all procedures which cost more than var0 but which physician var1 was not trained in ?<CODESPLIT>SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST > var0 EXCEPT SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all procedures such that the cost is less than var0 and physician var1 was trained in .<CODESPLIT>SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST < var0 INTERSECT SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of physicians who are affiliated with both var0 and var1 departments .<CODESPLIT>SELECT WINEalias0.WINERY FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = "var0" GROUP BY WINEalias0.WINERY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of physicians who are affiliated with var0 or var1 department .<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE DEPARTMENTalias0.NAME = "var0" OR DEPARTMENTalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of patients who are not using the medication of var0 .<CODESPLIT>SELECT PATIENTalias0.NAME FROM PATIENT AS PATIENTalias0 EXCEPT SELECT PATIENTalias1.NAME FROM PATIENT AS PATIENTalias1 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias1.SSN JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of patients who are not using the medication of var0 .<CODESPLIT>SELECT COUNT( * ) FROM PATIENT AS PATIENTalias0 WHERE PATIENTalias0.SSN NOT IN ( SELECT PRESCRIBESalias0.PATIENT FROM PRESCRIBES AS PRESCRIBESalias0 JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many appointments are there ?<CODESPLIT>SELECT COUNT( * ) FROM APPOINTMENT AS APPOINTMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of nurses who are on call .<CODESPLIT>SELECT DISTINCT NURSEalias0.NAME FROM NURSE AS NURSEalias0 JOIN ON_CALL AS ON_CALLalias0 ON ON_CALLalias0.NURSE = NURSEalias0.EMPLOYEEID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many ships are there ?<CODESPLIT>SELECT COUNT( SHIPalias0.* ) FROM SHIP AS SHIPalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of ships in ascending order of tonnage .<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the type and nationality of ships ?<CODESPLIT>SELECT SHIPalias0.NATIONALITY , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of ships whose nationality is not " var0 " .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of ships whose nationality is either var0 or var1 .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY = "var0" OR SHIPalias0.NATIONALITY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the largest state through which the var0 runs<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.TONNAGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different types of ships and the number of ships of each type .<CODESPLIT>SELECT COUNT( SHIPalias0.* ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common type of ships .<CODESPLIT>SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY TYPE ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the nations that have more than two ships .<CODESPLIT>SELECT SHIPalias0.NATIONALITY FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.NATIONALITY HAVING COUNT( SHIPalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of the oldest dog ?<CODESPLIT>SELECT AVG( SHIPalias0.TONNAGE ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show codes and fates of missions , and names of ships involved .<CODESPLIT>SELECT MISSIONalias0.CODE , MISSIONalias0.FATE , SHIPalias0.NAME FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of ships involved in a mission launched after var0 .<CODESPLIT>SELECT SHIPalias0.NAME FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID WHERE MISSIONalias0.LAUNCHED_YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the subject ID , subject name , and the corresponding number of available courses for each subject .<CODESPLIT>SELECT DISTINCT MISSIONalias0.FATE FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID WHERE SHIPalias0.NATIONALITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of ships that are not involved in any mission<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT MISSIONalias0.SHIP_ID FROM MISSION AS MISSIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show statement id , statement detail , account detail for accounts .<CODESPLIT>SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.TONNAGE > var0 INTERSECT SELECT SHIPalias1.TYPE FROM SHIP AS SHIPalias1 WHERE SHIPalias1.TONNAGE < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students in total .<CODESPLIT>SELECT COUNT( PHONEalias0.* ) , PHONEalias0.COMPANY_NAME FROM PHONE AS PHONEalias0 GROUP BY COMPANY_NAME ORDER BY COUNT( PHONEalias0.* ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of students studying in room var0 .<CODESPLIT>SELECT LASTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries are there in total ?<CODESPLIT>SELECT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names of students studying in room var0 ?<CODESPLIT>SELECT DISTINCT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each var0 report the grade that is taught in it . Report just the var0 number and the grade number .<CODESPLIT>SELECT DISTINCT LISTalias0.GRADE , var0 FROM LIST AS LISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age for all managers ?<CODESPLIT>SELECT DISTINCT LISTalias0.GRADE FROM LIST AS LISTalias0 WHERE var0 = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the grade studying in room var0 .<CODESPLIT>SELECT DISTINCT LISTalias0.GRADE FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many book clubs are there ?<CODESPLIT>SELECT DISTINCT CLASSROOM FROM LIST AS LISTalias0 WHERE LISTalias0.GRADE = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of the teachers that teach fifth grade .<CODESPLIT>SELECT DISTINCT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of the teachers that teach first grade .<CODESPLIT>SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.COLLEGE = "var0" OR MATCH_SEASONalias0.COLLEGE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of all the teachers that teach in var0 var1 .<CODESPLIT>SELECT FIRSTNAME FROM TEACHERS AS TEACHERSalias0 WHERE var0 = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of teachers teaching in var0 var1 .<CODESPLIT>SELECT LASTNAME FROM TEACHERS AS TEACHERSalias0 WHERE var0 = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report the first name and last name of all the teachers .<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.RATING > var0 AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report the first name and last name of all the students .<CODESPLIT>SELECT DISTINCT FIRSTNAME , LASTNAME FROM LIST AS LISTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all students taught by var0 var1 . Output the first and last names of the students .<CODESPLIT>SELECT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = "var0" AND TEACHERSalias0.LASTNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of all the teachers that teach var0 var1 .<CODESPLIT>SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = "var0" AND LISTalias0.LASTNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the department with the least number of staff ?<CODESPLIT>SELECT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = "var0" AND LISTalias0.LASTNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all years that have a movie that received a rating of var0 or 5 , and sort them in increasing order of year .<CODESPLIT>SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = "var0" AND TEACHERSalias0.LASTNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many teachers does the student named var0 var1 have ?<CODESPLIT>SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = "var0" AND LISTalias0.LASTNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all first-grade students who are NOT taught by var1 var2 . Report their first and last names .<CODESPLIT>SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of descriptions of the problems that are reported by the staff whose first name is var0 .<CODESPLIT>SELECT DISTINCT LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 AND TEACHERSalias0.FIRSTNAME != "var1" AND TEACHERSalias0.LASTNAME != "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birth year and citizenship of singers ?<CODESPLIT>SELECT COUNT( * ) , COUNT( DISTINCT CLASSROOM ) , LISTalias0.GRADE FROM LIST AS LISTalias0 GROUP BY LISTalias0.GRADE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all people names in the order of their date of birth from old to young .<CODESPLIT>SELECT COUNT( DISTINCT LISTalias0.GRADE ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which var0 has the most students ?<CODESPLIT>SELECT var0 FROM LIST AS LISTalias0 GROUP BY var1 ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report the number of students in each var0 .<CODESPLIT>SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each grade var1 varvar1 , report the total number of students .<CODESPLIT>SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 WHERE GRADE = "var1" GROUP BY var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the teacher who teaches the largest number of students .<CODESPLIT>SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM GROUP BY TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME ORDER BY COUNT( TEACHERSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many companies are headquartered in the US ?<CODESPLIT>SELECT COUNT( * ) FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.HEADQUARTERS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of companies by ascending number of sales .<CODESPLIT>SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_IN_BILLION ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display all the details from Employees table for those employees who was hired before var0 .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS , COMPANYalias0.INDUSTRY FROM COMPANY AS COMPANYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of companies in the banking or retailing industry ?<CODESPLIT>SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.INDUSTRY = "var0" OR COMPANYalias0.INDUSTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many statements do we have ?<CODESPLIT>SELECT MAX( COMPANYalias0.MARKET_VALUE_IN_BILLION ) , MIN( COMPANYalias0.MARKET_VALUE_IN_BILLION ) FROM COMPANY AS COMPANYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have cooperated with " H . V . Jagadish " .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_IN_BILLION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common headquarter for companies .<CODESPLIT>SELECT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the headquarters that have at least two companies .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the headquarters that have both companies in banking industry and companies in oil and gas industry .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.INDUSTRY = "var0" INTERSECT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.INDUSTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the popular publications on var0<CODESPLIT>SELECT COMPANYalias0.NAME , PEOPLEalias0.NAME FROM EMPLOYMENT AS EMPLOYMENTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = EMPLOYMENTalias0.PEOPLE_ID JOIN COMPANY AS COMPANYalias0 ON EMPLOYMENTalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of companies and that of employees in descending order of number of years working for that employee .<CODESPLIT>SELECT PROBLEM_LOGalias0.LOG_ENTRY_DATE , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of employees that work for companies with sales bigger than var0 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM EMPLOYMENT AS EMPLOYMENTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = EMPLOYMENTalias0.PEOPLE_ID JOIN COMPANY AS COMPANYalias0 ON EMPLOYMENTalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID WHERE COMPANYalias0.SALES_IN_BILLION > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of companies and the number of employees they have<CODESPLIT>SELECT SONGSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.LABEL = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of suppliers whose average amount purchased for each product is above var0 or below var1 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT EMPLOYMENTalias0.PEOPLE_ID FROM EMPLOYMENT AS EMPLOYMENTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list the names of the companies with more than var0 sales in the descending order of sales and profits .<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many film are there ?<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct director of all films .<CODESPLIT>SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average ticket sales gross in dollars of films ?<CODESPLIT>SELECT CARS_DATAalias0.HORSEPOWER FROM CARS_DATA AS CARS_DATAalias0 ORDER BY CARS_DATAalias0.ACCELERATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the low and high estimates of film markets ?<CODESPLIT>SELECT FILM_MARKET_ESTIMATIONalias0.HIGH_ESTIMATE , FILM_MARKET_ESTIMATIONalias0.LOW_ESTIMATE FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the types of film market estimations in year var0 ?<CODESPLIT>SELECT FILM_MARKET_ESTIMATIONalias0.TYPE FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum number of cities in all markets .<CODESPLIT>SELECT WEB_CLIENT_ACCELERATORalias0.NAME , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 EXCEPT SELECT WEB_CLIENT_ACCELERATORalias1.NAME , WEB_CLIENT_ACCELERATORalias1.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias1 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE BROWSERalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many markets have number of cities smaller than var0 ?<CODESPLIT>SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in smallest state through which the var0 runs<CODESPLIT>SELECT MARKETalias0.COUNTRY FROM MARKET AS MARKETalias0 ORDER BY MARKETalias0.COUNTRY ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and local authority of the station with has the highest average high temperature .<CODESPLIT>SELECT MARKETalias0.COUNTRY FROM MARKET AS MARKETalias0 ORDER BY MARKETalias0.NUMBER_CITIES DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the titles of films and the types of market estimations .<CODESPLIT>SELECT FILM_MARKET_ESTIMATIONalias0.TYPE , FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department which has the highest average salary of professors .<CODESPLIT>SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of cities of markets with low film market estimate bigger than var0 ?<CODESPLIT>SELECT COUNT( TASKSalias0.* ) , PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN TASKS AS TASKSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name .<CODESPLIT>SELECT FILM_MARKET_ESTIMATIONalias0.YEAR , MARKETalias0.COUNTRY FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list the years of film market estimations when the market is in country " var0 " in descending order .<CODESPLIT>SELECT FILM_MARKET_ESTIMATIONalias0.YEAR FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE MARKETalias0.COUNTRY = "var0" ORDER BY FILM_MARKET_ESTIMATIONalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the studios of each film and the number of films produced by that studio .<CODESPLIT>SELECT COUNT( * ) , FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of film studio that have the most number of films .<CODESPLIT>SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY STUDIO ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of studios that have at least two films .<CODESPLIT>SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the title of films that do not have any market estimation .<CODESPLIT>SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT FILM_MARKET_ESTIMATIONalias0.FILM_ID FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the studios that have produced films with director " var0 " and " var1 " .<CODESPLIT>SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 WHERE FILMalias0.DIRECTOR = "var0" INTERSECT SELECT FILMalias1.STUDIO FROM FILM AS FILMalias1 WHERE FILMalias1.DIRECTOR = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the titles and studios of the films that are produced by some film studios that contained the word " var0 " .<CODESPLIT>SELECT FILMalias0.STUDIO , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.STUDIO LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the studios that have not produced films with director " var0 " .<CODESPLIT>SELECT POSTSEASONalias0.TEAM_ID_WINNER , TEAMalias0.NAME FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE POSTSEASONalias0.YEAR = var0 GROUP BY POSTSEASONalias0.TEAM_ID_WINNER ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the address of history department ?<CODESPLIT>SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO HAVING AVG( FILMalias0.GROSS_IN_DOLLAR ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the title of the film that has the highest high market estimation .<CODESPLIT>SELECT ADDRESSESalias0.ADDRESS_ID , ADDRESSESalias0.LINE_1 , ADDRESSESalias0.LINE_2 FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.CURRENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.ADDRESS_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct names of wines produced before the year of var0 or after the year of var1 .<CODESPLIT>SELECT FILMalias0.DIRECTOR , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT FILM_MARKET_ESTIMATIONalias0.FILM_ID FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE MARKETalias0.COUNTRY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many calendar items do we have ?<CODESPLIT>SELECT COUNT( * ) FROM REF_CALENDAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all cities along with the number of drama workshop groups in each city .<CODESPLIT>SELECT CALENDAR_DATE , DAY_NUMBER FROM REF_CALENDAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of document types .<CODESPLIT>SELECT COUNT( * ) FROM REF_DOCUMENT_TYPES ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all document type codes and document type names .<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID , PAPERalias0.YEAR FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = "var0" ORDER BY PAPERalias0.YEAR ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and description for document type code var0 ?<CODESPLIT>SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many proteins are associated with an institution founded after var0 or an institution with type " var1 " ?<CODESPLIT>SELECT DOCUMENT_TYPE_CODE FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of documents with document type code var0 or var1 .<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the date when the document " var0 " was stored ?<CODESPLIT>SELECT ALL_DOCUMENTSalias0.DATE_STORED FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the day Number and date of all the documents ?<CODESPLIT>SELECT PERSONalias0.JOB , PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list the name and id of all artists that have at least var0 albums in alphabetical order .<CODESPLIT>SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE = ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of locations .<CODESPLIT>SELECT COUNT( * ) FROM REF_LOCATIONS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all location codes and location names .<CODESPLIT>SELECT LOCATION_CODE , LOCATION_NAME FROM REF_LOCATIONS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights depart from City ' var1 ' and have destination City ' var0 ' ?<CODESPLIT>SELECT LOCATION_DESCRIPTION , LOCATION_NAME FROM REF_LOCATIONS WHERE LOCATION_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location code for the country " var0 " ?<CODESPLIT>SELECT LOCATION_CODE FROM REF_LOCATIONS WHERE LOCATION_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many roles are there ?<CODESPLIT>SELECT SUM( TRANSACTIONSalias0.SHARE_COUNT ) FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all role codes , role names , and role descriptions .<CODESPLIT>SELECT ROLESalias0.ROLE_CODE , ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM ROLES AS ROLESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and description for role code " var0 " ?<CODESPLIT>SELECT ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the description for role name " var0 " .<CODESPLIT>SELECT DISTINCT PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.COMPANY_NAME = "var1" OR SCREEN_MODEalias0.TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , role code , and date of birth for the employee with name ' var0 ' .<CODESPLIT>SELECT EMPLOYEESalias0.DATE_OF_BIRTH , EMPLOYEESalias0.EMPLOYEE_NAME , EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id for the employee called var0 ?<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of all the employees with role " var0 " .<CODESPLIT>SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.JOURNALIST_ID NOT IN ( SELECT NEWS_REPORTalias0.JOURNALIST_ID FROM NEWS_REPORT AS NEWS_REPORTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are airport names at City ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) , EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.ROLE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the role code with the largest number of employees ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY WRITESalias0.AUTHORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all role codes with at least var0 employees .<CODESPLIT>SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.ROLE_CODE HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the role code with the least employees .<CODESPLIT>SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE , COUNT( COMPLAINTSalias0.* ) FROM COMPLAINTS AS COMPLAINTSalias0 WHERE COMPLAINT_TYPE_CODE = "var0" GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the role name and role description for employee called var0 ?<CODESPLIT>SELECT ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE EMPLOYEESalias0.EMPLOYEE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of employees with role name var0 .<CODESPLIT>SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 EXCEPT SELECT MANUFACTURERSalias1.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias1 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias1.CODE WHERE PRODUCTSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show me the departure date and arrival date for all flights from var0 to var1 .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE ROLESalias0.ROLE_NAME = "var0" OR ROLESalias0.ROLE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different location codes for documents ?<CODESPLIT>SELECT COUNTRYalias0.NAME , INDEPYEAR , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location name for document " var0 " .<CODESPLIT>SELECT DERIVED_TABLEalias0.LOCATION_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ON DOCUMENT_LOCATIONSalias0.DOCUMENT_ID = ALL_DOCUMENTSalias0.DOCUMENT_ID JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location code , the starting date and ending data in that location for all the documents .<CODESPLIT>SELECT DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATION_FROM , DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATON_TO , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is " the date in location from " and " the date in location to " for the document with name " var0 " ?<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location codes and the number of documents in each location .<CODESPLIT>SELECT COUNT( * ) , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return all detention summaries .<CODESPLIT>SELECT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY LOCATION_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location codes with at least var0 documents .<CODESPLIT>SELECT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location name and code with the least documents .<CODESPLIT>SELECT DERIVED_TABLEalias0.LOCATION_NAME , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents ?<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_NAME , EMPLOYEESalias1.EMPLOYEE_NAME FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.EMPLOYEE_ID = DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies written and produced by " var0 "<CODESPLIT>SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the employee ids and the number of documents destroyed by each employee .<CODESPLIT>SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of the employees who don't authorize destruction for any document .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>report the total number of degrees granted between var0 and var1 .<CODESPLIT>SELECT DISTINCT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of all employees who have destroyed a document .<CODESPLIT>SELECT COUNT( DISTINCT GTYPE ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of all employees who don't destroy any document .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the payment method of the customer that has purchased the least quantity of items ?<CODESPLIT>SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 UNION SELECT DOCUMENTS_TO_BE_DESTROYEDalias1.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of all clubs ?<CODESPLIT>SELECT CLUBNAME FROM CLUB AS CLUBalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of songs whose genre is var0 or language is English .<CODESPLIT>SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names of all the students ?<CODESPLIT>SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of the members of the club " var0 " .<CODESPLIT>SELECT STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many members does the club " var0 " has ?<CODESPLIT>SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the hardware model name and company name for all the phones that were launched in year var0 or have RAM size greater than var1 .<CODESPLIT>SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var1ind all the female members of club " var0 " . Show the first name and last name .<CODESPLIT>SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID WHERE GENRESalias0.NAME = "var0" OR GENRESalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all members of " var0 " whose major is " var1 " . Show the first name and last name .<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" AND STUDENTalias0.MAJOR = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of orchestras that have no performance .<CODESPLIT>SELECT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.MAJOR = "var0" GROUP BY CLUBalias0.CLUBNAME ORDER BY COUNT( MEMBER_OF_CLUBalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0ind the name of the club that has the most female students .<CODESPLIT>SELECT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.SEX = "var0" GROUP BY CLUBalias0.CLUBNAME ORDER BY COUNT( MEMBER_OF_CLUBalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the club named " var0 " ?<CODESPLIT>SELECT SUM( ROOMSalias0.BEDS ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location of the club named " var0 " ?<CODESPLIT>SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of the faculty members who participate in var0 and var1 .<CODESPLIT>SELECT CLUBNAME FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common occupation of players .<CODESPLIT>SELECT COUNT( * ) FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first and last name of the president of the club " var0 " ?<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" AND MEMBER_OF_CLUBalias0.POSITION = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different roles are there in the club " var0 " ?<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE , COUNTRYLANGUAGEalias0.LANGUAGE , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many members of " var0 " are older than var1 ?<CODESPLIT>SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" AND STUDENTalias0.AGE > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many members of club " var0 " are younger than var1 ?<CODESPLIT>SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" AND STUDENTalias0.AGE < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and last name of the student that has the most behavior incidents ?<CODESPLIT>SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.CITY_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many clubs does the student named " var0 var1 " belong to ?<CODESPLIT>SELECT COUNT( DISTINCT CLUBalias0.CLUBNAME ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the clubs having " var0 var1 " as a member .<CODESPLIT>SELECT DISTINCT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the clubs that have at least a member with advisor " var0 " .<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age of the members of the club " var0 " ?<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct grant amount for the grants where the documents were sent before ' var0 ' and grant were ended after ' var1 ' ?<CODESPLIT>SELECT GRANTSalias0.GRANT_AMOUNT FROM GRANTS AS GRANTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID WHERE DOCUMENTSalias0.SENT_DATE < "var0" INTERSECT SELECT GRANTSalias1.GRANT_AMOUNT FROM GRANTS AS GRANTSalias1 WHERE GRANTSalias1.GRANT_END_DATE > "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the project details of the project both producing patent and paper as outcomes .<CODESPLIT>SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total grant amount of the organisations described as research ?<CODESPLIT>SELECT COUNT( * ) FROM BANK AS BANKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List from which date and to which date these staff work: project staff of the project which hires the most staffs<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ORDER BY MUSICALalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the organisation ids and details of the organisations which are involved in<CODESPLIT>SELECT AVG( INSTRUCTORalias0.SALARY ) , DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latitude , longitude , city of the station from which the shortest trip started ?<CODESPLIT>SELECT ORGANISATIONSalias0.ORGANISATION_ID , ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>get the details of employees who manage a department .<CODESPLIT>SELECT ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find out the send dates of the documents with the grant amount of more than var0 were granted by organisation type described<CODESPLIT>SELECT DOCUMENTSalias0.SENT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN GRANTS AS GRANTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE GRANTSalias0.GRANT_AMOUNT > var0 AND ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the response received dates for the documents described as ' var0 ' or granted with more than var1 ?<CODESPLIT>SELECT DOCUMENTSalias0.RESPONSE_RECEIVED_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 ON DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE = DOCUMENTSalias0.DOCUMENT_TYPE_CODE JOIN GRANTS AS GRANTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION = "var0" OR GRANTSalias0.GRANT_AMOUNT > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the project details of the projects which did not hire any staff for a var0 role .<CODESPLIT>SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE HAVING COUNT( * ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show budget type codes and the number of documents in each budget type .<CODESPLIT>SELECT PROJECTSalias0.PROJECT_ID , TASKSalias0.TASK_DETAILS , TASKSalias0.TASK_ID FROM TASKS AS TASKSalias0 JOIN PROJECTS AS PROJECTSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = "var0" UNION SELECT PROJECTSalias1.PROJECT_ID , TASKSalias1.TASK_DETAILS , TASKSalias1.TASK_ID FROM TASKS AS TASKSalias1 JOIN PROJECTS AS PROJECTSalias1 ON TASKSalias1.PROJECT_ID = PROJECTSalias1.PROJECT_ID JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias1.PROJECT_ID GROUP BY PROJECTSalias1.PROJECT_ID HAVING COUNT( TASKSalias1.* ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and partition id for users who tweeted less than twice .<CODESPLIT>SELECT PROJECT_STAFFalias0.DATE_FROM , PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.ROLE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kinds of roles are there for the staff ?<CODESPLIT>SELECT COUNT( DISTINCT PROJECT_STAFFalias0.ROLE_CODE ) FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of papers in var0 in each year .<CODESPLIT>SELECT GRANTSalias0.ORGANISATION_ID , SUM( GRANTSalias0.GRANT_AMOUNT ) FROM GRANTS AS GRANTSalias0 GROUP BY GRANTSalias0.ORGANISATION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the project details of the projects with the research outcome described with the substring ' var0 ' .<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID JOIN RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE WHERE RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many staff does each project has ? List the project id and the number in an ascending order .<CODESPLIT>SELECT COUNT( * ) , PROJECT_STAFFalias0.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECT_STAFFalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECT_STAFFalias0.PROJECT_ID ORDER BY COUNT( * ) ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the complete description of the var0 role .<CODESPLIT>SELECT STAFF_ROLESalias0.ROLE_DESCRIPTION FROM STAFF_ROLES AS STAFF_ROLESalias0 WHERE STAFF_ROLESalias0.ROLE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the first staff for the projects started working ?<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which project made the most number of outcomes ? List the project details and the project id .<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which projects have no outcome ? List the project details .<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.PROJECT_ID NOT IN ( SELECT PROJECT_OUTCOMESalias0.PROJECT_ID FROM PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which organisation hired the most number of research staff ? List the organisation id , type and detail .<CODESPLIT>SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS , ORGANISATIONSalias0.ORGANISATION_ID , ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the role description and the id of the project staff involved in most number of project outcomes ?<CODESPLIT>SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which document type is described with the prefix ' Initial ' ?<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY NOT IN ( SELECT DISTINCT ADDRESSESalias1.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias1 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For grants with both documents described as ' var0 ' and documents described as ' var1 ' , list its start date .<CODESPLIT>SELECT AVG( FLIGHTalias0.DISTANCE ) , AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents can one grant have at most ? List the grant id and number .<CODESPLIT>SELECT COUNT( * ) , DOCUMENTSalias0.GRANT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY GRANT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the organisation type description of the organisation detailed as ' var0 ' .<CODESPLIT>SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN WEATHER AS WEATHERalias0 ON WEATHERalias0.ZIP_CODE = TRIPalias0.ZIP_CODE GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the details of the organisations described as ' var0 ' ? Sort the result in an ascending order .<CODESPLIT>SELECT CHIP_MODELalias0.WIFI , SCREEN_MODEalias0.TYPE FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME JOIN SCREEN_MODE AS SCREEN_MODEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.HARDWARE_MODEL_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var0 outcomes are generated from all the projects ?<CODESPLIT>SELECT COUNT( * ) FROM PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 WHERE PROJECT_OUTCOMESalias0.OUTCOME_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many project staff worked as var0s or started working before ' var1 ' ?<CODESPLIT>SELECT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 JOIN EVENTS AS EVENTSalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID WHERE EVENTSalias0.EVENT_DETAILS = "var0" INTERSECT SELECT SERVICESalias1.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias1 JOIN EVENTS AS EVENTSalias1 ON SERVICESalias1.SERVICE_ID = EVENTSalias1.SERVICE_ID WHERE EVENTSalias1.EVENT_DETAILS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last date of the staff leaving the projects ?<CODESPLIT>SELECT PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ORDER BY PROJECT_STAFFalias0.DATE_TO DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids , customer ids , card type codes , card numbers for all cards .<CODESPLIT>SELECT RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION FROM RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE JOIN PROJECTS AS PROJECTSalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What distinct accelerator names are compatible with the browswers that have market share higher than var0 ?<CODESPLIT>SELECT COUNT( * ) , PROJECTSalias0.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the schools that were either founded after var0 or public .<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.ORGANISATION_ID IN ( SELECT PROJECTSalias1.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias1 GROUP BY ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the research staff details , and order in ascending order .<CODESPLIT>SELECT RESEARCH_STAFFalias0.STAFF_DETAILS FROM RESEARCH_STAFF AS RESEARCH_STAFFalias0 ORDER BY RESEARCH_STAFFalias0.STAFF_DETAILS ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tasks are there in total ?<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tasks does each project have ? List the task count and the project detail .<CODESPLIT>SELECT COUNT( TASKSalias0.* ) , PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN TASKS AS TASKSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the staff roles of the staff who<CODESPLIT>SELECT PROJECT_STAFFalias0.ROLE_CODE FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.DATE_FROM > "var0" AND PROJECT_STAFFalias0.DATE_TO < "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the descriptions of all the project outcomes ?<CODESPLIT>SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE LAT < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the decor of room var0 ?<CODESPLIT>SELECT PROJECT_STAFFalias0.ROLE_CODE FROM PROJECT_STAFF AS PROJECT_STAFFalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many friends does var0 have ?<CODESPLIT>SELECT COUNT( DERIVED_TABLEalias0.FRIEND ) FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE PERSONalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var0s does this network has ?<CODESPLIT>SELECT PROJECTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age for all person ?<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states have no bordering state<CODESPLIT>SELECT COUNT( DISTINCT PERSONalias0.CITY ) FROM PERSON AS PERSONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many type of jobs do they have ?<CODESPLIT>SELECT COUNT( DISTINCT PERSONalias0.JOB ) FROM PERSON AS PERSONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the oldest person ?<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the oldest person whose job is var0 ?<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the youngest var0 ?<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.GENDER = "var1" ) AND PERSONalias0.GENDER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How old is the var0 named var1 ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var0" EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the person whose age is below var0 ?<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many people whose age is greater var0 and job is var1 ?<CODESPLIT>SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE > var0 AND PERSONalias0.JOB = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age for each gender ?<CODESPLIT>SELECT MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.MUSEUM_ID NOT IN ( SELECT VISITalias0.MUSEUM_ID FROM VISIT AS VISITalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average age for different job title ?<CODESPLIT>SELECT GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average age of var0 for different job title ?<CODESPLIT>SELECT WEATHERalias0.CLOUD_COVER , WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.CLOUD_COVER DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is minimum age for different job title ?<CODESPLIT>SELECT MIN( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.JOB ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of people who is under var0 for each gender .<CODESPLIT>SELECT COUNT( * ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 WHERE AGE < var0 GROUP BY PERSONalias0.GENDER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of people whose age is greater than any var0 sorted by their age .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE AGE > ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = "var0" ) ORDER BY PERSONalias0.AGE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of people whose age is greater than all var0s .<CODESPLIT>SELECT DERIVED_TABLEalias0.LOCATION_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ON DOCUMENT_LOCATIONSalias0.DOCUMENT_ID = ALL_DOCUMENTSalias0.DOCUMENT_ID JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different industries are the companies in ?<CODESPLIT>SELECT PERSONalias0.JOB , PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states neighbor var0<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.AGE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the transaction types and the total amount of transactions .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE GENDER = "var0" ORDER BY PERSONalias0.AGE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and age of the person who is a friend of both var0 and var1 .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>through which states does the longest river in var0 run<CODESPLIT>SELECT DISTINCT PERSONalias0.AGE , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = "var0" OR DERIVED_TABLEalias0.FRIEND = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the email of the student with first name " var0 " and last name " var1 " ?<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) INTERSECT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the person who has friends with age above var0 but not under age var1 ?<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) EXCEPT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " var1 " and featuring " var0 "<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias1 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias1.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias1.JOB = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find distinct cities of address of students ?<CODESPLIT>SELECT NAME FROM PERSONFRIEND GROUP BY NAME HAVING COUNT( * ) = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are the friends of var0 ?<CODESPLIT>SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE PERSONalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of persons who are friends with var0 .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of var1s who are friends with var0<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = "var0" AND PERSONalias0.GENDER = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the var1 friends of var0 .<CODESPLIT>SELECT SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the var1 friend of var0 whose job is a var2 ?<CODESPLIT>SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 EXCEPT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has a friend that is from var0 ?<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SINGER_ID NOT IN ( SELECT SONGalias0.SINGER_ID FROM SONG AS SONGalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has friends that are younger than the average age ?<CODESPLIT>SELECT MAX( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has friends that are older than the average age ? Print their friends and their ages as well<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.FRIEND , DERIVED_TABLEalias0.NAME , PERSONalias0.AGE FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.AGE > ( SELECT AVG( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the friend of var0 with longest year relationship ?<CODESPLIT>SELECT COUNT( REPRESENTATIVEalias0.* ) , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY REPRESENTATIVEalias0.PARTY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of the friend of var0 with longest year relationship ?<CODESPLIT>SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME FROM ARCHITECT AS ARCHITECTalias0 JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct region of clubs in ascending alphabetical order .<CODESPLIT>SELECT NAME FROM PERSONFRIEND WHERE FRIEND = "var0" AND YEAR = ( SELECT MIN( YEAR ) FROM PERSONFRIEND WHERE FRIEND = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , age , and job title of persons who are friends with var0 for the longest years .<CODESPLIT>SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the person that has no friend ?<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT NAME FROM PERSONFRIEND ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which person whose friends have the oldest average age ?<CODESPLIT>SELECT AVG( PERSONalias0.AGE ) , DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND GROUP BY DERIVED_TABLEalias0.NAME ORDER BY AVG( PERSONalias0.AGE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of people who has no friend living in the city of var0 .<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENT_ADDRESSESalias0.STUDENT_ID FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_ADDRESSESalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_ADDRESSESalias0.STUDENT_ID ORDER BY AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find var0's friends of friends .<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias2.NAME FROM PERSONFRIEND AS DERIVED_TABLEalias0 JOIN PERSON AS PERSONalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.NAME = DERIVED_TABLEalias0.FRIEND JOIN PERSONFRIEND AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.NAME = DERIVED_TABLEalias1.FRIEND WHERE DERIVED_TABLEalias2.NAME != "var1" AND PERSONalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct incident type codes are there ?<CODESPLIT>SELECT COUNT( * ) FROM MEMBER AS MEMBERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of members in ascending alphabetical order .<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and countries of members ?<CODESPLIT>SELECT MEMBERalias0.COUNTRY , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of photos taken with the lens brand ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.COUNTRY = "var0" OR MEMBERalias0.COUNTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the company of the tallest entrepreneur .<CODESPLIT>SELECT COUNT( * ) , MEMBERalias0.COUNTRY FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.COUNTRY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common country across members .<CODESPLIT>SELECT MEMBERalias0.COUNTRY FROM MEMBER AS MEMBERalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries have more than two members ?<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the leader names and locations of colleges .<CODESPLIT>SELECT COLLEGEalias0.COLLEGE_LOCATION , COLLEGEalias0.LEADER_NAME FROM COLLEGE AS COLLEGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and names of colleges they go to .<CODESPLIT>SELECT COLLEGEalias0.NAME , MEMBERalias0.NAME FROM COLLEGE AS COLLEGEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names .<CODESPLIT>SELECT COLLEGEalias0.COLLEGE_LOCATION , MEMBERalias0.NAME FROM COLLEGE AS COLLEGEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID ORDER BY MEMBERalias0.NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student IDs with more than total var0 hours per week on all sports played .<CODESPLIT>SELECT DISTINCT COLLEGEalias0.LEADER_NAME FROM COLLEGE AS COLLEGEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID WHERE MEMBERalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and the decoration themes they have .<CODESPLIT>SELECT MEMBERalias0.NAME , ROUNDalias0.DECORATION_THEME FROM MEMBER AS MEMBERalias0 JOIN ROUND AS ROUNDalias0 ON ROUNDalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members that have a rank in round higher than var0 .<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 JOIN ROUND AS ROUNDalias0 ON ROUNDalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID WHERE ROUNDalias0.RANK_IN_ROUND > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members in ascending order of their rank in rounds .<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 JOIN ROUND AS ROUNDalias0 ON ROUNDalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID ORDER BY ROUNDalias0.RANK_IN_ROUND ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of members who did not participate in any round .<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT ROUNDalias0.MEMBER_ID FROM ROUND AS ROUNDalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many activities does var0 var1 participate in ?<CODESPLIT>SELECT DOCUMENTSalias0.ACCESS_COUNT , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ORDER BY DOCUMENTSalias0.DOCUMENT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the document that has been accessed the greatest number of times , as well as the count of how many times it has been accessed ?<CODESPLIT>SELECT CARS_DATAalias0.HORSEPOWER FROM CARS_DATA AS CARS_DATAalias0 ORDER BY CARS_DATAalias0.ACCELERATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the types of documents with more than var0 documents .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total access count of all documents in the most popular document type .<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the highest acc percent score in the competition ?<CODESPLIT>SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the structure of the document with the least number of accesses ?<CODESPLIT>SELECT DOCUMENT_STRUCTURESalias0.DOCUMENT_STRUCTURE_DESCRIPTION FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_STRUCTURES AS DOCUMENT_STRUCTURESalias0 ON DOCUMENT_STRUCTURESalias0.DOCUMENT_STRUCTURE_CODE = DOCUMENTSalias0.DOCUMENT_STRUCTURE_CODE GROUP BY DOCUMENTSalias0.DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the type of the document named " var0 " ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>order all gas station locations by the opening year .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT var0 INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What document types do have more than var0 total access number .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING SUM( DOCUMENTSalias0.ACCESS_COUNT ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the section titles of the document named " var0 " ?<CODESPLIT>SELECT DOCUMENT_SECTIONSalias0.SECTION_TITLE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the name of documents without any sections .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_CODE NOT IN ( SELECT DOCUMENT_SECTIONSalias0.DOCUMENT_CODE FROM DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the username and passwords of users with the most popular role .<CODESPLIT>SELECT USERSalias0.PASSWORD , USERSalias0.USER_NAME FROM USERS AS USERSalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average access counts of documents with functional area " var0 " .<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names of the document without any images .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 EXCEPT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias1.DOCUMENT_CODE JOIN DOCUMENT_SECTIONS_IMAGES AS DOCUMENT_SECTIONS_IMAGESalias0 ON DOCUMENT_SECTIONSalias0.SECTION_ID = DOCUMENT_SECTIONS_IMAGESalias0.SECTION_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many car models are produced by each maker ? List the count and the maker full name .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE GROUP BY DOCUMENTSalias0.DOCUMENT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the document names which contains " var0 " .<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM MEDIATYPE AS DERIVED_TABLEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.MEDIATYPEID = DERIVED_TABLEalias0.MEDIATYPEID GROUP BY TRACKalias0.MEDIATYPEID ORDER BY COUNT( TRACKalias0.* ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many users are logged in ?<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY , PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the description of the most popular role among the users that have logged in .<CODESPLIT>SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = ( SELECT USERSalias0.ROLE_CODE FROM USERS AS USERSalias0 WHERE USER_LOGIN = var0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average access count of documents with the least popular structure .<CODESPLIT>SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all employees with salary more than the average .<CODESPLIT>SELECT IMAGESalias0.IMAGE_NAME , IMAGESalias0.IMAGE_URL FROM IMAGES AS IMAGESalias0 ORDER BY IMAGESalias0.IMAGE_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of users in each role .<CODESPLIT>SELECT COUNT( * ) , USERSalias0.ROLE_CODE FROM USERS AS USERSalias0 GROUP BY USERSalias0.ROLE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries has the most number of airlines whose active status is ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) FROM COMPANIES AS COMPANIESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of companies in descending order of market value .<CODESPLIT>SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.MARKET_VALUE_BILLION DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of companies whose headquarters are not " var0 " ?<CODESPLIT>SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.HEADQUARTERS != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and assets of each company , sorted in ascending order of company name ?<CODESPLIT>SELECT COMPANIESalias0.ASSETS_BILLION , COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average profits of companies ?<CODESPLIT>SELECT PRODUCTS_FOR_HIREalias0.PRODUCT_DESCRIPTION , PRODUCTS_FOR_HIREalias0.PRODUCT_NAME FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 WHERE PRODUCTS_FOR_HIREalias0.DAILY_HIRE_COST < var1 AND PRODUCTS_FOR_HIREalias0.PRODUCT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum sales of the companies whose industries are not " var0 " .<CODESPLIT>SELECT MAX( COMPANIESalias0.SALES_BILLION ) , MIN( COMPANIESalias0.SALES_BILLION ) FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.INDUSTRY != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birth dates of employees living in var0 ?<CODESPLIT>SELECT COUNT( DISTINCT COMPANIESalias0.INDUSTRY ) FROM COMPANIES AS COMPANIESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of buildings in descending order of building height .<CODESPLIT>SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where does the customer with the first name Linda live ? And what is her email ?<CODESPLIT>SELECT BUILDINGSalias0.STORIES FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the apartment type codes and apartment numbers in the buildings managed by " var0 " .<CODESPLIT>SELECT BUILDINGSalias0.NAME , COMPANIESalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of the buildings that have more than one company offices .<CODESPLIT>SELECT SUM( CHECKINGalias0.BALANCE ) FROM CHECKING AS CHECKINGalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of the building that has the most company offices .<CODESPLIT>SELECT COUNT( DISTINCT DEPT_NAME ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the names of the buildings whose status is " var0 " , in ascending order of stories .<CODESPLIT>SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 WHERE STATUS = "var0" ORDER BY BUILDINGSalias0.STORIES ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show each industry and the corresponding number of companies in that industry .<CODESPLIT>SELECT COUNT( USER_PROFILESalias0.* ) , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses are offered ?<CODESPLIT>SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 GROUP BY INDUSTRY ORDER BY COUNT( * ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the industry shared by the most companies .<CODESPLIT>SELECT MAX( ENZYMEalias0.OMIM ) FROM ENZYME AS ENZYMEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of buildings that have no company office .<CODESPLIT>SELECT TREATMENTSalias0.COST_OF_TREATMENT , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENTS AS TREATMENTSalias0 JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did var0 publish ?<CODESPLIT>SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.HEADQUARTERS = "var0" INTERSECT SELECT COMPANIESalias1.INDUSTRY FROM COMPANIES AS COMPANIESalias1 WHERE COMPANIESalias1.HEADQUARTERS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the high schooler who has the greatest number of likes ?<CODESPLIT>SELECT COUNT( * ) FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.INDUSTRY = "var0" OR COMPANIESalias0.INDUSTRY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the headquarters shared by more than two companies .<CODESPLIT>SELECT COMPANIESalias0.HEADQUARTERS FROM COMPANIES AS COMPANIESalias0 GROUP BY COMPANIESalias0.HEADQUARTERS HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries of perpetrators ? Show each country and the corresponding number of perpetrators there .<CODESPLIT>SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of products in ascending order of price .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and type codes of products ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the prices of the products named " var0 " or " var1 " .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" OR PRODUCTSalias0.PRODUCT_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average price for products ?<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which classrooms are used by grade var0 ?<CODESPLIT>SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common type code across products .<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product type codes that have at least two products .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product type codes that have both products with price higher than var0 and products with price lower than var1 .<CODESPLIT>SELECT COMPANYalias0.COMPANY , COMPANYalias0.RANK FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_BILLION DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of products and the number of events they are in .<CODESPLIT>SELECT COUNT( PROTEINalias0.* ) , INSTITUTIONalias0.INSTITUTION FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID GROUP BY INSTITUTIONalias0.INSTITUTION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of products and the number of events they are in , sorted by the number of events in descending order .<CODESPLIT>SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ORDER BY COUNT( * ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of products that are in at least two events .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of products that are in at least two events in ascending alphabetical order of product name .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME HAVING COUNT( * ) >= var0 ORDER BY PRODUCTSalias0.PRODUCT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which shipping agent shipped the most documents ? List the shipping agent name and the number of documents .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT PRODUCTS_IN_EVENTSalias0.PRODUCT_ID FROM PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artworks are there ?<CODESPLIT>SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.NAME , ROUTESalias0.SRC_APID FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY ROUTESalias0.SRC_APID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of artworks in ascending alphabetical order .<CODESPLIT>SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 ORDER BY ARTWORKalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of artworks whose type is not " var0 " .<CODESPLIT>SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 WHERE ARTWORKalias0.TYPE != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of colleges that have at least two players in descending alphabetical order .<CODESPLIT>SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME , FESTIVAL_DETAILalias0.LOCATION FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the chairs of festivals , sorted in ascending order of the year held ?<CODESPLIT>SELECT USERalias0.NAME FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID GROUP BY USERalias0.NAME HAVING AVG( REVIEWalias0.RATING ) < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location of the festival with the largest number of audience ?<CODESPLIT>SELECT DOCUMENT_STATUS_CODE FROM REF_DOCUMENT_STATUS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of festivals held in year var0 ?<CODESPLIT>SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 WHERE FESTIVAL_DETAILalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of audience for festivals ?<CODESPLIT>SELECT AVG( FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE ) FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and location of the wrestlers ?<CODESPLIT>SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ORDER BY FESTIVAL_DETAILalias0.YEAR DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each nomination , show the name of the artwork and name of the festival where it is nominated .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" EXCEPT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show distinct types of artworks that are nominated in festivals in var0 .<CODESPLIT>SELECT DISTINCT ARTWORKalias0.TYPE FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID WHERE FESTIVAL_DETAILalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of artworks in ascending order of the year they are nominated in .<CODESPLIT>SELECT ARTWORKalias0.NAME FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID ORDER BY FESTIVAL_DETAILalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of festivals that have nominated artworks of type " var0 " .<CODESPLIT>SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID WHERE ARTWORKalias0.TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids and names of festivals that have at least two nominations for artworks .<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id , name of each festival and the number of artworks it has nominated .<CODESPLIT>SELECT GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show different types of artworks with the corresponding number of artworks of each type .<CODESPLIT>SELECT ARTWORKalias0.TYPE , COUNT( * ) FROM ARTWORK AS ARTWORKalias0 GROUP BY ARTWORKalias0.TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the most common type of artworks .<CODESPLIT>SELECT ARTWORKalias0.TYPE FROM ARTWORK AS ARTWORKalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries speak both var0 and var1 ?<CODESPLIT>SELECT FESTIVAL_DETAILalias0.YEAR FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 GROUP BY FESTIVAL_DETAILalias0.YEAR HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of parties with at least var0 events ?<CODESPLIT>SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 WHERE ARTWORKalias0.ARTWORK_ID NOT IN ( SELECT NOMINATIONalias0.ARTWORK_ID FROM NOMINATION AS NOMINATIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the different record companies and the corresponding number of orchestras .<CODESPLIT>SELECT FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 WHERE FESTIVAL_DETAILalias0.YEAR = var0 OR FESTIVAL_DETAILalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the total number of the audiences who visited any of the festivals ?<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which year are there festivals both inside the ' var0 ' and outside the ' var0 ' ?<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of ratings that has more than var1 var0 ?<CODESPLIT>SELECT COUNT( * ) FROM PREMISES AS PREMISESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the distinct premise types ?<CODESPLIT>SELECT DISTINCT PREMISESalias0.PREMISES_TYPE FROM PREMISES AS PREMISESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the types and details for all premises and order by the premise type .<CODESPLIT>SELECT PREMISESalias0.PREMISES_TYPE , PREMISESalias0.PREMISE_DETAILS FROM PREMISES AS PREMISESalias0 ORDER BY PREMISESalias0.PREMISES_TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each premise type and the number of premises in that type .<CODESPLIT>SELECT COUNT( * ) , PREMISESalias0.PREMISES_TYPE FROM PREMISES AS PREMISESalias0 GROUP BY PREMISESalias0.PREMISES_TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct product categories along with the number of mailshots in each category .<CODESPLIT>SELECT COUNT( * ) , MAILSHOT_CAMPAIGNSalias0.PRODUCT_CATEGORY FROM MAILSHOT_CAMPAIGNS AS MAILSHOT_CAMPAIGNSalias0 GROUP BY MAILSHOT_CAMPAIGNSalias0.PRODUCT_CATEGORY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and phone of the customer without any mailshot .<CODESPLIT>SELECT UNDERGOESalias0.PATIENT FROM UNDERGOES AS UNDERGOESalias0 ORDER BY DATEUNDERGOES LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all the distinct product names in alphabetical order ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the outcome code of mailshots along with the number of mailshots in each outcome code .<CODESPLIT>SELECT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of different states which banks are located at .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE OUTCOME_CODE = "var0" GROUP BY MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of customers who have the most mailshots .<CODESPLIT>SELECT MAX( TRANSACTIONSalias0.SHARE_COUNT ) , MIN( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and payment method of customers who have both mailshots in ' var0 ' outcome and mailshots in ' var1 ' outcome .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.PAYMENT_METHOD FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE = "var0" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME , CUSTOMERSalias1.PAYMENT_METHOD FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias1 JOIN CUSTOMERS AS CUSTOMERSalias1 ON MAILSHOT_CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias1.OUTCOME_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the premise type and address type code for all customer addresses .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID WHERE PEOPLEalias0.HOMETOWN != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct address type codes for all customer addresses ?<CODESPLIT>SELECT DISTINCT CUSTOMER_ADDRESSESalias0.ADDRESS_TYPE_CODE FROM CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the shipping charge and customer id for customer orders with order status var0 or var1 .<CODESPLIT>SELECT CUSTOMER_ORDERSalias0.CUSTOMER_ID , CUSTOMER_ORDERSalias0.ORDER_SHIPPING_CHARGES FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = "var0" OR CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List every album whose title starts with A in alphabetical order .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = "var1" AND CUSTOMER_ORDERSalias0.SHIPPING_METHOD_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many courses have more than var0 credits ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all names of courses with var0 credit ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.POPULATION > ( SELECT MIN( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which courses are taught on days var0 ?<CODESPLIT>SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DAYS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of departments in Division " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DIVISION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the phones of departments in Room var0 ?<CODESPLIT>SELECT DPHONE FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.ROOM = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students that have at least one grade " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT STUID ) FROM ENROLLED_IN AS ENROLLED_INalias0 WHERE ENROLLED_INalias0.GRADE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the max and min grade point for all letter grade .<CODESPLIT>SELECT MAX( GRADEPOINT ) , MIN( GRADEPOINT ) FROM GRADECONVERSION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first nvar0mes of students whose first nvar0mes contvar0in letter " var0 " .<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = "var0" ) AND RESTAURANTalias0.RATING > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and last names of male (sex is var0) faculties who live in building var1 .<CODESPLIT>SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = "var1" AND FACULTYalias0.SEX = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of papers in the var0 conference in var1 .<CODESPLIT>SELECT FACULTYalias0.ROOM FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = "var1" AND FACULTYalias0.RANK = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the department name that is in Building " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT ALLERGYTYPE ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information about courses sorted by credits in the ascending order .<CODESPLIT>SELECT * FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.CREDITS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List pairs of the owner's first name and the dogs's name .<CODESPLIT>SELECT CNAME FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.CREDITS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the percentage of hispanics in cities with the black percentage higher than var0 ?<CODESPLIT>SELECT FNAME FROM STUDENT AS STUDENTalias0 ORDER BY STUDENTalias0.AGE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0ind the last name of female (sex is var0) students in the descending order of age .<CODESPLIT>SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE SEX = "var0" ORDER BY STUDENTalias0.AGE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of faculties in building var0 in alphabetic order .<CODESPLIT>SELECT COUNT( * ) FROM CAMERA_LENS AS CAMERA_LENSalias0 WHERE CAMERA_LENSalias0.ID NOT IN ( SELECT PHOTOSalias0.CAMERA_LENS_ID FROM PHOTOS AS PHOTOSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of faculties of rank var0 in alphabetic order .<CODESPLIT>SELECT FNAME FROM FACULTY AS FACULTYalias0 WHERE RANK = "var0" ORDER BY FNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department that has the biggest number of students minored in ?<CODESPLIT>SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias0.DNO GROUP BY MINOR_INalias0.DNO ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department that has no students minored in ?<CODESPLIT>SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 EXCEPT SELECT DEPARTMENTalias1.DNAME FROM DEPARTMENT AS DEPARTMENTalias1 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias1.DNO ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the department that has the fewest members .<CODESPLIT>SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.DNO = DEPARTMENTalias0.DNO GROUP BY MEMBER_OFalias0.DNO ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the rank of the faculty that the fewest faculties belong to .<CODESPLIT>SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first and last names of the instructors who teach the top var0 number of courses ?<CODESPLIT>SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which building does the instructor who teaches the most number of courses live in ?<CODESPLIT>SELECT FACULTYalias0.BUILDING FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR GROUP BY COURSEalias0.INSTRUCTOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which players are from var0 ?<CODESPLIT>SELECT COURSEalias0.CNAME FROM COURSE AS COURSEalias0 JOIN ENROLLED_IN AS ENROLLED_INalias0 ON ENROLLED_INalias0.CID = COURSEalias0.CID GROUP BY ENROLLED_INalias0.CID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and last name of the instructor of course that has course name<CODESPLIT>SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR WHERE COURSEalias0.CNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the department name and room of the course var0 .<CODESPLIT>SELECT COUNT( * ) FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.YEAR = var0 OR MATCHESalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the student first and last names and grade points of all enrollments .<CODESPLIT>SELECT DERIVED_TABLEalias0.GRADEPOINT , STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of properties that are either houses or apartments with more than var2 room ?<CODESPLIT>SELECT DISTINCT STUDENTalias0.FNAME FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE DERIVED_TABLEalias0.GRADEPOINT >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the full names of faculties who are members of department with department number var0 .<CODESPLIT>SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.FACID = FACULTYalias0.FACID WHERE MEMBER_OFalias0.DNO = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first names and last names of the students that minor in the department with DNO var0 .<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM MINOR_IN AS MINOR_INalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MINOR_INalias0.STUID WHERE MINOR_INalias0.DNO = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which song has the most vocals ?<CODESPLIT>SELECT FACULTYalias0.LNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN FACULTY AS FACULTYalias0 ON MEMBER_OFalias0.DNO = DEPARTMENTalias0.DNO JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.FACID = FACULTYalias0.FACID WHERE DEPARTMENTalias0.DNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average grade point of student whose last name is var0 .<CODESPLIT>SELECT WRESTLERalias0.LOCATION , WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the wheels and locations of the railways .<CODESPLIT>SELECT MAX( DERIVED_TABLEalias0.GRADEPOINT ) , MIN( DERIVED_TABLEalias0.GRADEPOINT ) FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE STUDENTalias0.CITY_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of courses that have either var0 credits or var1 credit but var2 hours .<CODESPLIT>SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = var0 UNION SELECT CNAME FROM COURSE AS COURSEalias1 WHERE COURSEalias1.CREDITS = var1 AND COURSEalias1.HOURS = var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , type , and flag of the ship that is built in the most recent year .<CODESPLIT>SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DIVISION = "var0" UNION SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias1 WHERE DEPARTMENTalias1.DIVISION = "var1" AND DEPARTMENTalias1.BUILDING = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students not enrolled in any course .<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer first , last name and id with least number of accounts .<CODESPLIT>SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ORDER BY PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the product id and product type of the cheapest product ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of different product types .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.POPULATION > ( SELECT MIN( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the address of customer var0 .<CODESPLIT>SELECT ADDRESSESalias0.ADDRESS_DETAILS FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all every engineer's first name , last name , details and coresponding skill description .<CODESPLIT>SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_ID FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each payment method , return how many customers use it .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.PAYMENT_METHOD_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.PAYMENT_METHOD_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the campuses opened before var0 .<CODESPLIT>SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct hometowns that are not associated with any gymnast .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMER_ORDERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average price for each type of product ?<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many department stores does the store chain var0 have ?<CODESPLIT>SELECT PRODUCT_CATEGORY_DESCRIPTION FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and job title of the staff who was assigned the latest ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and id of the top var0 expensive rooms .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_PRICE , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average amount due for all the payments ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = "var0" ORDER BY CUSTOMER_ORDERSalias0.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and address of the customers who have both var0 and var1 orders .<CODESPLIT>SELECT BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_END , BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_START FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = BEHAVIOR_INCIDENTalias0.STUDENT_ID WHERE STUDENTSalias0.LAST_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the cinema names and opening years in descending order of opening year .<CODESPLIT>SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) AND PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and name of the department store that has both var0 and var1 department ?<CODESPLIT>SELECT DEPARTMENT_STORESalias0.DEPT_STORE_ID , DEPARTMENT_STORESalias0.STORE_NAME FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 ON DEPARTMENT_STORESalias0.DEPT_STORE_ID = DEPARTMENTSalias0.DEPT_STORE_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = "var0" INTERSECT SELECT DEPARTMENT_STORESalias1.DEPT_STORE_ID , DEPARTMENT_STORESalias1.STORE_NAME FROM DEPARTMENTS AS DEPARTMENTSalias1 JOIN DEPARTMENT_STORES AS DEPARTMENT_STORESalias1 ON DEPARTMENT_STORESalias1.DEPT_STORE_ID = DEPARTMENTSalias1.DEPT_STORE_ID WHERE DEPARTMENTSalias1.DEPARTMENT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which document has the most draft copies ? List its document id and number of draft copies .<CODESPLIT>SELECT DEPT_STORE_CHAIN_ID FROM DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 GROUP BY DEPT_STORE_CHAIN_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the department with the least number of staff ?<CODESPLIT>SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.LAST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = "var0" UNION SELECT PROFESSIONALSalias1.CELL_NUMBER , PROFESSIONALSalias1.LAST_NAME , PROFESSIONALSalias1.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias1.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each product type , return the maximum and minimum price .<CODESPLIT>SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID NOT IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the product type whose average price is higher than the average price of all products .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING AVG( PRODUCTSalias0.PRODUCT_PRICE ) > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and name of the staff who has been assigned for the shortest period .<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names and ids of all products whose price is between var0 and var1 .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of all distinct customers who made order after some orders that were var0 .<CODESPLIT>SELECT DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_DATE > ( SELECT MIN( CUSTOMER_ORDERSalias1.ORDER_DATE ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all airline names and their abbreviations in " var0 " .<CODESPLIT>SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO < ( SELECT MAX( STAFF_DEPARTMENT_ASSIGNMENTSalias1.DATE_ASSIGNED_TO ) FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias1 WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias1.JOB_TITLE_CODE = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and ids of customers whose address contains var0 ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name and gender of the staff who was assigned in 2016 .<CODESPLIT>SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_FROM LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of staff who has been assigned multiple jobs .<CODESPLIT>SELECT STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID GROUP BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID HAVING COUNT( STAFF_DEPARTMENT_ASSIGNMENTSalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and phone number of all suppliers in the alphabetical order of their addresses .<CODESPLIT>SELECT SUPPLIERSalias0.SUPPLIER_NAME , SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 JOIN SUPPLIER_ADDRESSES AS SUPPLIER_ADDRESSESalias0 ON SUPPLIER_ADDRESSESalias0.SUPPLIER_ID = SUPPLIERSalias0.SUPPLIER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON SUPPLIER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ORDER BY ADDRESSESalias0.ADDRESS_DETAILS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the phone numbers of all customers and suppliers .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the ids of all products that were ordered more than three times or supplied more than var1 .<CODESPLIT>SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.PRODUCT_ID HAVING COUNT( * ) > var0 UNION SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 GROUP BY PRODUCT_SUPPLIERSalias0.PRODUCT_ID HAVING SUM( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are id and name of the products whose price is lower than var0 or higher than var1 ?<CODESPLIT>SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT MAX( ENR ) FROM COLLEGE AS COLLEGEalias1 WHERE COLLEGEalias1.STATE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of suppliers whose average amount purchased for each product is above var0 or below var1 .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT var0 INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average amount purchased and value purchased for the supplier who supplies the most products .<CODESPLIT>SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.PILOT_ID NOT IN ( SELECT MATCHalias0.WINNING_PILOT FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COUNTRY = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total revenue of all companies whose main office is at var0 or var1 ?<CODESPLIT>SELECT MAX( CUSTOMERSalias0.CUSTOMER_CODE ) , MIN( CUSTOMERSalias0.CUSTOMER_CODE ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all the distinct customers who bought a var0 .<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of aircraft which fewest people have its certificate .<CODESPLIT>SELECT DISTINCT SUPPLIERSalias0.SUPPLIER_NAME , SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 JOIN PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ON SUPPLIERSalias0.SUPPLIER_ID = PRODUCT_SUPPLIERSalias0.SUPPLIER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the highest and lowest prices of products , grouped by and alphabetically ordered by product type ?<CODESPLIT>SELECT MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCT_TYPE_CODE ORDER BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the order id , customer id for orders in var0 status , ordered by their order dates .<CODESPLIT>SELECT CUSTOMER_ORDERSalias0.CUSTOMER_ID , CUSTOMER_ORDERSalias0.ORDER_ID FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE ORDER_STATUS_CODE = "var0" ORDER BY CUSTOMER_ORDERSalias0.ORDER_DATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of products that were bought by at least two distinct customers .<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID HAVING COUNT( DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average earnings of poker players with height higher than var0 ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and gender of the staff who has been assigned the job of var0 but never var1 .<CODESPLIT>SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE = "var0" EXCEPT SELECT STAFFalias1.STAFF_GENDER , STAFFalias1.STAFF_NAME FROM STAFF AS STAFFalias1 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias1 ON STAFFalias1.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias1.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias1.JOB_TITLE_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and name of customers whose address contains var0 state and do not use credit card for payment .<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average price of all product clothes .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the most expensive hardware product .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCT_TYPE_CODE = "var0" ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the description of all aircrafts .<CODESPLIT>SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.FOLLOWERS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of international passengers of all airports ?<CODESPLIT>SELECT AVG( AIRPORTalias0.INTERNATIONAL_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the number of international and domestic passengers of the airport named London " Heathrow " ?<CODESPLIT>SELECT AIRPORTalias0.DOMESTIC_PASSENGERS , AIRPORTalias0.INTERNATIONAL_PASSENGERS FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the total number of Domestic Passengers of airports that contain the word " var0 " .<CODESPLIT>SELECT COUNT( CLIMBERalias0.* ) FROM CLIMBER AS CLIMBERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum number of transit passengers of all aiports .<CODESPLIT>SELECT AVG( INVOICESalias0.TOTAL ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY AVG( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name of pilots aged var0 or older ?<CODESPLIT>SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.AGE >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all pilot names in ascending alphabetical order .<CODESPLIT>SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUILDING = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List names of all pilot aged var0 or younger in descending alphabetical order .<CODESPLIT>SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE AGE <= var0 ORDER BY PILOTalias0.NAME DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the names of aircrafts associated with airport with name " var0 " .<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than var0 .<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT , AIRCRAFTalias0.DESCRIPTION FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.TOTAL_PASSENGERS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average total number of passengers of airports that are associated with aircraft " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM CANDIDATE AS CANDIDATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list the location and the winning aircraft name .<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT , MATCHalias0.LOCATION FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the personal names of students not enrolled in any course .<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of aircrafts and the number of times it won matches .<CODESPLIT>SELECT COUNT( PILOT_RECORDalias0.* ) , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID GROUP BY PILOTalias0.PILOT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List names of all pilot in descending order of age .<CODESPLIT>SELECT MATCHESalias0.TOURNEY_NAME FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.TOURNEY_NAME HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and names of the countries which have more than var0 car makers or produce the ' var1 ' model ?<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of aircrafts and that did not win any match .<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_ID NOT IN ( SELECT MATCHalias0.WINNING_AIRCRAFT FROM MATCH AS MATCHalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of aircrafts that are associated with both an airport named " var0 " and an airport named " var1 "<CODESPLIT>SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = "var0" INTERSECT SELECT AIRCRAFTalias1.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias1 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias1 ON AIRPORT_AIRCRAFTalias1.AIRCRAFT_ID = AIRCRAFTalias1.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias1 ON AIRPORTalias1.AIRPORT_ID = AIRPORT_AIRCRAFTalias1.AIRPORT_ID WHERE AIRPORTalias1.AIRPORT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum share of performances whose type is not " var0 " .<CODESPLIT>SELECT * FROM AIRPORT AS AIRPORTalias0 ORDER BY AIRPORTalias0.INTERNATIONAL_PASSENGERS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average enrollment number ?<CODESPLIT>SELECT PILOTalias0.AGE , PILOTalias0.NAME FROM PILOT AS PILOTalias0 JOIN MATCH AS MATCHalias0 ON PILOTalias0.PILOT_ID = MATCHalias0.WINNING_PILOT WHERE PILOTalias0.AGE < var0 GROUP BY MATCHalias0.WINNING_PILOT ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the name and age of the youngest winning pilot ?<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID WHERE CASTalias0.ROLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the name of pilots who did not win the matches held in the country of var0 .<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ARTISTS AS ARTISTSalias0 JOIN ALBUMS AS ALBUMSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names and degree of all professors who are teaching some class in Computer Info . Systems department .<CODESPLIT>SELECT COUNT( * ) , PROPERTIESalias0.PROPERTY_ID FROM PROPERTIES AS PROPERTIESalias0 JOIN RESIDENTS AS RESIDENTSalias0 ON RESIDENTSalias0.PROPERTY_ID = PROPERTIESalias0.PROPERTY_ID GROUP BY PROPERTIESalias0.PROPERTY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the distinct service types that are provided by the organization which has detail ' var0 ' ?<CODESPLIT>SELECT DISTINCT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 JOIN ORGANIZATIONS AS ORGANIZATIONSalias0 ON SERVICESalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID WHERE ORGANIZATIONSalias0.ORGANIZATION_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the longest river<CODESPLIT>SELECT COUNT( * ) , RESIDENTSalias0.OTHER_DETAILS , RESIDENTSalias0.RESIDENT_ID FROM RESIDENTS AS RESIDENTSalias0 JOIN RESIDENTS_SERVICES AS RESIDENTS_SERVICESalias0 ON RESIDENTSalias0.RESIDENT_ID = RESIDENTS_SERVICESalias0.RESIDENT_ID GROUP BY RESIDENTSalias0.RESIDENT_ID ORDER BY COUNT( * ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum number that a certain service is provided ? List the service id , details and number .<CODESPLIT>SELECT COUNT( * ) , SERVICESalias0.SERVICE_DETAILS , SERVICESalias0.SERVICE_ID FROM SERVICES AS SERVICESalias0 JOIN RESIDENTS_SERVICES AS RESIDENTS_SERVICESalias0 ON SERVICESalias0.SERVICE_ID = RESIDENTS_SERVICESalias0.SERVICE_ID GROUP BY SERVICESalias0.SERVICE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id and type of each thing , and the details of the organization that owns it .<CODESPLIT>SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = "var0" ORDER BY SURFACEAREA DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of the products that have their color described as " var0 " and have a characteristic named " var1 " .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ON CUSTOMER_EVENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is each customer's move in date , and the corresponding customer id and details ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMER_EVENTSalias0.DATE_MOVED_IN FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ON CUSTOMER_EVENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which events have the number of notes between one and three ? List the event id and the property id .<CODESPLIT>SELECT DISTINCT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = "var0" INTERSECT SELECT DISTINCT STUDENT_ENROLMENTalias1.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias1 ON STUDENT_ENROLMENTalias1.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias1.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias1.DEGREE_SUMMARY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct id and type of the thing that has the status ' var0 ' or has a status record before the date ' var1 '<CODESPLIT>SELECT DISTINCT THINGSalias0.THING_ID , THINGSalias0.TYPE_OF_THING_CODE FROM TIMED_STATUS_OF_THINGS AS TIMED_STATUS_OF_THINGSalias0 JOIN THINGS AS THINGSalias0 ON TIMED_STATUS_OF_THINGSalias0.THING_ID = THINGSalias0.THING_ID WHERE TIMED_STATUS_OF_THINGSalias0.DATE_AND_DATE < "var1" OR TIMED_STATUS_OF_THINGSalias0.STATUS_OF_THING_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct locations have the things with service detail ' var0 ' been located in ?<CODESPLIT>SELECT COUNT( * ) FROM GAS_STATION AS GAS_STATIONalias0 WHERE GAS_STATIONalias0.OPEN_YEAR BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different status codes of things are there ?<CODESPLIT>SELECT STUID FROM SPORTSINFO INTERSECT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students who are older than var0 and do not have allergy to either var1 or var2 .<CODESPLIT>SELECT ORGANIZATIONSalias0.ORGANIZATION_ID FROM ORGANIZATIONS AS ORGANIZATIONSalias0 EXCEPT SELECT ORGANIZATIONSalias1.PARENT_ORGANIZATION_ID FROM ORGANIZATIONS AS ORGANIZATIONSalias1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When is the last day any resident moved in ?<CODESPLIT>SELECT MAX( RESIDENTSalias0.DATE_MOVED_IN ) FROM RESIDENTS AS RESIDENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the resident details containing the substring ' var0 ' ?<CODESPLIT>SELECT RESIDENTSalias0.OTHER_DETAILS FROM RESIDENTS AS RESIDENTSalias0 WHERE RESIDENTSalias0.OTHER_DETAILS LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the customer event id and the corresponding move in date and property id .<CODESPLIT>SELECT CUSTOMER_EVENTSalias0.CUSTOMER_EVENT_ID , CUSTOMER_EVENTSalias0.DATE_MOVED_IN , CUSTOMER_EVENTSalias0.PROPERTY_ID FROM CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers did not have any event ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT CUSTOMER_EVENTSalias0.CUSTOMER_ID FROM CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the ID for those employees who did two or more jobs in the past .<CODESPLIT>SELECT DISTINCT RESIDENTSalias0.DATE_MOVED_IN FROM RESIDENTS AS RESIDENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids , names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with .<CODESPLIT>SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the locations of schools in descending order of founded year .<CODESPLIT>SELECT COUNT( DISTINCT PHOTOSalias0.NAME ) FROM PHOTOS AS PHOTOSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the enrollments of schools whose denomination is not " var0 " ?<CODESPLIT>SELECT SCHOOLalias0.ENROLLMENT FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.DENOMINATION != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location code for the country " var0 " ?<CODESPLIT>SELECT AVG( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the teams of the players , sorted in ascending alphabetical order ?<CODESPLIT>SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.TEAM ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the team of the player of the highest age .<CODESPLIT>SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the population and life expectancies in var0 ?<CODESPLIT>SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each player , show the team and the location of school they belong to .<CODESPLIT>SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 JOIN LEAGUE AS LEAGUEalias0 ON LEAGUEalias0.COUNTRY_ID = COUNTRYalias0.ID WHERE COUNTRYalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations of schools that have more than var0 player .<CODESPLIT>SELECT COUNT( * ) FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the denomination of the school that has the most players .<CODESPLIT>SELECT SCHOOLalias0.DENOMINATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID GROUP BY PLAYERalias0.SCHOOL_ID ORDER BY COUNT( PLAYERalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show locations and nicknames of schools .<CODESPLIT>SELECT SCHOOL_DETAILSalias0.NICKNAME , SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 JOIN SCHOOL_DETAILS AS SCHOOL_DETAILSalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_DETAILSalias0.SCHOOL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show different denominations and the corresponding number of schools .<CODESPLIT>SELECT DISTINCT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show different denominations and the corresponding number of schools in descending order .<CODESPLIT>SELECT COUNT( * ) , SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY DENOMINATION ORDER BY COUNT( * ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the school color of the school that has the largest enrollment .<CODESPLIT>SELECT ACTORalias0.NAME , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the locations of schools that do not have any player .<CODESPLIT>SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT PLAYERalias0.SCHOOL_ID FROM PLAYER AS PLAYERalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id of students who registered some courses and the number of their registered courses ?<CODESPLIT>SELECT SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.FOUNDED < var0 INTERSECT SELECT SCHOOLalias1.DENOMINATION FROM SCHOOL AS SCHOOLalias1 WHERE SCHOOLalias1.FOUNDED > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information about the assessment notes sorted by date in ascending order .<CODESPLIT>SELECT SCHOOL_DETAILSalias0.NICKNAME FROM SCHOOL_DETAILS AS SCHOOL_DETAILSalias0 WHERE SCHOOL_DETAILSalias0.DIVISION != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the denomination shared by more than one school .<CODESPLIT>SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the distinct district names ordered by city area in descending .<CODESPLIT>SELECT DISTINCT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was the last time var0 published a paper ?<CODESPLIT>SELECT PRODUCTalias0.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias0 GROUP BY PRODUCTalias0.MAX_PAGE_SIZE HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and population of district with population between var0 and var00<CODESPLIT>SELECT DISTRICTalias0.CITY_POPULATION , DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_POPULATION BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name all districts with city area greater than var0 or population larger than var00000<CODESPLIT>SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_AREA > var0 OR DISTRICTalias0.CITY_POPULATION > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which district has the largest population ?<CODESPLIT>SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN ARTISTS AS ARTISTSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which district has the least area ?<CODESPLIT>SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total population of the top var0 districts with the largest area .<CODESPLIT>SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all types of store and number of them .<CODESPLIT>SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of card types .<CODESPLIT>SELECT STOREalias0.STORE_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE DISTRICTalias0.DISTRICT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the stores in the district with the most population .<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 EXCEPT SELECT LOTSalias1.LOT_DETAILS FROM LOTS AS LOTSalias1 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.LOT_ID = LOTSalias1.LOT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city is the headquarter of the store named " var0 " in ?<CODESPLIT>SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE STOREalias0.STORE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of stores in each city .<CODESPLIT>SELECT COUNT( STORE_DISTRICTalias0.* ) , DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the city with the most number of stores .<CODESPLIT>SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ORDER BY COUNT( STORE_DISTRICTalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average pages per minute color ?<CODESPLIT>SELECT AVG( PRODUCTalias0.PAGES_PER_MINUTE_COLOR ) FROM PRODUCT AS PRODUCTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What products are available at store named " var0 " ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var0" EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find products with max page size as " var0 " and pages per minute color smaller than var1 .<CODESPLIT>SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.MAX_PAGE_SIZE = "var0" AND PRODUCTalias0.PAGES_PER_MINUTE_COLOR < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find products with max page size as " var0 " or pages per minute color smaller than var1 .<CODESPLIT>SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.MAX_PAGE_SIZE = "var0" OR PRODUCTalias0.PAGES_PER_MINUTE_COLOR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the product whose name contains the word " var0 " .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.DATE_BECAME_CUSTOMER LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the most prominent max page size among all the products .<CODESPLIT>SELECT PRODUCTalias0.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias0 GROUP BY MAX_PAGE_SIZE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the products that are not using the most frequently-used max page size .<CODESPLIT>SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.PRODUCT != ( SELECT PRODUCTalias1.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias1 GROUP BY MAX_PAGE_SIZE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total population of the districts where the area is bigger than the average city area .<CODESPLIT>SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_AREA > ( SELECT AVG( DISTRICTalias1.CITY_AREA ) FROM DISTRICT AS DISTRICTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of districts where have both city mall and village store type stores .<CODESPLIT>SELECT BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN BENEFITS_OVERPAYMENTS AS BENEFITS_OVERPAYMENTSalias0 ON CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID = BENEFITS_OVERPAYMENTSalias0.CMI_CROSS_REF_ID ORDER BY BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total enrollment number of all colleges ?<CODESPLIT>SELECT SUM( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average enrollment number ?<CODESPLIT>SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many colleges in total ?<CODESPLIT>SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many players have more than var0 hours of training ?<CODESPLIT>SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 WHERE HS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many colleges has more than var0 students ?<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average training hours of all players ?<CODESPLIT>SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = "var0" EXCEPT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of manufactures that are based in var0 or var1 .<CODESPLIT>SELECT HS , PNAME FROM PLAYER AS PLAYERalias0 WHERE HS < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different colleges do attend the tryout test ?<CODESPLIT>SELECT COUNT( DISTINCT CNAME ) FROM TRYOUT AS TRYOUTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the unique types of player positions in the tryout ?<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students got accepted after the tryout ?<CODESPLIT>SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many students whose are playing the role of var0 ?<CODESPLIT>SELECT DISTINCT FORMSalias0.FORM_TYPE_CODE FROM FORMS AS FORMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the shipping charge and customer id for customer orders with order status var0 or var1 .<CODESPLIT>SELECT AVG( HS ) , MAX( HS ) , MIN( HS ) FROM PLAYER AS PLAYERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average enrollment of colleges in the state var0 ?<CODESPLIT>SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of players whose training hours is between var0 and 1var0 ?<CODESPLIT>SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.PHONE_ID NOT IN ( SELECT PHONE_MARKETalias0.PHONE_ID FROM PHONE_MARKET AS PHONE_MARKETalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the plvar0yers whose nvar0mes contvar0in letter ' var0 ' .<CODESPLIT>SELECT DISTINCT PNAME FROM PLAYER AS PLAYERalias0 WHERE PNAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , enrollment of the colleges whose size is bigger than var0 and location is in state var1 .<CODESPLIT>SELECT CNAME , ENR FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = "var1" AND ENR > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information about college sorted by enrollment number in the ascending order .<CODESPLIT>SELECT * FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the colleges whose enrollment is greater var0 sorted by the college's name .<CODESPLIT>SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ORDER BY CNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of players whose card is var0 in the descending order of training hours .<CODESPLIT>SELECT PNAME FROM PLAYER AS PLAYERalias0 WHERE YCARD = "var0" ORDER BY HS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of different colleges involved in the tryout in alphabetical order .<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.GENDER = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which position is most popular among players in the tryout ?<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students who participate in the tryout for each college ordered by descending count .<CODESPLIT>SELECT CNAME , COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 GROUP BY CNAME ORDER BY COUNT( TRYOUTalias0.* ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is minimum hours of the students playing in different position ?<CODESPLIT>SELECT MIN( PLAYERalias0.HS ) , TRYOUTalias0.PPOS FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID GROUP BY TRYOUTalias0.PPOS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of schools with the top var0 largest size ?<CODESPLIT>SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of school that has the smallest enrollment in each state ?<CODESPLIT>SELECT CNAME , COLLEGEalias0.STATE , MIN( ENR ) FROM COLLEGE AS COLLEGEalias0 GROUP BY COLLEGEalias0.STATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states where have some college students in tryout .<CODESPLIT>SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states where have some college students in tryout and their decisions are var0 .<CODESPLIT>SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many rooms does the var0 building have ?<CODESPLIT>SELECT PLAYERalias0.PNAME , TRYOUTalias0.CNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of all students who were in the tryout sorted in alphabetic order .<CODESPLIT>SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION < ( SELECT MAX( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all tips for " var0 " in var1 .<CODESPLIT>SELECT PLAYERalias0.HS , PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states of the colleges that have students in the tryout who played in var0 position .<CODESPLIT>SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of all students for courses and what are the names of those courses ?<CODESPLIT>SELECT PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" AND TRYOUTalias0.PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the state of the college which player var0 is attending .<CODESPLIT>SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.PNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and the average gpa of department whose students have the highest average gpa ?<CODESPLIT>SELECT AVG( PLAYERalias0.HS ) , MAX( PLAYERalias0.HS ) FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average hours for the students whose tryout decision is var0 .<CODESPLIT>SELECT EVENTalias0.NAME , EVENTalias0.VENUE FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.EVENT_ATTENDANCE DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of pilots from team " var0 " or " var1 " .<CODESPLIT>SELECT MAX( PLAYERalias0.HS ) , PPOS FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.HS > var0 GROUP BY TRYOUTalias0.PPOS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which colleges do the tryout players whose name starts with letter D go to ?<CODESPLIT>SELECT TRYOUTalias0.CNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.PNAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which college has any student who is a var1 and succeeded in the tryout .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var1" AND TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the high schooler who has the greatest number of friends ?<CODESPLIT>SELECT PLAYERalias0.PNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.CNAME = ( SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision .<CODESPLIT>SELECT DISTINCT COLLEGEalias0.ENR , COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of either colleges in var3 with greater than var2 size or in state var1 with less than var0 enrollment .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of schools that have some students playing in var0 and var1 positions .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" INTERSECT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest population<CODESPLIT>SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = "var0" INTERSECT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many schools have some students playing in var0 and var1 positions .<CODESPLIT>SELECT COUNT( * ) FROM ( SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" INTERSECT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of schools that have some players in the var0 position but not in the var1 position .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" EXCEPT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of states that have some college students playing in the var0 position but not in the var1 position .<CODESPLIT>SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = "var0" EXCEPT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many states that have some college students playing in the var0 position but not in the var1 position .<CODESPLIT>SELECT LASTNAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUSTOMERalias1.LASTNAME FROM CUSTOMER AS CUSTOMERalias1 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias1.CUSTOMERID WHERE INVOICEalias0.TOTAL > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the states where have the colleges whose enrollments are less than the largest size .<CODESPLIT>SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 WHERE ENR < ( SELECT MAX( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names of colleges with enrollment greater than that of some (at least one) college in the var0 state .<CODESPLIT>SELECT DISTINCT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT MIN( ENR ) FROM COLLEGE AS COLLEGEalias1 WHERE COLLEGEalias1.STATE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find names of all colleges whose enrollment is greater than that of all colleges in the var0 state .<CODESPLIT>SELECT AVG( ELECTIONalias0.VOTES ) FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID WHERE REPRESENTATIVEalias0.PARTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of enrollment of schools that do not have any var0 player ?<CODESPLIT>SELECT SUM( ENR ) FROM COLLEGE AS COLLEGEalias0 WHERE CNAME NOT IN ( SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of states that has some college whose enrollment is larger than the average enrollment ?<CODESPLIT>SELECT COUNT( DISTINCT COLLEGEalias0.STATE ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of states that has some colleges whose enrollment is smaller than the average enrollment ?<CODESPLIT>SELECT AIRPORTalias0.CITY , AIRPORTalias0.COUNTRY , AIRPORTalias0.ID , AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 ORDER BY AIRPORTalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many devices are there ?<CODESPLIT>SELECT COUNT( * ) FROM DEVICE AS DEVICEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the carriers of devices in ascending alphabetical order .<CODESPLIT>SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.WRESTLER_ID NOT IN ( SELECT ELIMINATIONalias0.WRESTLER_ID FROM ELIMINATION AS ELIMINATIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the carriers of devices whose software platforms are not " var0 " ?<CODESPLIT>SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 WHERE DEVICEalias0.SOFTWARE_PLATFORM != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of shops in ascending order of open year ?<CODESPLIT>SELECT MUSICALalias0.RESULT FROM MUSICAL AS MUSICALalias0 GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers are there in us<CODESPLIT>SELECT AVG( STOCKalias0.QUANTITY ) FROM STOCK AS STOCKalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and location of the shops in ascending alphabetical order of name .<CODESPLIT>SELECT SHOPalias0.LOCATION , SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.SHOP_NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different software platforms are there for devices ?<CODESPLIT>SELECT SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY FLAG ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the open date of open year of the shop named " var0 " .<CODESPLIT>SELECT SHOPalias0.OPEN_DATE , SHOPalias0.OPEN_YEAR FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and grades of each high schooler .<CODESPLIT>SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of shops and the carriers of devices they have in stock .<CODESPLIT>SELECT DEVICEalias0.CARRIER , SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN DEVICE AS DEVICEalias0 ON STOCKalias0.DEVICE_ID = DEVICEalias0.DEVICE_ID JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of shops that have more than one kind of device in stock .<CODESPLIT>SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID HAVING COUNT( STOCKalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are names of countries with the top var0 largest population ?<CODESPLIT>SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID ORDER BY COUNT( STOCKalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of the shop that have the largest quantity of devices in stock .<CODESPLIT>SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID ORDER BY SUM( STOCKalias0.QUANTITY ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show different software platforms and the corresponding number of devices using each .<CODESPLIT>SELECT COUNT( * ) , DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY DEVICEalias0.SOFTWARE_PLATFORM ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many roles are there ?<CODESPLIT>SELECT DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY SOFTWARE_PLATFORM ORDER BY COUNT( * ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the software platform shared by the greatest number of devices .<CODESPLIT>SELECT DISTINCT DETENTIONalias0.DETENTION_TYPE_CODE FROM DETENTION AS DETENTIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of shops that have no devices in stock .<CODESPLIT>SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT STOCKalias0.SHOP_ID FROM STOCK AS STOCKalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations shared by shops with open year later than var0 and shops with open year before var1 .<CODESPLIT>SELECT SHOPalias0.LOCATION FROM SHOP AS SHOPalias0 WHERE SHOPalias0.OPEN_YEAR > var0 INTERSECT SELECT SHOPalias1.LOCATION FROM SHOP AS SHOPalias1 WHERE SHOPalias1.OPEN_YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of wines that are more expensive then all wines made in the year var0 ?<CODESPLIT>SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 WHERE DEVICEalias0.DEVICE_ID NOT IN ( SELECT STOCKalias0.DEVICE_ID FROM STOCK AS STOCKalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the faculty ranks and the number of students advised by each rank .<CODESPLIT>SELECT DEVICEalias0.CARRIER FROM STOCK AS STOCKalias0 JOIN DEVICE AS DEVICEalias0 ON STOCKalias0.DEVICE_ID = DEVICEalias0.DEVICE_ID GROUP BY STOCKalias0.DEVICE_ID HAVING COUNT( STOCKalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many bookings do we have ?<CODESPLIT>SELECT COUNT( * ) FROM BOOKINGS AS BOOKINGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the order dates of all the bookings .<CODESPLIT>SELECT ORDER_ITEMSalias0.OTHER_ITEM_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the planned delivery dates and actual delivery dates of bookings .<CODESPLIT>SELECT BOOKINGSalias0.ACTUAL_DELIVERY_DATE , BOOKINGSalias0.PLANNED_DELIVERY_DATE FROM BOOKINGS AS BOOKINGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and the dates of performances they attended in descending order of attendance of the performances .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_EMAIL_ADDRESS , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the Store_Name of drama workshop groups .<CODESPLIT>SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List players ' first name and last name who have weight greater than var0 or height shorter than var1 .<CODESPLIT>SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) , MAX( INVOICESalias0.ORDER_QUANTITY ) , MIN( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct payment method codes in all the invoices ?<CODESPLIT>SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of airline which runs the most number of routes .<CODESPLIT>SELECT MARKETING_REGIONSalias0.MARKETING_REGION_DESCRIPTRION FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 WHERE MARKETING_REGIONSalias0.MARKETING_REGION_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct product names with price higher than the average .<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of students who are living in the dorms that have amenity var0 .<CODESPLIT>SELECT PERFORMERSalias0.CUSTOMER_PHONE FROM PERFORMERS AS PERFORMERSalias0 WHERE PERFORMERSalias0.CUSTOMER_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states have a river<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 GROUP BY INVOICESalias0.PAYMENT_METHOD_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the payment method code used by the most orders ?<CODESPLIT>SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE EMPLOYEESalias0.EMPLOYEE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city is the address of the store named " var0 " located in ?<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_COLOR FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the states or counties of the address of the stores with marketing region code " var0 " ?<CODESPLIT>SELECT ADDRESSESalias0.STATE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STORES AS STORESalias0 ON STORESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STORESalias0.MARKETING_REGION_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of department where has the largest number of professors with a Ph.D . degree ?<CODESPLIT>SELECT MARKETING_REGIONSalias0.MARKETING_REGION_NAME FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 JOIN STORES AS STORESalias0 ON STORESalias0.MARKETING_REGION_CODE = MARKETING_REGIONSalias0.MARKETING_REGION_CODE WHERE STORESalias0.STORE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the descriptions of the service types with product price above var0 ?<CODESPLIT>SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description , code and the corresponding count of each service type ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description and code of the type of service that is performed the most often ?<CODESPLIT>SELECT DERIVED_TABLEalias0.SERVICE_TYPE_CODE , DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE GROUP BY DERIVED_TABLEalias0.SERVICE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the phones and emails of workshop groups in which services are performed ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of workshop groups in which services with product name " var0 " are performed ?<CODESPLIT>SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS , DRAMA_WORKSHOP_GROUPSalias0.STORE_PHONE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.WORKSHOP_GROUP_ID = DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID WHERE SERVICESalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different product names ? What is the average product price for each of them ?<CODESPLIT>SELECT COUNT( SCHOOL_BUSalias0.* ) , SCHOOLalias0.TYPE FROM SCHOOL_BUS AS SCHOOL_BUSalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_BUSalias0.SCHOOL_ID GROUP BY SCHOOLalias0.TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the product names with average product price smaller than var0 ?<CODESPLIT>SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN STORES AS STORESalias0 ON STORESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STORESalias0.STORE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the total order quantities of var0 products ?<CODESPLIT>SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the order details of the products with price higher than var0 ?<CODESPLIT>SELECT ORDER_ITEMSalias0.OTHER_ITEM_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the actual delivery dates of orders with quantity var0 ?<CODESPLIT>SELECT PARAGRAPHSalias0.OTHER_DETAILS FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the order dates of orders with price higher than var0 ?<CODESPLIT>SELECT CUSTOMER_ORDERSalias0.ORDER_DATE FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct currency codes are there for all drama workshop groups ?<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the drama workshop groups with address in var0 city ?<CODESPLIT>SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY_TOWN = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the email addresses of the drama workshop groups with address in var0 state ?<CODESPLIT>SELECT ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 WHERE ASSETSalias0.ASSET_ID NOT IN ( SELECT FAULT_LOGalias0.ASSET_ID FROM FAULT_LOG AS FAULT_LOGalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all cities along with the number of drama workshop groups in each city .<CODESPLIT>SELECT ADDRESSESalias0.CITY_TOWN , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY_TOWN ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the marketing region code that has the most drama workshop groups ?<CODESPLIT>SELECT DRAMA_WORKSHOP_GROUPSalias0.MARKETING_REGION_CODE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 GROUP BY MARKETING_REGION_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all cities where at least one customer lives in but no performer lives in .<CODESPLIT>SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID EXCEPT SELECT ADDRESSESalias1.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias1 JOIN PERFORMERS AS PERFORMERSalias0 ON PERFORMERSalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most frequent status of bookings ?<CODESPLIT>SELECT BOOKINGSalias0.STATUS_CODE FROM BOOKINGS AS BOOKINGSalias0 GROUP BY STATUS_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the names of aircrafts associated with airport with name " var0 " .<CODESPLIT>SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM BOOKINGS AS BOOKINGSalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID = BOOKINGSalias0.WORKSHOP_GROUP_ID WHERE BOOKINGSalias0.STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of all the clients with no booking .<CODESPLIT>SELECT CLIENTSalias0.CUSTOMER_NAME FROM CLIENTS AS CLIENTSalias0 EXCEPT SELECT CLIENTSalias1.CUSTOMER_NAME FROM BOOKINGS AS BOOKINGSalias0 JOIN CLIENTS AS CLIENTSalias1 ON CLIENTSalias1.CLIENT_ID = BOOKINGSalias0.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average quantities ordered with payment method code " var0 " on invoices ?<CODESPLIT>SELECT DEBATEalias0.DATE FROM DEBATE AS DEBATEalias0 WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of cities that has " var0 " .<CODESPLIT>SELECT INVOICESalias0.PRODUCT_ID FROM INVOICES AS INVOICESalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the names and the prices of all the products in the store .<CODESPLIT>SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_NAME = "var0" INTERSECT SELECT DERIVED_TABLEalias1.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias1 JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_TYPE_CODE = DERIVED_TABLEalias1.SERVICE_TYPE_CODE WHERE SERVICESalias1.PRODUCT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of businesses that are var0 .<CODESPLIT>SELECT COUNT( * ) FROM BAND AS BANDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the labels ?<CODESPLIT>SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the payment date of the payment with amount paid higher than var0 or with payment type is ' var1 '<CODESPLIT>SELECT * FROM ALBUMS AS ALBUMSalias0 WHERE ALBUMSalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the stage positions of the musicians with first name " var0 "<CODESPLIT>SELECT DISTINCT PERFORMANCEalias0.STAGEPOSITION FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many songs are there ?<CODESPLIT>SELECT COUNT( DISTINCT PLAYERSalias0.COUNTRY_CODE ) FROM PLAYERS AS PLAYERSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of all the claims , what was the earliest date when any claim was made ?<CODESPLIT>SELECT SONGSalias0.TITLE FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE BANDalias0.LASTNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Hom many musicians performed in the song " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the songs produced by artists with first name " var0 " .<CODESPLIT>SELECT SONGSalias0.TITLE FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE BANDalias0.FIRSTNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who performed the song named " var0 " ? Show the first name and the last name .<CODESPLIT>SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is performing in the var1 stage position for the song " var0 " ? Show the first name and the last name .<CODESPLIT>SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE PERFORMANCEalias0.STAGEPOSITION = "var1" AND SONGSalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many unique labels are there for albums ?<CODESPLIT>SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.RANK = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the label that has the most albums ?<CODESPLIT>SELECT ALBUMSalias0.LABEL FROM ALBUMS AS ALBUMSalias0 GROUP BY LABEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the musician that have produced the most number of songs ?<CODESPLIT>SELECT COUNTRYalias0.NAME , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the musician that has been at the var0 position the most ?<CODESPLIT>SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID WHERE STAGEPOSITION = "var0" GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var0 songs whose name contains var0 word " var0 " .<CODESPLIT>SELECT SONGSalias0.TITLE FROM SONGS AS SONGSalias0 WHERE SONGSalias0.TITLE LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the instruments used ?<CODESPLIT>SELECT DISTINCT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What instrument did the musician with last name " var0 " use in the song " var1 " ?<CODESPLIT>SELECT INSTRUMENTSalias0.INSTRUMENT FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID JOIN INSTRUMENTS AS INSTRUMENTSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID AND INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = "var0" AND SONGSalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most used instrument ?<CODESPLIT>SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.PILOT_ID NOT IN ( SELECT PILOT_RECORDalias0.PILOT_ID FROM PILOT_RECORD AS PILOT_RECORDalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of buildings that have no company office .<CODESPLIT>SELECT COUNT( * ) FROM INSTRUMENTS AS INSTRUMENTSalias0 WHERE INSTRUMENTSalias0.INSTRUMENT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high is the highest point in the largest state<CODESPLIT>SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids of students who don't play video game .<CODESPLIT>SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many instrument does the musician with last name " var0 " use ?<CODESPLIT>SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN BAND AS BANDalias0 ON INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the instruments ever used by the musician with last name " var0 " ?<CODESPLIT>SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN BAND AS BANDalias0 ON INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name , location and district of all shops in descending order of number of products .<CODESPLIT>SELECT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID GROUP BY VOCALSalias0.SONGID ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List in alphabetic order the names of all distinct instructors .<CODESPLIT>SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which vocal type has the band mate with last name " var0 " played the most ?<CODESPLIT>SELECT INSTITUTIONalias0.INSTITUTION , INSTITUTIONalias0.LOCATION FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.FOUNDED > var0 AND INSTITUTIONalias0.TYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the vocal types used in song " var0 " ?<CODESPLIT>SELECT AVG( STUDENTalias0.STU_GPA ) FROM ENROLL AS ENROLLalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of vocal types used in song " var0 " ?<CODESPLIT>SELECT AVG( HOME_GAMEalias0.ATTENDANCE ) , HOME_GAMEalias0.YEAR FROM HOME_GAME AS HOME_GAMEalias0 GROUP BY HOME_GAMEalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>A list of the top var0 countries by gross/total invoice size . List country name and gross invoice size .<CODESPLIT>SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE VOCALSalias0.TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which vocal type did the musician with first name " var0 " played in the song with title " A Bar in Amsterdam " ?<CODESPLIT>SELECT PAPERSalias0.TITLE FROM AUTHORSHIP AS DERIVED_TABLEalias0 JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias0.AUTHORDER = ( SELECT MAX( AUTHORDER ) FROM AUTHORSHIP ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of students whose advisors are professors .<CODESPLIT>SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the vocal types .<CODESPLIT>SELECT DISTINCT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which vocal type has the band mate with first name " var0 " played the most ?<CODESPLIT>SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = "var0" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which vocal type did the musician with last name " var0 " played in the song with title " var1 " ?<CODESPLIT>SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE BANDalias0.LASTNAME = "var0" AND SONGSalias0.TITLE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of the band mate that has performed in most songs .<CODESPLIT>SELECT BANDalias0.FIRSTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY FIRSTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the songs in album " var0 " ?<CODESPLIT>SELECT MOUNTAINalias0.ID , MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID WHERE MOUNTAINalias0.HEIGHT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the songs in albums under label " var0 " ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = "var0" AND DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var1" EXCEPT SELECT DOCUMENTSalias1.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias1 JOIN REF_SHIPPING_AGENTS ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias1.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the rank of the faculty that the fewest faculties belong to .<CODESPLIT>SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the founder of var0 ?<CODESPLIT>SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the clubs that have at least a member with advisor " var0 " .<CODESPLIT>SELECT MANUFACTURERSalias0.HEADQUARTER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.FOUNDER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all manufacturers ' names and their headquarters , sorted by the ones with highest revenue first .<CODESPLIT>SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average , maximum and total revenues of all companies ?<CODESPLIT>SELECT AVG( MANUFACTURERSalias0.REVENUE ) , MAX( MANUFACTURERSalias0.REVENUE ) , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many companies were created by var0 ?<CODESPLIT>SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the park of the roller coaster with the highest speed .<CODESPLIT>SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different cities listed ?<CODESPLIT>SELECT DISTINCT MANUFACTURERSalias0.HEADQUARTER FROM MANUFACTURERS AS MANUFACTURERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of manufactures that are based in var0 or var1 .<CODESPLIT>SELECT COUNT( * ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = "var0" OR MANUFACTURERSalias0.HEADQUARTER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the founder of the company whose name begins with the letter ' S ' .<CODESPLIT>SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of companies whose revenue is between var0 and var1 .<CODESPLIT>SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total revenue of all companies whose main office is at var0 or var1 ?<CODESPLIT>SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = "var0" OR MANUFACTURERSalias0.HEADQUARTER = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>best paper in var1 var0 ?<CODESPLIT>SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = "var0" INTERSECT SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias1 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias1.CODE WHERE MANUFACTURERSalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , headquarter and founder of the manufacturer that has the highest revenue .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE "var0" AND CUSTOMERSalias0.PAYMENT_METHOD_CODE != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , headquarter and revenue of all manufacturers sorted by their revenue in the descending order .<CODESPLIT>SELECT COUNT( RATINGalias0.* ) FROM RATING AS RATINGalias0 WHERE var0 > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of companies whose revenue is greater than the average revenue of all companies .<CODESPLIT>SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE > ( SELECT AVG( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of companies whose revenue is smaller than the revenue of all companies based in var0 .<CODESPLIT>SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE < ( SELECT MIN( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 WHERE MANUFACTURERSalias1.HEADQUARTER = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many programs are there ?<CODESPLIT>SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE > ( SELECT MIN( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 WHERE MANUFACTURERSalias1.HEADQUARTER = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who acts " var0 " in the series var1 ?<CODESPLIT>SELECT MANUFACTURERSalias0.FOUNDER , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.FOUNDER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different payment methods are there ?<CODESPLIT>SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME , MAX( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.HEADQUARTER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total revenue for each manufacturer .<CODESPLIT>SELECT MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 WHERE MAINTENANCE_ENGINEERSalias0.ENGINEER_ID NOT IN ( SELECT ENGINEER_VISITSalias0.ENGINEER_ID FROM ENGINEER_VISITS AS ENGINEER_VISITSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average prices of all products from each manufacture , and list each company's name .<CODESPLIT>SELECT COURSEalias0.DEPT_CODE , SUM( COURSEalias0.CRS_CREDIT ) FROM COURSE AS COURSEalias0 JOIN CLASS AS CLASSalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY COURSEalias0.DEPT_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of different products that are produced by companies at different headquarter cities .<CODESPLIT>SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) , MANUFACTURERSalias0.HEADQUARTER FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.HEADQUARTER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find number of products which var0 does not make .<CODESPLIT>SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.NAME NOT IN ( SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of companies that do not make var0 .<CODESPLIT>SELECT TV_SERIESalias0.EPISODE , TV_SERIESalias0.RATING FROM TV_SERIES AS TV_SERIESalias0 ORDER BY TV_SERIESalias0.RATING DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with var0 accreditation types .<CODESPLIT>SELECT COUNT( PRODUCTSalias0.* ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the department name and room of the course var0 .<CODESPLIT>SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the names and the prices of all the products in the store .<CODESPLIT>SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the name of the products with a price less than or equal to $var0 .<CODESPLIT>SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all information of all the products with a price between $var0 and $var1 .<CODESPLIT>SELECT PRODUCTSalias0.* FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Compute the average price of all the products .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Compute the average price of all products with manufacturer code equal to var0 .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRICE ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.MANUFACTURER = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Compute the number of products with a price larger than or equal to $var0 .<CODESPLIT>SELECT COUNT( PRODUCTSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct students are enrolled in courses ?<CODESPLIT>SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRICE >= var0 ORDER BY PRODUCTSalias0.PRICE DESC , PRODUCTSalias0.NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stadiums that some var0n swimmers have been to .<CODESPLIT>SELECT PRODUCTSalias0.* FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the average price of each manufacturer's products , showing only the manufacturer's code .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.MANUFACTURER FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.MANUFACTURER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the names of manufacturer whose products have an average price higher than or equal to $var0 .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME HAVING AVG( PRODUCTSalias0.PRICE ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the name and price of the cheapest product .<CODESPLIT>SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRICE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the name of each manufacturer along with the name and price of its most expensive product .<CODESPLIT>SELECT AVG( SCHOOL_BUSalias0.YEARS_WORKING ) , MAX( SCHOOL_BUSalias0.YEARS_WORKING ) , MIN( SCHOOL_BUSalias0.YEARS_WORKING ) FROM SCHOOL_BUS AS SCHOOL_BUSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the statement id and the statement detail for the statement with most number of accounts .<CODESPLIT>SELECT MIN( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.CODE , PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the problem log that is created most recently ?<CODESPLIT>SELECT ARTWORKalias0.TYPE FROM ARTWORK AS ARTWORKalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the oldest log id and its corresponding problem id ?<CODESPLIT>SELECT COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the ids and dates of the logs for the problem whose id is var0 .<CODESPLIT>SELECT PROBLEM_LOGalias0.LOG_ENTRY_DATE , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the log ids and their descriptions from the problem logs .<CODESPLIT>SELECT PROBLEM_LOGalias0.LOG_ENTRY_DESCRIPTION , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first and last names of all distinct staff members who are assigned to the problem whose id is var0 .<CODESPLIT>SELECT DISTINCT STAFFalias0.STAFF_FIRST_NAME , STAFFalias0.STAFF_LAST_NAME FROM STAFF AS STAFFalias0 JOIN PROBLEM_LOG AS PROBLEM_LOGalias0 ON STAFFalias0.STAFF_ID = PROBLEM_LOGalias0.ASSIGNED_TO_STAFF_ID WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the problem id and log id which are assigned to the staff named var0 var1 .<CODESPLIT>SELECT DISTINCT PROBLEM_LOGalias0.PROBLEM_ID , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM STAFF AS STAFFalias0 JOIN PROBLEM_LOG AS PROBLEM_LOGalias0 ON STAFFalias0.STAFF_ID = PROBLEM_LOGalias0.ASSIGNED_TO_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = "var0" AND STAFFalias0.STAFF_LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all allergies with number of students affected .<CODESPLIT>SELECT COUNT( PROBLEMSalias0.* ) FROM PRODUCT AS PRODUCTalias0 JOIN PROBLEMS AS PROBLEMSalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PRODUCTalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many problems does the product with the most problems have ? List the number of the problems and product name .<CODESPLIT>SELECT STUDENTalias0.AGE , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many artists are from var0 ?<CODESPLIT>SELECT PROBLEMSalias0.PROBLEM_DESCRIPTION FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of the problems that are reported by the staff whose last name is var0 .<CODESPLIT>SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_LAST_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of the problems which are reported after var0 ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY HOW_TO_GET_THERE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of the problems which are reported before var0 ?<CODESPLIT>SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED < "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each product which has problems , what are the number of problems and the product id ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = "var0" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 ON CUSTOMER_ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all instructors in Comp . Sci . department with salary var1 var2 .<CODESPLIT>SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > "var0" GROUP BY PRODUCTalias0.PRODUCT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all the distinct product names in alphabetical order ?<CODESPLIT>SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the distinct product names ordered by product id ?<CODESPLIT>SELECT CLIMBERalias0.NAME FROM CLIMBER AS CLIMBERalias0 ORDER BY CLIMBERalias0.POINTS DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id of problems reported by the staff named var0 var1 or var2 var3 ?<CODESPLIT>SELECT PROBLEMSalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = "var0" AND STAFFalias0.STAFF_LAST_NAME = "var1" UNION SELECT PROBLEMSalias1.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = "var2" AND STAFFalias1.STAFF_LAST_NAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the product ids for the problems reported by var0 var1 with closure authorised by var2 var3 ?<CODESPLIT>SELECT REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.STATE = "var0" INTERSECT SELECT REPRESENTATIVEalias1.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias1 WHERE REPRESENTATIVEalias1.STATE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of the problems reported before the date of any problem reported by var0 var1 ?<CODESPLIT>SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED < ( SELECT MIN( PROBLEMSalias1.DATE_PROBLEM_REPORTED ) FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = "var0" AND STAFFalias1.STAFF_LAST_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of the problems reported after the date of any problems reported by var0 var1 ?<CODESPLIT>SELECT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = "var0" INTERSECT SELECT ENDOWMENTalias1.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias1 JOIN SCHOOL AS SCHOOLalias1 ON SCHOOLalias1.SCHOOL_ID = ENDOWMENTalias1.SCHOOL_ID WHERE SCHOOLalias1.SCHOOL_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the top var0 products which have the largest number of problems ?<CODESPLIT>SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_NAME ORDER BY COUNT( PROBLEMSalias0.* ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of the products that have their color described as " var0 " and have a characteristic named " var1 " .<CODESPLIT>SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > "var1" AND PRODUCTalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of the staff members who reported problems from the product " var0 " but not " var1 " ?<CODESPLIT>SELECT STAFFalias0.STAFF_FIRST_NAME , STAFFalias0.STAFF_LAST_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PRODUCTalias0.PRODUCT_NAME = "var0" EXCEPT SELECT STAFFalias1.STAFF_FIRST_NAME , STAFFalias1.STAFF_LAST_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE PRODUCTalias1.PRODUCT_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the products which have problems reported by both var0 var1 and var2 var3 ?<CODESPLIT>SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = "var0" AND STAFFalias0.STAFF_LAST_NAME = "var1" INTERSECT SELECT PRODUCTalias1.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = "var2" AND STAFFalias1.STAFF_LAST_NAME = "var3" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many branches where have more than average number of memberships are there ?<CODESPLIT>SELECT COUNT( * ) FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT > ( SELECT AVG( BRANCHalias1.MEMBERSHIP_AMOUNT ) FROM BRANCH AS BRANCHalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many enzymes do not have any interactions ?<CODESPLIT>SELECT BRANCHalias0.ADDRESS_ROAD , BRANCHalias0.CITY , BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 ORDER BY BRANCHalias0.OPEN_YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are names for top three branches with most number of membership ?<CODESPLIT>SELECT BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 ORDER BY BRANCHalias0.MEMBERSHIP_AMOUNT DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct city where branches with at least var0 memberships are located .<CODESPLIT>SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 EXCEPT SELECT PHONEalias0.CHIP_MODEL FROM PHONE AS PHONEalias0 WHERE PHONEalias0.ACCREDITATION_TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all open years when at least two shops are opened .<CODESPLIT>SELECT CAMERA_LENSalias0.NAME , COUNT( PHOTOSalias0.* ) FROM CAMERA_LENS AS CAMERA_LENSalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID GROUP BY CAMERA_LENSalias0.ID ORDER BY COUNT( PHOTOSalias0.* ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show minimum and maximum amount of memberships for all branches opened in var0 or located at city var1 .<CODESPLIT>SELECT MAX( BRANCHalias0.MEMBERSHIP_AMOUNT ) , MIN( BRANCHalias0.MEMBERSHIP_AMOUNT ) FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.CITY = "var1" OR BRANCHalias0.OPEN_YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the city and the number of branches opened before var0 for each city .<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ORDER BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different levels do members have ?<CODESPLIT>SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show card number , name , and hometown for all members in a descending order of level .<CODESPLIT>SELECT MEMBERalias0.CARD_NUMBER , MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.LEVEL DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the membership level with most number of members .<CODESPLIT>SELECT MEMBERalias0.LEVEL FROM MEMBER AS MEMBERalias0 GROUP BY LEVEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all member names and registered branch names sorted by register year .<CODESPLIT>SELECT BRANCHalias0.NAME , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID ORDER BY MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all branch names with the number of members in each branch registered after var0 .<CODESPLIT>SELECT COUNT( * ) , GUESTSalias0.GENDER_CODE FROM GUESTS AS GUESTSalias0 GROUP BY GENDER_CODE ORDER BY COUNT( * ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show member names without any registered branch .<CODESPLIT>SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the branch name and city without any registered members .<CODESPLIT>SELECT BRANCHalias0.CITY , BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.BRANCH_ID NOT IN ( SELECT MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average access count of documents ?<CODESPLIT>SELECT BRANCHalias0.NAME , BRANCHalias0.OPEN_YEAR FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 GROUP BY BRANCHalias0.BRANCH_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the member name and hometown who registered a branch in var0 .<CODESPLIT>SELECT MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all city with a branch opened in var0 and a branch with more than var1 membership .<CODESPLIT>SELECT STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = var0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all cities without a branch having more than var0 memberships .<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find name of the services that has never been used .<CODESPLIT>SELECT SUM( PURCHASEalias0.TOTAL_POUNDS ) FROM PURCHASE AS PURCHASEalias0 JOIN BRANCH AS BRANCHalias0 ON PURCHASEalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE BRANCHalias0.CITY = "var0" AND PURCHASEalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average high temperature for each day of week ?<CODESPLIT>SELECT COUNT( PURCHASEalias0.* ) FROM PURCHASE AS PURCHASEalias0 JOIN MEMBER AS MEMBERalias0 ON PURCHASEalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID WHERE MEMBERalias0.LEVEL = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students in the descending order of age .<CODESPLIT>SELECT BRANCHalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERalias0.HOMETOWN = "var0" INTERSECT SELECT BRANCHalias1.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias1 JOIN BRANCH AS BRANCHalias1 ON MEMBERSHIP_REGISTER_BRANCHalias1.BRANCH_ID = BRANCHalias1.BRANCH_ID JOIN MEMBER AS MEMBERalias1 ON MEMBERalias1.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias1.MEMBER_ID WHERE MEMBERalias1.HOMETOWN = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the shortest river<CODESPLIT>SELECT MEMBERalias0.CARD_NUMBER FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.HOMETOWN LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of voting records in total .<CODESPLIT>SELECT COUNT( VOTING_RECORDalias0.* ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct number of president votes .<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the order details of the products with price higher than var0 ?<CODESPLIT>SELECT MAX( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last names of students with major var0 .<CODESPLIT>SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the largest city in the state with the largest area<CODESPLIT>SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the majors of male (sex is var0) students ?<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" GROUP BY KEYWORDalias0.KEYWORD HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all reviewers who rated var0 .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find out the top var0 customers by total number of orders . List customers ' first and last name and the number of total orders .<CODESPLIT>SELECT MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are the advisors for students that live in a city with city code " var0 " ?<CODESPLIT>SELECT COUNT( TRACKalias0.* ) , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct secretary votes in the fall election cycle ?<CODESPLIT>SELECT DISTINCT VOTING_RECORDalias0.SECRETARY_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 WHERE VOTING_RECORDalias0.ELECTION_CYCLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct president votes on var0 ?<CODESPLIT>SELECT DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 WHERE VOTING_RECORDalias0.REGISTRATION_DATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies about var0 were released after var1 ?<CODESPLIT>SELECT DISTINCT VOTING_RECORDalias0.ELECTION_CYCLE , VOTING_RECORDalias0.REGISTRATION_DATE FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report the distinct president vote and the vice president vote .<CODESPLIT>SELECT DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE , VOTING_RECORDalias0.VICE_PRESIDENT_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct leader names of colleges associated with members from country " var0 " .<CODESPLIT>SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.CLASS_PRESIDENT_VOTE = STUDENTalias0.STUID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of employees from each city ?<CODESPLIT>SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.CLASS_SENATOR_VOTE = STUDENTalias0.STUID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the height and weight of people in descending order of height .<CODESPLIT>SELECT DISTINCT STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.SECRETARY_VOTE = STUDENTalias0.STUID WHERE VOTING_RECORDalias0.ELECTION_CYCLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct Advisor of students who have treasurer votes in the spring election cycle .<CODESPLIT>SELECT DISTINCT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.TREASURER_VOTE = STUDENTalias0.STUID WHERE VOTING_RECORDalias0.ELECTION_CYCLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct majors of students who have treasurer votes .<CODESPLIT>SELECT DISTINCT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.TREASURER_VOTE = STUDENTalias0.STUID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0ind the first and last names of all the female (sex is var0) students who have president votes .<CODESPLIT>SELECT DISTINCT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.PRESIDENT_VOTE = STUDENTalias0.STUID WHERE STUDENTalias0.SEX = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of all the students of age var0 who have vice president votes .<CODESPLIT>SELECT DISTINCT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.VICE_PRESIDENT_VOTE = STUDENTalias0.STUID WHERE STUDENTalias0.AGE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the property type descriptions of properties belonging to that code .<CODESPLIT>SELECT COUNT( VOTING_RECORDalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = CLASS_SENATOR_VOTE WHERE STUDENTalias0.SEX = "var0" AND VOTING_RECORDalias0.ELECTION_CYCLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students whose city code is var0 and who have class senator votes in the spring election cycle .<CODESPLIT>SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CSU_FEESalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the emails of the employees who have no commission percentage and salary within the range var1 to var2 and works in that department which number is var3 .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.CITY_CODE = "var0" AND VOTING_RECORDalias0.ELECTION_CYCLE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0ind the average age of female (sex is var0) students who have secretary votes in the spring election cycle .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.SEX = "var0" AND VOTING_RECORDalias0.ELECTION_CYCLE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct first names of all the students who have vice president votes and whose city code is not var0 .<CODESPLIT>SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.VICE_PRESIDENT_VOTE = STUDENTalias0.STUID EXCEPT SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.CITY_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct last names of all the students who have president votes and whose advisor is not var0 .<CODESPLIT>SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = PRESIDENT_VOTE EXCEPT SELECT DISTINCT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.ADVISOR = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct last names of all the students who have president votes and whose advisor is var0 .<CODESPLIT>SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = PRESIDENT_VOTE INTERSECT SELECT DISTINCT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.ADVISOR = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each advisor , report the total number of students advised by him or her .<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report all advisors that advise more than var0 students .<CODESPLIT>SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.TEACHER_ID NOT IN ( SELECT COURSE_ARRANGEalias0.TEACHER_ID FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Report all majors that have less than var0 students .<CODESPLIT>SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.COLLEGE = "var0" OR MATCH_SEASONalias0.COLLEGE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum duration and resolution of songs grouped and ordered by languages ?<CODESPLIT>SELECT COUNT( VOTING_RECORDalias0.* ) , VOTING_RECORDalias0.ELECTION_CYCLE FROM VOTING_RECORD AS VOTING_RECORDalias0 GROUP BY VOTING_RECORDalias0.ELECTION_CYCLE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which major has the most students ?<CODESPLIT>SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common major among female (sex is var0) students ?<CODESPLIT>SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE SEX = "var0" GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the city_code of the city that the most students live in ?<CODESPLIT>SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY CITY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many colors are there ?<CODESPLIT>SELECT COUNT( * ) FROM REF_COLORS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many characteristics are there ?<CODESPLIT>SELECT COUNT( * ) FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and buying prices of all the products ?<CODESPLIT>SELECT MARKETING_REGIONSalias0.MARKETING_REGION_DESCRIPTRION FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 WHERE MARKETING_REGIONSalias0.MARKETING_REGION_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the description of all the colors .<CODESPLIT>SELECT COLOR_DESCRIPTION FROM REF_COLORS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all the product characteristics .<CODESPLIT>SELECT DISTINCT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of products with category " var0 " ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names , color descriptions and product descriptions of products with category " var0 " .<CODESPLIT>SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_DESCRIPTION , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many products are there under the category " var0 " ?<CODESPLIT>SELECT TRANSACTION_TYPE_DESCRIPTION FROM REF_TRANSACTION_TYPES WHERE TRANSACTION_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of products with category " var0 " and typically sold above var1 .<CODESPLIT>SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = "var0" AND PRODUCTSalias0.TYPICAL_BUYING_PRICE > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the category and typical buying price of the product with name " var0 " ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE , PRODUCTSalias0.TYPICAL_BUYING_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which category does the product named " var0 " belong to ?<CODESPLIT>SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 WHERE BUILDINGSalias0.ID NOT IN ( SELECT OFFICE_LOCATIONSalias0.BUILDING_ID FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the product with the color description ' var0 ' ?<CODESPLIT>SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = "var1" UNION SELECT CNAME FROM COLLEGE AS COLLEGEalias1 WHERE ENR > var2 AND COLLEGEalias1.STATE = "var3" AND ENR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find var0he cavar0egory descripvar0ions of var0he producvar0s whose descripvar0ions include levar0var0er ' var0 ' .<CODESPLIT>SELECT DERIVED_TABLEalias0.PRODUCT_CATEGORY_DESCRIPTION FROM REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_DESCRIPTION LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the color description of the product with name " var0 " ?<CODESPLIT>SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the color code and description of the product named " var0 " ?<CODESPLIT>SELECT COUNT( DISTINCT BROADCASTalias0.PROGRAM_ID ) FROM BROADCAST AS BROADCASTalias0 WHERE BROADCASTalias0.TIME_OF_DAY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and color description of the products with at least var0 characteristics .<CODESPLIT>SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_ID FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID HAVING COUNT( PRODUCT_CHARACTERISTICSalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and typical buying and selling prices of the products that have color described as " var0 " ?<CODESPLIT>SELECT AVG( USER_PROFILESalias0.FOLLOWERS ) FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.UID NOT IN ( SELECT UID FROM TWEETS AS TWEETSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total population of the districts where the area is bigger than the average city area .<CODESPLIT>SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " .<CODESPLIT>SELECT COUNT( DISTINCT CHARACTERISTICSalias0.CHARACTERISTIC_NAME ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the characteristic names of product " var0 " ?<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the characteristic names and data types of product " var0 " .<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all characteristics of product named " var0 " with type code " var1 " .<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_TYPE_CODE = "var1" AND PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many characteristics does the product named " var0 " have ?<CODESPLIT>SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all the var1 in var0<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = "var1" AND DERIVED_TABLEalias0.COLOR_DESCRIPTION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the zip code in which the average mean sea level pressure is the lowest ?<CODESPLIT>SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the club named " var0 " ?<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of the products that have their color described as " var0 " and have a characteristic named " var1 " .<CODESPLIT>SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.JOURNALIST_ID NOT IN ( SELECT NEWS_REPORTalias0.JOURNALIST_ID FROM NEWS_REPORT AS NEWS_REPORTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Count the products that have the color description " var0 " or have the characteristic name " var1 " .<CODESPLIT>SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = "var1" OR DERIVED_TABLEalias0.COLOR_DESCRIPTION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the unit of measuerment of the product category code " var0 " ?<CODESPLIT>SELECT UNIT_OF_MEASURE FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the product category description of the product category with code " var0 " .<CODESPLIT>SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which professionals have done at least two types of treatments ? List the professional id and cell phone .<CODESPLIT>SELECT PRODUCT_CATEGORY_DESCRIPTION , UNIT_OF_MEASURE FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all document ids , names and the number of paragraphs in each document .<CODESPLIT>SELECT DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the unit of measurement and product category code of product named " var0 " .<CODESPLIT>SELECT DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE , DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the product names that are colored ' var0 ' but do not have unit of measurement " var1 " .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE JOIN REF_COLORS AS DERIVED_TABLEalias1 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias1.COLOR_CODE WHERE DERIVED_TABLEalias0.UNIT_OF_MEASURE != "var1" AND DERIVED_TABLEalias1.COLOR_DESCRIPTION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the color for most products ?<CODESPLIT>SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE GROUP BY DERIVED_TABLEalias0.COLOR_DESCRIPTION ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the color used by least products ?<CODESPLIT>SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE GROUP BY DERIVED_TABLEalias0.COLOR_DESCRIPTION ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the characteristic name used by most number of the products ?<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME ORDER BY COUNT( PRODUCT_CHARACTERISTICSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names , details and data types of the characteristics which are never used by any product ?<CODESPLIT>SELECT AVG( TRACKalias0.UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are characteristic names used at least twice across all products ?<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME HAVING COUNT( PRODUCT_CHARACTERISTICSalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many colors are never used by any product ?<CODESPLIT>SELECT COUNT( * ) FROM REF_COLORS WHERE COLOR_CODE NOT IN ( SELECT PRODUCTSalias0.COLOR_CODE FROM PRODUCTS AS PRODUCTSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many events are there ?<CODESPLIT>SELECT COUNT( * ) FROM EVENT AS EVENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the event names by year from the most recent to the oldest .<CODESPLIT>SELECT EVENTalias0.NAME FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the event that happened in the most recent year ?<CODESPLIT>SELECT EVENTalias0.NAME FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.YEAR DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many stadiums are there ?<CODESPLIT>SELECT COUNT( * ) FROM SCHOOL AS SCHOOLalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the duration of the longest and shortest pop tracks in milliseconds ?<CODESPLIT>SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 ORDER BY STADIUMalias0.CAPACITY DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stadiums whose capacity is smaller than the average capacity .<CODESPLIT>SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY < ( SELECT AVG( STADIUMalias1.CAPACITY ) FROM STADIUM AS STADIUMalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the country that has the most stadiums .<CODESPLIT>SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country has at most var0 stadiums listed ?<CODESPLIT>SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 GROUP BY STADIUMalias0.COUNTRY HAVING COUNT( * ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of employees from each city ?<CODESPLIT>SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY > var0 INTERSECT SELECT STADIUMalias1.COUNTRY FROM STADIUM AS STADIUMalias1 WHERE STADIUMalias1.CAPACITY < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of each user and number of tweets tweeted by each of them .<CODESPLIT>SELECT COUNT( DISTINCT STADIUMalias0.CITY ) FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.OPENING_YEAR < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many stadiums does each country have ?<CODESPLIT>SELECT AIRPORTalias0.COUNTRY , COUNT( * ) FROM AIRPORT AS AIRPORTalias0 GROUP BY AIRPORTalias0.COUNTRY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries do not have a stadium that was opened after var0 ?<CODESPLIT>SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 EXCEPT SELECT STADIUMalias1.COUNTRY FROM STADIUM AS STADIUMalias1 WHERE STADIUMalias1.OPENING_YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the writers of the books in ascending alphabetical order .<CODESPLIT>SELECT COUNT( * ) FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.COUNTRY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all swimmers , sorted by their 100 meter scores in ascending order .<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 ORDER BY SWIMMERalias0.METER_100 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different countries are all the swimmers from ?<CODESPLIT>SELECT PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ORDER BY PROBLEM_LOGalias0.LOG_ENTRY_DATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List countries that have more than one swimmer .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_STATUS_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.CUSTOMER_STATUS_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all 200 meter and 300 meter results of swimmers with nationality " var0 " .<CODESPLIT>SELECT MEMBERalias0.CARD_NUMBER FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.HOMETOWN LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the distinct service types that are provided by the organization which has detail ' var0 ' ?<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RECORDalias0.RESULT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and typical buying and selling prices of the products that have color described as " var0 " ?<CODESPLIT>SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN EVENT AS EVENTalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID GROUP BY EVENTalias0.STADIUM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and capacity of the stadium where the event named " var0 " happened .<CODESPLIT>SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stadiums which have never had any event .<CODESPLIT>SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.ID NOT IN ( SELECT EVENTalias0.STADIUM_ID FROM EVENT AS EVENTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the swimmer who has the most records .<CODESPLIT>SELECT BOOKINGSalias0.ORDER_DATE FROM BOOKINGS AS BOOKINGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first name and last name for all the instructors .<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID GROUP BY RECORDalias0.SWIMMER_ID HAVING COUNT( RECORDalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all track names that have had no races .<CODESPLIT>SELECT SWIMMERalias0.NAME , SWIMMERalias0.NATIONALITY FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RESULT = "var0" GROUP BY RECORDalias0.SWIMMER_ID HAVING COUNT( RECORDalias0.* ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total checking and saving balance of all accounts sorted by the total balance in ascending order .<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 WHERE SWIMMERalias0.ID NOT IN ( SELECT RECORDalias0.SWIMMER_ID FROM RECORD AS RECORDalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the channels owned by var0 or var1 ?<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RECORDalias0.RESULT = "var0" INTERSECT SELECT SWIMMERalias1.NAME FROM SWIMMER AS SWIMMERalias1 JOIN RECORD AS RECORDalias1 ON SWIMMERalias1.ID = RECORDalias1.SWIMMER_ID WHERE RECORDalias1.RESULT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stadiums that some var0n swimmers have been to .<CODESPLIT>SELECT STADIUMalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID JOIN EVENT AS EVENTalias0 ON RECORDalias0.EVENT_ID = EVENTalias0.ID JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID WHERE SWIMMERalias0.NATIONALITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stadiums that the most swimmers have been to .<CODESPLIT>SELECT STADIUMalias0.NAME FROM RECORD AS RECORDalias0 JOIN EVENT AS EVENTalias0 ON RECORDalias0.EVENT_ID = EVENTalias0.ID JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID GROUP BY EVENTalias0.STADIUM_ID ORDER BY COUNT( RECORDalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all details for each swimmer .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , VENUEalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY VENUEalias0.VENUEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the employee ids for all employees with role name " var0 " or " var1 " .<CODESPLIT>SELECT AVG( STADIUMalias0.CAPACITY ) FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.OPENING_YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many railways are there ?<CODESPLIT>SELECT COUNT( * ) FROM RAILWAY AS RAILWAYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the builders of railways in ascending alphabetical order .<CODESPLIT>SELECT RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 ORDER BY RAILWAYalias0.BUILDER ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the wheels and locations of the railways .<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum level of managers in countries that are not " var0 " ?<CODESPLIT>SELECT MAX( MANAGERalias0.LEVEL ) FROM MANAGER AS MANAGERalias0 WHERE MANAGERalias0.COUNTRY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age for all managers ?<CODESPLIT>SELECT AVG( MANAGERalias0.AGE ) FROM MANAGER AS MANAGERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var1 in var0 conference with the most citations .<CODESPLIT>SELECT MANAGERalias0.NAME FROM MANAGER AS MANAGERalias0 ORDER BY MANAGERalias0.LEVEL ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and arrival times of trains ?<CODESPLIT>SELECT TRAINalias0.ARRIVAL , TRAINalias0.NAME FROM TRAIN AS TRAINalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the oldest manager ?<CODESPLIT>SELECT MANAGERalias0.NAME FROM MANAGER AS MANAGERalias0 ORDER BY MANAGERalias0.AGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of trains and locations of railways they are in .<CODESPLIT>SELECT RAILWAYalias0.LOCATION , TRAINalias0.NAME FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the builder of railways associated with the trains named " var0 " .<CODESPLIT>SELECT DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show id and location of railways that are associated with more than one train .<CODESPLIT>SELECT RAILWAYalias0.LOCATION , TRAINalias0.RAILWAY_ID FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID GROUP BY TRAINalias0.RAILWAY_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id and builder of the railway that are associated with the most trains .<CODESPLIT>SELECT COUNT( JOURNAL_COMMITTEEalias0.* ) , EDITORalias0.EDITOR_ID , EDITORalias0.NAME FROM EDITOR AS EDITORalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID GROUP BY EDITORalias0.EDITOR_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different builders of railways , along with the corresponding number of railways using each builder .<CODESPLIT>SELECT COUNT( * ) , RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 GROUP BY RAILWAYalias0.BUILDER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common builder of railways .<CODESPLIT>SELECT RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 GROUP BY BUILDER ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different locations of railways along with the corresponding number of railways at each location .<CODESPLIT>SELECT COUNT( * ) , RAILWAYalias0.LOCATION FROM RAILWAY AS RAILWAYalias0 GROUP BY RAILWAYalias0.LOCATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations that have more than one railways .<CODESPLIT>SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID WHERE GENRESalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the object number of railways that do not have any trains .<CODESPLIT>SELECT RAILWAYalias0.OBJECTNUMBER FROM RAILWAY AS RAILWAYalias0 WHERE RAILWAYalias0.RAILWAY_ID NOT IN ( SELECT TRAINalias0.RAILWAY_ID FROM TRAIN AS TRAINalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the countries that have both managers of age above var0 and managers of age below var1 .<CODESPLIT>SELECT AVG( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct countries of managers .<CODESPLIT>SELECT DISTINCT MANAGERalias0.COUNTRY FROM MANAGER AS MANAGERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the working years of managers in descending order of their level .<CODESPLIT>SELECT MANAGERalias0.WORKING_YEAR_STARTS FROM MANAGER AS MANAGERalias0 ORDER BY MANAGERalias0.LEVEL DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the countries that have managers of age above var0 or below var1 .<CODESPLIT>SELECT STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 INTERSECT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING SUM( AFFECTED_REGIONalias1.NUMBER_CITY_AFFECTED ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many addresses are there in country var0 ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the total and average enrollment of all schools ?<CODESPLIT>SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each state and the number of addresses in each state .<CODESPLIT>SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 GROUP BY ADDRESSESalias0.STATE_PROVINCE_COUNTY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names and phones of customers who do not have address information .<CODESPLIT>SELECT STUID FROM SPORTSINFO GROUP BY STUID HAVING SUM( HOURSPERWEEK ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different statuses do cities have ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of customers who have both an order in completed status and an order in part status .<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , phone , and payment method code for all customers in descending order of customer number .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE , CUSTOMERSalias0.PAYMENT_METHOD_CODE FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_NUMBER DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product name and total order quantity for each product .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM PRODUCTS AS PRODUCTSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return reviewer name , movie title , stars , and ratingDate . And sort the data first by reviewer name , then by movie title , and lastly by number of stars .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of customers who have the most mailshots .<CODESPLIT>SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the customer name , customer address city , date from , and date to for each customer address history .<CODESPLIT>SELECT ADDRESSESalias0.CITY , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_ADDRESS_HISTORYalias0.DATE_FROM , CUSTOMER_ADDRESS_HISTORYalias0.DATE_TO FROM CUSTOMER_ADDRESS_HISTORY AS CUSTOMER_ADDRESS_HISTORYalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_ADDRESS_HISTORYalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESS_HISTORYalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of customers who use var0 payment method and have more than var1 orders .<CODESPLIT>SELECT CLASSalias0.CLASS_CODE FROM CLASS AS CLASSalias0 WHERE CLASSalias0.CLASS_ROOM = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who did not pay with var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product type and name for the products with price higher than var0 or lower than var1 .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE < var1 OR PRODUCTSalias0.PRODUCT_PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the positions of the players from the team with name " var0 " .<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of dorms that can accommodate more than var0 students .<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all club names in descending alphabetical order .<CODESPLIT>SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < var1 AND STUDENTalias0.SEX = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students living in city var0 whose age is between var1 and var2 .<CODESPLIT>SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE BETWEEN var1 AND var2 AND STUDENTalias0.CITY_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many dorms are there ?<CODESPLIT>SELECT COUNT( * ) FROM DORM AS DORMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many states that have some college students playing in the var0 position but not in the var1 position .<CODESPLIT>SELECT COUNT( * ) FROM DORM_AMENITY AS DORM_AMENITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total capacity of all dorms .<CODESPLIT>SELECT SUM( CUSTOMER_PAYMENTSalias0.AMOUNT_PAYMENT ) FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which service id and type has the least number of participants ?<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id and name of the aircraft with the maximum distance .<CODESPLIT>SELECT AVG( DORMalias0.STUDENT_CAPACITY ) , SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of dorms that have some amenity .<CODESPLIT>SELECT DISTINCT ALLERGY FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of dorms that do not have any amenity<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMID NOT IN ( SELECT DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct gender for dorms .<CODESPLIT>SELECT COUNT( DISTINCT DORMalias0.GENDER ) FROM DORM AS DORMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different product names ? What is the average product price for each of them ?<CODESPLIT>SELECT DORMalias0.GENDER , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 WHERE DORMalias0.DORM_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the maximum and minimum share count of different transaction types .<CODESPLIT>SELECT DORMalias0.DORM_NAME , DORMalias0.GENDER FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY < var1 OR DORMalias0.STUDENT_CAPACITY > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the numbers of different majors and cities .<CODESPLIT>SELECT COUNT( DISTINCT STUDENTalias0.CITY_CODE ) , COUNT( DISTINCT STUDENTalias0.MAJOR ) FROM STUDENT AS STUDENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of dorms which have both var0 and var1 as amenities .<CODESPLIT>SELECT GOVERNMENTFORM , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY GOVERNMENTFORM HAVING AVG( LIFEEXPECTANCY ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of dorms which have var0 but no var1 as amenity .<CODESPLIT>SELECT COUNT( * ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0ind the last name of students who is either female (sex is var0) and living in the city of code var1 or male (sex is var2) and in age of below var3 .<CODESPLIT>SELECT PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" AND TRYOUTalias0.PPOS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the dorm with the largest capacity .<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 ORDER BY DORMalias0.STUDENT_CAPACITY DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List in alphabetic order all different amenities .<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of students whose age is younger than the average age .<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the snatch score and clean jerk score of body builders in ascending order of snatch score .<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE CITY_CODE != "var0" ORDER BY STUDENTalias0.AGE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the TV Channel that shows the cartoon " The Rise of the Blue Beetle ! " ? List the TV Channel's series name .<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID JOIN DORM AS DORMalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = "var0" ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of dorms and total capacity for each gender .<CODESPLIT>SELECT COUNT( * ) , DORMalias0.GENDER , SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 GROUP BY DORMalias0.GENDER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average and oldest age for students with different sex .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of all students who were in the tryout sorted in alphabetic order .<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , latitude , and city of the station with the lowest latitude ?<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) , COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age and number of male students (with sex var0) from each city .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) , COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE SEX = "var0" GROUP BY STUDENTalias0.CITY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students for the cities where have more than one student .<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of students who are not in the largest major .<CODESPLIT>SELECT BANKalias0.STATE FROM BANK AS BANKalias0 GROUP BY STATE ORDER BY SUM( BANKalias0.NO_OF_CUSTOMERS ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students whose age is older than the average age for each gender .<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE AGE > ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) GROUP BY STUDENTalias0.SEX ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum stars and year for the most recent movie ?<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) , DORMalias0.DORM_NAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID GROUP BY DORMalias0.DORM_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of amenities for each of the dorms that can accommodate more than var0 students .<CODESPLIT>SELECT COUNT( * ) , DORMalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY > var0 GROUP BY DORMalias0.DORMID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many calendar items do we have ?<CODESPLIT>SELECT COUNT( LIVES_INalias0.* ) , DORMalias0.DORM_NAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE STUDENTalias0.AGE > var0 GROUP BY DORMalias0.DORM_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students who are living in the var0 .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age of students who are living in the dorm with the largest capacity .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY = ( SELECT MAX( DORMalias1.STUDENT_CAPACITY ) FROM DORM AS DORMalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of students living in the male dorm (with gender var0) .<CODESPLIT>SELECT COUNT( LIVES_INalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.GENDER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of clubs that do not have any players .<CODESPLIT>SELECT COUNT( LIVES_INalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = "var0" AND STUDENTalias0.SEX = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have papers containing keyword " var0 " .<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORMalias0.DORM_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the times and numbers of all trains that go to var0 , ordered by time .<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORMalias0.DORM_NAME = "var0" ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average earnings of poker players ?<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.AMENID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students who are living in the dorm that has most number of amenities .<CODESPLIT>SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID IN ( SELECT LIVES_INalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY DORMalias0.DORMID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and capacity of the dorm with least number of amenities .<CODESPLIT>SELECT DORMalias0.DORM_NAME , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.DORMID ORDER BY COUNT( * ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of dorms that do not have amenity var0 .<CODESPLIT>SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 EXCEPT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first and last name of students who are living in the dorms that have amenity var0 .<CODESPLIT>SELECT AVG( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , MAX( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , MIN( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and age of students who are living in the dorms that do not have amenity var0 .<CODESPLIT>SELECT SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY FLAG ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of amenities of the dorm where the student with last name var0 is living in .<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID JOIN LIVES_IN AS LIVES_INalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE STUDENTalias0.LNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the emails and phone numbers of all the customers , ordered by email address and phone number .<CODESPLIT>SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has the least number of customers whose type code is " var0 " ?<CODESPLIT>SELECT CUSTOMERSalias0.TOWN_CITY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMER_TYPE_CODE = "var0" GROUP BY TOWN_CITY ORDER BY COUNT( * ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all products along with the number of complaints that they have received .<CODESPLIT>SELECT COUNT( COMPLAINTSalias0.* ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the purchase details of transactions with amount bigger than var0 ?<CODESPLIT>SELECT CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = COMPLAINTSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which products has been complained by the customer who has filed least amount of complaints ?<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID JOIN CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the drivers ' first , last names and id who had more than var0 pit stops or participated in more than var1 race results ?<CODESPLIT>SELECT CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = COMPLAINTSalias0.CUSTOMER_ID ORDER BY COMPLAINTSalias0.DATE_COMPLAINT_RAISED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List countries that have more than one swimmer .<CODESPLIT>SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT COMPLAINTSalias0.CUSTOMER_ID FROM COMPLAINTS AS COMPLAINTSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the phone number of all the customers and staff .<CODESPLIT>SELECT CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT STAFFalias0.PHONE_NUMBER FROM STAFF AS STAFFalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the largest population<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and category of the most expensive product .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the prices of products which has never received a single complaint .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT COMPLAINTSalias0.PRODUCT_ID FROM COMPLAINTS AS COMPLAINTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show institution names along with the number of proteins for each institution .<CODESPLIT>SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_CATEGORY_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_CATEGORY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the staff member who processed the complaint of the cheapest product .<CODESPLIT>SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which complaint status has more than var0 records on file ?<CODESPLIT>SELECT CUSTOMERalias0.ACC_TYPE , CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME HAVING SUM( LOANalias0.AMOUNT ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the staff whose email address contains " var0 " .<CODESPLIT>SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 WHERE STAFFalias0.EMAIL_ADDRESS LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities .<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMER_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last name of the staff who has handled the first ever complaint ?<CODESPLIT>SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID ORDER BY COMPLAINTSalias0.DATE_COMPLAINT_RAISED LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct complaint type codes are there in the database ?<CODESPLIT>SELECT COUNT( DISTINCT COMPLAINTSalias0.COMPLAINT_TYPE_CODE ) FROM COMPLAINTS AS COMPLAINTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the address line 1 and 2 of the customer with email " var0 " .<CODESPLIT>SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.GENRE_IS = "var0" OR SONGalias0.LANGUAGES = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of complaints with var0 type for each complaint status .<CODESPLIT>SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE , COUNT( COMPLAINTSalias0.* ) FROM COMPLAINTS AS COMPLAINTSalias0 WHERE COMPLAINT_TYPE_CODE = "var0" GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is first names of the top var0 staff who have handled the greatest number of complaints ?<CODESPLIT>SELECT STAFFalias0.FIRST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID GROUP BY COMPLAINTSalias0.STAFF_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How mvar0ny lessons tvar0ught by stvar0ff whose first nvar0me hvar0s letter ' var0 ' in it ?<CODESPLIT>SELECT CUSTOMERSalias0.STATE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY STATE ORDER BY COUNT( * ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " on var1 conference .<CODESPLIT>SELECT COUNT( * ) FROM SUBMISSION AS SUBMISSIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the authors of submissions in ascending order of scores .<CODESPLIT>SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 WHERE ENTREPRENEURalias0.MONEY_REQUESTED > var0 INTERSECT SELECT ENTREPRENEURalias1.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias1 WHERE ENTREPRENEURalias1.MONEY_REQUESTED < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the authors of submissions and their colleges ?<CODESPLIT>SELECT SUBMISSIONalias0.AUTHOR , SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of authors from college " var0 " or " var1 "<CODESPLIT>SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.COLLEGE = "var0" OR SUBMISSIONalias0.COLLEGE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average score of submissions ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the author of the submission with the highest score ?<CODESPLIT>SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different colleges along with the number of authors of submission from each college .<CODESPLIT>SELECT COUNT( * ) , SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 GROUP BY SUBMISSIONalias0.COLLEGE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the most common college of authors of submissions .<CODESPLIT>SELECT SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the colleges that have both authors with submission score larger than var0 and authors with submission score smaller than var1 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.PAYMENT_METHOD_CODE = "var0" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the authors of submissions and the acceptance results of their submissions .<CODESPLIT>SELECT ACCEPTANCEalias0.RESULT , SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the result of the submission with the highest score .<CODESPLIT>SELECT ACCEPTANCEalias0.RESULT FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each author and the number of workshops they submitted to .<CODESPLIT>SELECT COUNT( DISTINCT ACCEPTANCEalias0.WORKSHOP_ID ) , SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID GROUP BY SUBMISSIONalias0.AUTHOR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the authors who have submissions to more than one workshop .<CODESPLIT>SELECT SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID GROUP BY SUBMISSIONalias0.AUTHOR HAVING COUNT( DISTINCT ACCEPTANCEalias0.WORKSHOP_ID ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the date and venue of each workshop in ascending alphabetical order of the venue .<CODESPLIT>SELECT WORKSHOPalias0.DATE , WORKSHOPalias0.VENUE FROM WORKSHOP AS WORKSHOPalias0 ORDER BY WORKSHOPalias0.VENUE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the authors who do not have submission to any workshop .<CODESPLIT>SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.SUBMISSION_ID NOT IN ( SELECT ACCEPTANCEalias0.SUBMISSION_ID FROM ACCEPTANCE AS ACCEPTANCEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of investors in total .<CODESPLIT>SELECT COUNT( * ) FROM INVESTORS AS INVESTORSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all investor details .<CODESPLIT>SELECT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = "var0" AND LISTalias0.LASTNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct lot details .<CODESPLIT>SELECT DISTINCT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of all the papers in var0 .<CODESPLIT>SELECT MAX( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and count of each product in all orders .<CODESPLIT>SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION , TRANSACTIONSalias0.SHARE_COUNT FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total share of transactions ?<CODESPLIT>SELECT WINEalias0.NAME , WINEalias0.SCORE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all transaction ids with transaction code ' var0 ' .<CODESPLIT>SELECT DISTINCT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE SCREEN_MODEalias0.USED_KB BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all dates of transactions whose type code is " var0 " .<CODESPLIT>SELECT DRIVERalias0.AGE , DRIVERalias0.HOME_CITY , DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the code of the product that is cheapest in each product category .<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the description of transaction type with code " var0 " .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" GROUP BY WRITESalias0.PAPERID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the minimum amount of transactions whose type code is " var0 " and whose share count is bigger than var1 .<CODESPLIT>SELECT MIN( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.SHARE_COUNT > var1 AND TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the maximum share count of transactions where the amount is smaller than var0<CODESPLIT>SELECT MAX( TRANSACTIONSalias0.SHARE_COUNT ) FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct ages of students who have secretary votes in the fall election cycle .<CODESPLIT>SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION > var1 OR TRANSACTIONSalias0.SHARE_COUNT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the transaction type descriptions and dates if the share count is smaller than var0 .<CODESPLIT>SELECT DERIVED_TABLEalias0.TRANSACTION_TYPE_DESCRIPTION , TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM REF_TRANSACTION_TYPES AS DERIVED_TABLEalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = DERIVED_TABLEalias0.TRANSACTION_TYPE_CODE WHERE TRANSACTIONSalias0.SHARE_COUNT < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show details of all investors if they make any transaction with share count greater than var0 .<CODESPLIT>SELECT DEPARTMENTalias0.CREATION FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY CREATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct transaction types are used in the transactions ?<CODESPLIT>SELECT COUNT( DISTINCT TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ) FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the lot details and investor ids .<CODESPLIT>SELECT LOTSalias0.INVESTOR_ID , LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the var0ot detaivar0s of var0ots that bevar0ong to investors with detaivar0s " var0 " ?<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM INVESTORS AS INVESTORSalias0 JOIN LOTS AS LOTSalias0 ON LOTSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID WHERE INVESTORSalias0.INVESTOR_DETAILS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the purchase details of transactions with amount bigger than var0 ?<CODESPLIT>SELECT PURCHASESalias0.PURCHASE_DETAILS FROM PURCHASES AS PURCHASESalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = PURCHASESalias0.PURCHASE_TRANSACTION_ID WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the sale details and dates of transactions with amount smaller than var0 ?<CODESPLIT>SELECT SALESalias0.SALES_DETAILS , TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM SALES AS SALESalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = SALESalias0.SALES_TRANSACTION_ID WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of film studio that have the most number of films .<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.TRANSACTION_ID = LOTSalias0.LOT_ID JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID WHERE TRANSACTIONSalias0.SHARE_COUNT < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the lot details of lots associated with transactions whose share count is bigger than var0 and whose type code is " var1 " ?<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.TRANSACTION_ID = LOTSalias0.LOT_ID JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID WHERE TRANSACTIONSalias0.SHARE_COUNT > var0 AND TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of representatives with more than var0 votes in election ?<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the maximum and minimum share count of different transaction types .<CODESPLIT>SELECT MAX( TRANSACTIONSalias0.SHARE_COUNT ) , MIN( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average share count of transactions for different investors .<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average share count of transactions each each investor , ordered by average share count .<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY INVESTOR_ID ORDER BY AVG( TRANSACTIONSalias0.SHARE_COUNT ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average amount of transactions for different investors .<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average amount of transactions for different lots .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY = ( SELECT MAX( DORMalias1.STUDENT_CAPACITY ) FROM DORM AS DORMalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average amount of transactions for different lots , ordered by average amount of transactions .<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONS_LOTSalias0.LOT_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID GROUP BY TRANSACTIONS_LOTSalias0.LOT_ID ORDER BY AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of transactions with transaction type code " var0 " for different investors if it is larger than 0 .<CODESPLIT>SELECT COUNT( * ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTION_TYPE_CODE = "var0" GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show total hours per week and number of games played for student var0 var1 .<CODESPLIT>SELECT COUNT( * ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the transaction type code that occurs the fewest times .<CODESPLIT>SELECT TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states contain at least one major rivers<CODESPLIT>SELECT TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the state with the smallest area<CODESPLIT>SELECT DERIVED_TABLEalias0.TRANSACTION_TYPE_DESCRIPTION FROM REF_TRANSACTION_TYPES AS DERIVED_TABLEalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = DERIVED_TABLEalias0.TRANSACTION_TYPE_CODE GROUP BY DERIVED_TABLEalias0.TRANSACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id and details of the investor that has the largest number of transactions .<CODESPLIT>SELECT JOURNALalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE KEYWORDalias0.KEYWORD = "var0" GROUP BY JOURNALalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the id and details for the investors who have the top var0 number of transactions .<CODESPLIT>SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of the investors who have at least two transactions .<CODESPLIT>SELECT TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the staff that is in charge of the attraction named " var0 " ?<CODESPLIT>SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = "var0" GROUP BY TRANSACTIONSalias0.INVESTOR_ID HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates of transactions with at least var0 share count or amount bigger than var0 ?<CODESPLIT>SELECT COUNT( * ) FROM VISITOR WHERE AGE < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the details of all sales and purchases ?<CODESPLIT>SELECT SALESalias0.SALES_DETAILS FROM SALES AS SALESalias0 UNION SELECT PURCHASESalias0.PURCHASE_DETAILS FROM PURCHASES AS PURCHASESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the details of the lots which are not used in any transactions ?<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 EXCEPT SELECT LOTSalias1.LOT_DETAILS FROM LOTS AS LOTSalias1 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.LOT_ID = LOTSalias1.LOT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many available hotels are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM HOTELS AS HOTELSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the person who has no var0 friends .<CODESPLIT>SELECT HOTELSalias0.PRICE_RANGE FROM HOTELS AS HOTELSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct location names .<CODESPLIT>SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" GROUP BY ROOMSalias0.DECOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and details of all the staff members .<CODESPLIT>SELECT MAX( POSTSEASONalias0.WINS ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show details of all visitors .<CODESPLIT>SELECT VISITORSalias0.TOURIST_DETAILS FROM VISITORS AS VISITORSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many weddings are there in year var0 ?<CODESPLIT>SELECT HOTELSalias0.PRICE_RANGE FROM HOTELS AS HOTELSalias0 WHERE HOTELSalias0.STAR_RATING_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average price range of hotels that have var0 star ratings and allow pets .<CODESPLIT>SELECT AVG( HOTELSalias0.PRICE_RANGE ) FROM HOTELS AS HOTELSalias0 WHERE HOTELSalias0.PETS_ALLOWED_YN = var1 AND HOTELSalias0.STAR_RATING_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the address of the location " var0 " ?<CODESPLIT>SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.YEAR_OF_WORK DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the detail of the location var0 ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the student ids of students who don't have any allergies ?<CODESPLIT>SELECT LOCATIONSalias0.LOCATION_NAME FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct names are associated with all the photos ?<CODESPLIT>SELECT COUNT( DISTINCT PHOTOSalias0.NAME ) FROM PHOTOS AS PHOTOSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct visit dates ?<CODESPLIT>SELECT DISTINCT VISITSalias0.VISIT_DATE FROM VISITS AS VISITSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the tourist attractions that can be accessed by var0 ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and opening hours of the tourist attractions that can be accessed by var0 or var1 ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.OPENING_HOURS FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var0" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the star rating descriptions of the hotels with price above var0 ?<CODESPLIT>SELECT REF_HOTEL_STAR_RATINGSalias0.STAR_RATING_DESCRIPTION FROM HOTELS AS HOTELSalias0 JOIN REF_HOTEL_STAR_RATINGS AS REF_HOTEL_STAR_RATINGSalias0 ON REF_HOTEL_STAR_RATINGSalias0.STAR_RATING_CODE = HOTELSalias0.STAR_RATING_CODE WHERE HOTELSalias0.PRICE_RANGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the details and opening hours of the museums ?<CODESPLIT>SELECT COUNT( * ) FROM RAILWAY AS RAILWAYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the tourist attraction that is associated with the photo " var0 " ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = PHOTOSalias0.TOURIST_ATTRACTION_ID WHERE PHOTOSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and descriptions of the photos taken at the tourist attraction " var0 " ?<CODESPLIT>SELECT AVG( TRACKalias0.UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the details and ways to get to tourist attractions related to royal family ?<CODESPLIT>SELECT ROYAL_FAMILYalias0.ROYAL_FAMILY_DETAILS , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM ROYAL_FAMILY AS ROYAL_FAMILYalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = ROYAL_FAMILYalias0.ROYAL_FAMILY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct types of the companies that have operated any flights with velocity less than var0 ?<CODESPLIT>SELECT SHOPSalias0.SHOP_DETAILS FROM SHOPS AS SHOPSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = SHOPSalias0.SHOP_ID WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the staff that is in charge of the attraction named " var0 " ?<CODESPLIT>SELECT STAFFalias0.NAME FROM STAFF AS STAFFalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STAFFalias0.TOURIST_ATTRACTION_ID WHERE TOURIST_ATTRACTIONSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the details of the markets that can be accessed by var0 or var1 ?<CODESPLIT>SELECT STREET_MARKETSalias0.MARKET_DETAILS FROM STREET_MARKETS AS STREET_MARKETSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STREET_MARKETSalias0.MARKET_ID WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var0" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the visit date and details of the visitor whose detail is ' var0 ' ?<CODESPLIT>SELECT COUNT( DISTINCT INJURY_ACCIDENTalias0.INJURY ) FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 JOIN GAME AS GAMEalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE GAMEalias0.SEASON > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which tourist attractions does the visitor with detail ' var0 ' visit ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN VISITORS AS VISITORSalias0 ON VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the tourist attractions and the dates when the tourists named var0 or var1 visited there ?<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average price of hotels for each star rating code .<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average price of hotels for different pet policy .<CODESPLIT>SELECT AVG( HOTELSalias0.PRICE_RANGE ) , HOTELSalias0.PETS_ALLOWED_YN FROM HOTELS AS HOTELSalias0 GROUP BY HOTELSalias0.PETS_ALLOWED_YN ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of students whose advisors are professors .<CODESPLIT>SELECT HOTELSalias0.HOTEL_ID , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the details of the top var0 most expensive hotels .<CODESPLIT>SELECT HOTELSalias0.OTHER_HOTEL_DETAILS FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the details and star ratings of the var0 least expensive hotels .<CODESPLIT>SELECT HOTELSalias0.OTHER_HOTEL_DETAILS , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the transportation method most people choose to get to tourist attractions .<CODESPLIT>SELECT STUDENTSalias0.MIDDLE_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the description and code of the attraction type most tourist attractions belong to .<CODESPLIT>SELECT REF_ATTRACTION_TYPESalias0.ATTRACTION_TYPE_DESCRIPTION , TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE FROM REF_ATTRACTION_TYPES AS REF_ATTRACTION_TYPESalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE = REF_ATTRACTION_TYPESalias0.ATTRACTION_TYPE_CODE GROUP BY TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the countries that have never participated in any competition with var0 type .<CODESPLIT>SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different tourist attractions ' names , ids , and the corresponding number of visits .<CODESPLIT>SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and ids of tourist attractions that are visited at least two times .<CODESPLIT>SELECT STADIUMalias0.LOCATION , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the browser that are compatible with both ' var0 ' and ' var1 ' .<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID HAVING COUNT( * ) <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of tourist attractions that can be reached by var1 or is at address var0 ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = "var0" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the product ID of the most frequently ordered item on invoices ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.FEATURE_ID = FEATURESalias0.FEATURE_ID WHERE FEATURESalias0.FEATURE_DETAILS = "var0" UNION SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.FEATURE_ID = FEATURESalias1.FEATURE_ID WHERE FEATURESalias1.FEATURE_DETAILS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the tourist attractions var0 and var1 visit ?<CODESPLIT>SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = "var0" AND SECTIONalias0.YEAR = var1 EXCEPT SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = "var2" AND SECTIONalias1.YEAR = var3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of tourist attraction that var0 visited but var1 did not visit ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = "var0" EXCEPT SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN VISITORS AS VISITORSalias1 JOIN VISITS AS VISITSalias1 ON VISITSalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID AND VISITSalias1.TOURIST_ID = VISITORSalias1.TOURIST_ID WHERE VISITORSalias1.TOURIST_DETAILS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of races held between var0 and var1 ?<CODESPLIT>SELECT COUNT( * ) FROM VISITORS AS VISITORSalias0 WHERE VISITORSalias0.TOURIST_ID NOT IN ( SELECT VISITSalias0.TOURIST_ID FROM VISITS AS VISITSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many video games exist ?<CODESPLIT>SELECT COUNT( * ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many video game types exist ?<CODESPLIT>SELECT COUNT( DISTINCT GTYPE ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all video game types .<CODESPLIT>SELECT DISTINCT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of people in ascending order of weight ?<CODESPLIT>SELECT GNAME , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ORDER BY GNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all video games with type var0 .<CODESPLIT>SELECT GNAME FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GTYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the type of video game var0 .<CODESPLIT>SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants good for var1 food in the var0 ?<CODESPLIT>SELECT COUNT( * ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GTYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the region name with at least two storms .<CODESPLIT>SELECT COUNT( * ) , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which game type has most number of games ?<CODESPLIT>SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which game type has least number of games ?<CODESPLIT>SELECT WINEalias0.NAME , WINEalias0.SCORE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all students who live in var0 .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all students who have advisor var0 .<CODESPLIT>SELECT COUNT( * ) , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT GROUP BY PROJECTSalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show first name for all students with major var0 .<CODESPLIT>SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average , minimum , and maximum age for different majors .<CODESPLIT>SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID ORDER BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all advisors who have at least two students .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.DATE_VALID_FROM , CUSTOMERS_CARDSalias0.DATE_VALID_TO FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights do we have ?<CODESPLIT>SELECT COUNT( DISTINCT SPORTNAME ) FROM SPORTSINFO ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the allergies and their types that the student with first name var0 has ? And order the result by name of allergies .<CODESPLIT>SELECT COUNT( DISTINCT STUID ) FROM SPORTSINFO ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List ids for all student who are on scholarship .<CODESPLIT>SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show last names for all student who are on scholarship .<CODESPLIT>SELECT STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE DERIVED_TABLEalias0.ONSCHOLARSHIP = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many games are played for all students ?<CODESPLIT>SELECT SUM( GAMESPLAYED ) FROM SPORTSINFO ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many games are played for all football games by students on scholarship ?<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID WHERE STUDENTSalias0.PERSONAL_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are flight numbers of flights arriving at City " var0 " ?<CODESPLIT>SELECT COUNT( * ) , SPORTNAME FROM SPORTSINFO GROUP BY SPORTNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student IDs with the number of sports and total number of games played<CODESPLIT>SELECT COUNT( * ) , STUID , SUM( GAMESPLAYED ) FROM SPORTSINFO GROUP BY STUID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student IDs with more than total var0 hours per week on all sports played .<CODESPLIT>SELECT STUID FROM SPORTSINFO GROUP BY STUID HAVING SUM( HOURSPERWEEK ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name and last name of the student who have most number of sports ?<CODESPLIT>SELECT CINEMAalias0.NAME , SUM( SCHEDULEalias0.SHOW_TIMES_PER_DAY ) FROM SCHEDULE AS SCHEDULEalias0 JOIN CINEMA AS CINEMAalias0 ON SCHEDULEalias0.CINEMA_ID = CINEMAalias0.CINEMA_ID GROUP BY SCHEDULEalias0.CINEMA_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and the nationality of the oldest host .<CODESPLIT>SELECT SPORTNAME FROM SPORTSINFO WHERE ONSCHOLARSHIP = "var0" GROUP BY SPORTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show student ids who don't have any sports .<CODESPLIT>SELECT STATIONalias0.CITY , STATIONalias0.LAT , STATIONalias0.LONG FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ORDER BY TRIPalias0.DURATION LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name , last name , and phone of the customer with card var0 .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 INTERSECT SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all artist names and the number of exhibitions for each artist .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = "var0" INTERSECT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all male student ids who don't play football .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ( SELECT CUSTOMERSalias1.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias1 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show total hours per week and number of games played for student var0 var1 .<CODESPLIT>SELECT SUM( GAMESPLAYED ) , SUM( HOURSPERWEEK ) FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which first names are used for professionals or owners but are not used as dog names ?<CODESPLIT>SELECT SUM( GAMESPLAYED ) , SUM( HOURSPERWEEK ) FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE STUDENTalias0.AGE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the forename and surname of the driver who has the smallest laptime ?<CODESPLIT>SELECT COUNT( DISTINCT STUID ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids of students who don't play video game .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all airline names and their abbreviations in " var0 " .<CODESPLIT>SELECT STUID FROM SPORTSINFO INTERSECT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all game ids and the number of hours played .<CODESPLIT>SELECT GAMEID , SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 GROUP BY GAMEID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all student ids and the number of hours played .<CODESPLIT>SELECT STUID , SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 GROUP BY STUID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the game name that has most number of hours played .<CODESPLIT>SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID GROUP BY PLAYS_GAMESalias0.GAMEID ORDER BY SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all game names played by at least var0 hours .<CODESPLIT>SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID GROUP BY PLAYS_GAMESalias0.GAMEID HAVING SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all game names played by var1 var0<CODESPLIT>SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = PLAYS_GAMESalias0.STUID WHERE STUDENTalias0.FNAME = "var1" AND STUDENTalias0.LNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last and first name of students who are playing var0 or var1 .<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE DERIVED_TABLEalias0.SPORTNAME = "var0" OR DERIVED_TABLEalias0.SPORTNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and age of the students who are playing both var0 and var1 .<CODESPLIT>SELECT FNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUID IN ( SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = "var0" INTERSECT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name and gender of the students who are playing both var0 and var1 games .<CODESPLIT>SELECT LNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE STUID IN ( SELECT PLAYS_GAMESalias0.STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID WHERE VIDEO_GAMESalias0.GNAME = "var0" INTERSECT SELECT PLAYS_GAMESalias1.STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias1 JOIN VIDEO_GAMES AS VIDEO_GAMESalias1 ON VIDEO_GAMESalias1.GAMEID = PLAYS_GAMESalias1.GAMEID WHERE VIDEO_GAMESalias1.GNAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers are published by the institution " var0 " ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average amount of items ordered in each order ?<CODESPLIT>SELECT AVG( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer last name , id and phone number with most number of orders ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the " date became customers " of the customers whose ID is between var0 and var1 .<CODESPLIT>SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY PROJECT_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of customers using the most popular payment method ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ( SELECT CUSTOMERSalias1.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias1 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the details of all products ?<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_DETAILS FROM PRODUCTS AS PRODUCTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of all customers whose name contains " var0 " .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is id of the staff who had a Staff Department Assignment earlier than any var0 ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_DETAILS FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_DETAILS LIKE "var0" OR PRODUCTSalias0.PRODUCT_DETAILS LIKE "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the address content of the customer named " var0 " ?<CODESPLIT>SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers are living in city " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who are living in var0 ?<CODESPLIT>SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.ROOM_COUNT ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of orchestras whose record format is " var0 " or " var1 " .<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY NOT IN ( SELECT DISTINCT ADDRESSESalias1.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias1 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>journal articles by varvar1<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the city with post code var0 .<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the state and country of all cities with post code starting with 4 .<CODESPLIT>SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all product names and the number of customers having an order on each product .<CODESPLIT>SELECT ADDRESSESalias0.COUNTRY FROM ADDRESSES AS ADDRESSESalias0 GROUP BY ADDRESSESalias0.COUNTRY HAVING COUNT( ADDRESSESalias0.ADDRESS_ID ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the contact channel codes that were used less than var0 times .<CODESPLIT>SELECT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 GROUP BY CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE HAVING COUNT( CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID ) < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which movies did " var0 " direct ?<CODESPLIT>SELECT DISTINCT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the " active to date " of the latest contact channel used by " var0 " ?<CODESPLIT>SELECT MAX( CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average time span of contact channels in the database ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias1.CUSTOMER_FIRST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the channel code and contact number of the customer contact channel that was active for the longest time ?<CODESPLIT>SELECT PARTSalias0.PART_ID , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN PART_FAULTS AS PART_FAULTSalias0 ON PART_FAULTSalias0.PART_ID = PARTSalias0.PART_ID GROUP BY PARTSalias0.PART_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of bedrooms of all apartments ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the customer that made the order with the largest quantity ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE ORDER_ITEMSalias0.ORDER_QUANTITY = ( SELECT MAX( ORDER_ITEMSalias1.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the customer that has purchased the most items ?<CODESPLIT>SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many regions are affected ?<CODESPLIT>SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many types of products have var0 bought in total ?<CODESPLIT>SELECT VEHICLESalias0.VEHICLE_DETAILS , VEHICLESalias0.VEHICLE_ID FROM VEHICLES AS VEHICLESalias0 JOIN LESSONS AS LESSONSalias0 ON VEHICLESalias0.VEHICLE_ID = LESSONSalias0.VEHICLE_ID GROUP BY VEHICLESalias0.VEHICLE_ID ORDER BY COUNT( LESSONSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total quantity of products purchased by " var0 " ?<CODESPLIT>SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have at least one order with status " var0 " ?<CODESPLIT>SELECT COUNT( DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many orders have detail " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of nurses who are nursing an undergoing treatment .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_ORDERSalias0.ORDER_DATE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of products that are in orders with status " var0 " ?<CODESPLIT>SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total amount of products ordered before var0 .<CODESPLIT>SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_DATE < "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who made the latest order ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID ORDER BY CUSTOMER_ORDERSalias0.ORDER_DATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which product has been ordered most number of times ?<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ORDER BY COUNT( ORDER_ITEMSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and ID of the product whose total order quantity is the largest .<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_DETAILS , PRODUCTSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the addresses in var0 , var1 or in var2 , var3 .<CODESPLIT>SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = "var0" AND ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var1" UNION SELECT ADDRESSESalias1.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias1 WHERE ADDRESSESalias1.CITY = "var2" AND ADDRESSESalias1.STATE_PROVINCE_COUNTY = "var3" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who did not pay with var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers who never ordered product var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers who never placed an order .<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 EXCEPT SELECT COUNTRYLANGUAGEalias1.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 WHERE COUNTRYLANGUAGEalias1.LANGUAGE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers who ordered both products var0 and var1 .<CODESPLIT>SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 EXCEPT SELECT DEPARTMENTalias1.DNAME FROM DEPARTMENT AS DEPARTMENTalias1 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias1.DNO ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the age of all music artists .<CODESPLIT>SELECT ARTISTalias0.AGE FROM ARTIST AS ARTISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age of all artists ?<CODESPLIT>SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all students ' first names and last names who majored in var0 .<CODESPLIT>SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the var0 Famous release dates ?<CODESPLIT>SELECT var0 ( FAMOUS_RELEASE_DATE ) FROM ARTIST AS ARTISTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the dates of ceremony and the results of all music festivals<CODESPLIT>SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY , MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the category of music festivals with result " var0 " ?<CODESPLIT>SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.RESULT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum week on top of all volumes ?<CODESPLIT>SELECT MAX( VOLUMEalias0.WEEKS_ON_TOP ) , MIN( VOLUMEalias0.WEEKS_ON_TOP ) FROM VOLUME AS VOLUMEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the songs in volumes with more than var0 week on top ?<CODESPLIT>SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list all songs in volumes in ascending alphabetical order .<CODESPLIT>SELECT CNAME , ENR FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = "var1" AND ENR > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct artists do the volumes associate to ?<CODESPLIT>SELECT COUNT( DISTINCT VOLUMEalias0.ARTIST_ID ) FROM VOLUME AS VOLUMEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the date of ceremony of the volumes that last more than var0 weeks on top .<CODESPLIT>SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.VOLUME_ID = MUSIC_FESTIVALalias0.VOLUME WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of cities and names of counties they are in .<CODESPLIT>SELECT VOLUMEalias0.SONG FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.VOLUME_ID = MUSIC_FESTIVALalias0.VOLUME WHERE MUSIC_FESTIVALalias0.RESULT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the issue dates of volumes associated with the artist " var0 " ?<CODESPLIT>SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.ARTIST = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the songs in volumes associated with the artist aged var0 or older ?<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average weeks on top of volumes associated with the artist aged var0 or younger ?<CODESPLIT>SELECT AVG( VOLUMEalias0.WEEKS_ON_TOP ) FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the title and maximum price of each film ?<CODESPLIT>SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list the age and famous title of artists in descending order of age .<CODESPLIT>SELECT ARTISTalias0.AGE , ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the customer who has made the minimum amount of payment in one claim ?<CODESPLIT>SELECT ARTISTalias0.FAMOUS_RELEASE_DATE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the categories of the music festivals and the count .<CODESPLIT>SELECT COUNT( MUSIC_FESTIVALalias0.* ) , MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY MUSIC_FESTIVALalias0.CATEGORY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common result of the music festival ?<CODESPLIT>SELECT MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY RESULT ORDER BY COUNT( MUSIC_FESTIVALalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers are there ?<CODESPLIT>SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY MUSIC_FESTIVALalias0.CATEGORY HAVING COUNT( MUSIC_FESTIVALalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the song in the volume with the maximum weeks on top ?<CODESPLIT>SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the famous titles of artists that do not have any volume .<CODESPLIT>SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT VOLUMEalias0.ARTIST_ID FROM VOLUME AS VOLUMEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and details of the customers who have at least var0 events ?<CODESPLIT>SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 INTERSECT SELECT ARTISTalias1.FAMOUS_TITLE FROM ARTIST AS ARTISTalias1 JOIN VOLUME AS VOLUMEalias1 ON VOLUMEalias1.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE VOLUMEalias1.WEEKS_ON_TOP < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the date of ceremony of music festivals with category " var0 " and result " var1 " ?<CODESPLIT>SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.CATEGORY = "var0" AND MUSIC_FESTIVALalias0.RESULT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the issue date of the volume with the minimum weeks on top ?<CODESPLIT>SELECT VOLUMEalias0.ISSUE_DATE FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border at least one other state<CODESPLIT>SELECT COUNT( MUSIC_FESTIVALalias0.* ) , MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY RESULT ORDER BY COUNT( MUSIC_FESTIVALalias0.* ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the issue dates of volumes associated with the artist aged var0 or younger ?<CODESPLIT>SELECT BLOCKalias0.BLOCKFLOOR , COUNT( * ) FROM BLOCK AS BLOCKalias0 JOIN ROOM AS ROOMalias0 ON ROOMalias0.BLOCKFLOOR = BLOCKalias0.BLOCKFLOOR AND ROOMalias0.BLOCKCODE = BLOCKalias0.BLOCKCODE GROUP BY BLOCKalias0.BLOCKFLOOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the area code in which the most voters voted ?<CODESPLIT>SELECT COUNT( * ) FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of roller coasters by ascending order of length .<CODESPLIT>SELECT ROLLER_COASTERalias0.NAME FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ORDER BY ROLLER_COASTERalias0.LENGTH ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the lengths and heights of roller coasters ?<CODESPLIT>SELECT ROLLER_COASTERalias0.HEIGHT , ROLLER_COASTERalias0.LENGTH FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the hometowns that are shared by at least two gymnasts ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.LANGUAGES != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the statuses of roller coasters longer than var0 or higher than var1 .<CODESPLIT>SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.HEIGHT > var1 OR ROLLER_COASTERalias0.LENGTH > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var10 in var0 conference with more than var1 citations .<CODESPLIT>SELECT ROLLER_COASTERalias0.SPEED FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ORDER BY ROLLER_COASTERalias0.LENGTH DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average speed of roller coasters ?<CODESPLIT>SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = "var0" AND ORGANIZATIONalias0.CONTINENT = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the different statuses and the numbers of roller coasters for each status .<CODESPLIT>SELECT PERFORMERSalias0.CUSTOMER_PHONE FROM PERFORMERS AS PERFORMERSalias0 WHERE PERFORMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common status of roller coasters .<CODESPLIT>SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 GROUP BY STATUS ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the status shared by more than two roller coaster .<CODESPLIT>SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 GROUP BY ROLLER_COASTERalias0.STATUS HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the park of the roller coaster with the highest speed .<CODESPLIT>SELECT ROLLER_COASTERalias0.PARK FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ORDER BY ROLLER_COASTERalias0.SPEED DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of roller coasters and names of country they are in .<CODESPLIT>SELECT COUNTRYalias0.NAME , ROLLER_COASTERalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of countries that have more than one roller coaster .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.NAME HAVING COUNT( COUNTRYalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and population of the country that has the highest roller coaster .<CODESPLIT>SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID ORDER BY ROLLER_COASTERalias0.HEIGHT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of countries and the average speed of roller coasters from each country .<CODESPLIT>SELECT AVG( ROLLER_COASTERalias0.SPEED ) , COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of journalists in ascending order of years working .<CODESPLIT>SELECT COUNT( COUNTRYalias0.* ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.COUNTRY_ID NOT IN ( SELECT ROLLER_COASTERalias0.COUNTRY_ID FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.LENGTH > var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the country names , area and population which has both roller coasters with speed higher<CODESPLIT>SELECT COUNTRYalias0.AREA , COUNTRYalias0.NAME , COUNTRYalias0.POPULATION FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID WHERE ROLLER_COASTERalias0.SPEED > var0 INTERSECT SELECT COUNTRYalias1.AREA , COUNTRYalias1.NAME , COUNTRYalias1.POPULATION FROM COUNTRY AS COUNTRYalias1 JOIN ROLLER_COASTER AS ROLLER_COASTERalias1 ON ROLLER_COASTERalias1.COUNTRY_ID = COUNTRYalias1.COUNTRY_ID WHERE ROLLER_COASTERalias1.SPEED < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most cited paper at var0 ?<CODESPLIT>SELECT COUNT( DISTINCT CAPTAINalias0.RANK ) FROM CAPTAIN AS CAPTAINalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many captains are in each rank ?<CODESPLIT>SELECT CAPTAINalias0.RANK , COUNT( * ) FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.RANK ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many captains with younger than var0 are in each rank ?<CODESPLIT>SELECT CAPTAINalias0.RANK , COUNT( * ) FROM CAPTAIN AS CAPTAINalias0 WHERE AGE < var0 GROUP BY CAPTAINalias0.RANK ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the latest movie which " var0 " acted in<CODESPLIT>SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 ORDER BY CAPTAINalias0.AGE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , class and rank of all captains .<CODESPLIT>SELECT CAPTAINalias0.CLASS , CAPTAINalias0.NAME , CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which rank is the most common among captains ?<CODESPLIT>SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 GROUP BY RANK ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which classes have more than two captains ?<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of captains whose rank are either var0 or var1 .<CODESPLIT>SELECT PEOPLEalias0.HEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.TOTAL < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average elevation of all airports for each country .<CODESPLIT>SELECT AVG( CAPTAINalias0.AGE ) , CAPTAINalias0.CLASS , MIN( CAPTAINalias0.AGE ) FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.CLASS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many degrees were conferred in " var0 " in var1 ?<CODESPLIT>SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.CLASS = "var0" INTERSECT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all the var1 in var0<CODESPLIT>SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 EXCEPT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the youngest captain ?<CODESPLIT>SELECT PUBLICATIONalias0.PUBLICATION_DATE FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATION_DATE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , type , and flag of the ship that is built in the most recent year .<CODESPLIT>SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Group by ships by flag , and return number of ships that have each flag .<CODESPLIT>SELECT CALENDAR_DATE , DAY_NUMBER FROM REF_CALENDAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which flag is most widely used among all ships ?<CODESPLIT>SELECT SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY FLAG ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all ship names in the order of built year and class .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.BUILT_YEAR , SHIPalias0.CLASS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ship type that are used by both ships with var0 and var1 flags .<CODESPLIT>SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION < ( SELECT MAX( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of papers does var0 publish<CODESPLIT>SELECT SHIPalias0.BUILT_YEAR FROM SHIP AS SHIPalias0 GROUP BY BUILT_YEAR ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of actors whose age is not var0 .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID GROUP BY CAPTAINalias0.SHIP_ID HAVING COUNT( SHIPalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the names and classes of the ships that do not have any captain yet ?<CODESPLIT>SELECT COUNT( DISTINCT PARTYalias0.PARTY_NAME ) FROM PARTY AS PARTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the ship that is steered by the youngest captain .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID ORDER BY CAPTAINalias0.AGE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all product colors .<CODESPLIT>SELECT SHIPalias0.FLAG , SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT CAPTAINalias0.SHIP_ID FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.RANK = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the ships that are steered by both a captain with var0 rank and a captain with var1 rank .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID WHERE CAPTAINalias0.RANK = "var0" INTERSECT SELECT SHIPalias1.NAME FROM SHIP AS SHIPalias1 JOIN CAPTAIN AS CAPTAINalias1 ON SHIPalias1.SHIP_ID = CAPTAINalias1.SHIP_ID WHERE CAPTAINalias1.RANK = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Among all the claims , which settlements have a claimed amount that is no more than the average ? List the claim start date .<CODESPLIT>SELECT HOSTING_CITYalias0.HOST_CITY FROM HOSTING_CITY AS HOSTING_CITYalias0 ORDER BY HOSTING_CITYalias0.YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the match ids of the cities that hosted competition " var0 " ?<CODESPLIT>SELECT MATCHalias0.MATCH_ID FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COMPETITION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each account type , find the average account balance of customers with credit score lower than var0 .<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID WHERE HOSTING_CITYalias0.YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has hosted the most events ?<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the chip models that are not used by any phone with full accreditation type .<CODESPLIT>SELECT MATCHalias0.VENUE FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID JOIN MATCH AS MATCHalias0 ON MATCHalias0.MATCH_ID = HOSTING_CITYalias0.MATCH_ID WHERE CITYalias0.CITY = "var0" AND MATCHalias0.COMPETITION = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all church names in descending order of opening date .<CODESPLIT>SELECT TEMPERATUREalias0.JAN FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE CITYalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the host year of city " var0 " ?<CODESPLIT>SELECT SCIENTISTSalias0.NAME , SCIENTISTSalias0.SSN FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which three cities have the largest regional population ?<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 ORDER BY CITYalias0.REGIONAL_POPULATION DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has the lowest GDP ? Please list the city name and its GDP .<CODESPLIT>SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.PAYMENT_METHOD_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has the highest temperature in February ?<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID ORDER BY TEMPERATUREalias0.FEB DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and name of the most expensive base price room .<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL OR TEMPERATUREalias0.MAR > TEMPERATUREalias0.OCT ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What country does var0 var1 live ?<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL INTERSECT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities .<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.DEC EXCEPT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities ?<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.FEB > TEMPERATUREalias0.JUN UNION SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please give me a list of cities whose regional population is over var0 .<CODESPLIT>SELECT DOCUMENTSalias0.RECEIPT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please give me a list of cities whose regional population is over 8000000 or under var1 .<CODESPLIT>SELECT CITYalias0.CITY FROM CITY AS CITYalias0 WHERE CITYalias0.REGIONAL_POPULATION > var0 UNION SELECT CITYalias1.CITY FROM CITY AS CITYalias1 WHERE CITYalias1.REGIONAL_POPULATION < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of countries that have more than one roller coaster .<CODESPLIT>SELECT COUNT( * ) , MATCHalias0.COMPETITION FROM MATCH AS MATCHalias0 GROUP BY MATCHalias0.COMPETITION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List venues of all matches in the order of their dates starting from the most recent one .<CODESPLIT>SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the GDP of the city with the largest population .<CODESPLIT>SELECT COUNT( CITYalias0.* ) FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.POPULATION > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of workshop groups in which services with product name " var0 " are performed ?<CODESPLIT>SELECT CITYalias0.GDP , CITYalias0.REGIONAL_POPULATION FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID GROUP BY HOSTING_CITYalias0.HOST_CITY HAVING COUNT( HOSTING_CITYalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List every individual's first name , middle name and last name in alphabetical order by last name .<CODESPLIT>SELECT INDIVIDUALSalias0.INDIVIDUAL_FIRST_NAME , INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME , INDIVIDUALSalias0.INDIVIDUAL_MIDDLE_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 ORDER BY INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the types of forms .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE SURFACEAREA > ( SELECT MIN( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the countries that are in the continent of var0 and have a population of var1 ?<CODESPLIT>SELECT FORMSalias0.FORM_NAME FROM FORMS AS FORMSalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.FORM_ID = FORMSalias0.FORM_ID GROUP BY PARTY_FORMSalias0.FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which classrooms are used by grade var0 ?<CODESPLIT>SELECT PARTIESalias0.PARTY_PHONE , PARTIESalias0.PAYMENT_METHOD_CODE FROM PARTIES AS PARTIESalias0 WHERE PARTIESalias0.PARTY_EMAIL = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of buildings with a height above the average or a number of floors above the average .<CODESPLIT>SELECT PARTIESalias0.PARTY_EMAIL FROM PARTIES AS PARTIESalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.PARTY_ID = PARTIESalias0.PARTY_ID WHERE PARTY_FORMSalias0.FORM_ID = ( SELECT PARTY_FORMSalias1.FORM_ID FROM PARTY_FORMS AS PARTY_FORMSalias1 GROUP BY FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the name of organizations in order of the date formed .<CODESPLIT>SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 ORDER BY ORGANIZATIONSalias0.DATE_FORMED ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the youngest organization .<CODESPLIT>SELECT SUM( BUDGETalias0.BUDGETED ) FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the latest contact individual of the organization " var0 " .<CODESPLIT>SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.ORGANIZATION_NAME = "var0" ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the first ever contact person of the organization with the highest UK Vat number .<CODESPLIT>SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.UK_VAT_NUMBER = ( SELECT MAX( ORGANIZATIONSalias1.UK_VAT_NUMBER ) FROM ORGANIZATIONS AS ORGANIZATIONSalias1 ) ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find name of the services that has never been used .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "var0" ) AND CITYalias0.STATE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many rooms does the var0 building have ?<CODESPLIT>SELECT ADDRESSESalias0.TOWN_CITY FROM ADDRESSES AS ADDRESSESalias0 UNION SELECT ADDRESSESalias1.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cities are there in state " var0 " ?<CODESPLIT>SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the payment method code used by more than var0 parties .<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of organizations whose names contain " var0 " .<CODESPLIT>SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct payment methods are used by parties ?<CODESPLIT>SELECT COUNT( DISTINCT PARTIESalias0.PAYMENT_METHOD_CODE ) FROM PARTIES AS PARTIESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which is the email of the party that has used the services the most number of times ?<CODESPLIT>SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID WHERE CITYalias0.WHITE > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which state can address " var0 " possibly be in ?<CODESPLIT>SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.LINE_1_NUMBER_BUILDING LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of organization that has the greatest number of contact individuals ?<CODESPLIT>SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID GROUP BY ORGANIZATIONSalias0.ORGANIZATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which kind of part has the least number of faults ? List the part name .<CODESPLIT>SELECT DISTINCT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many drivers are there ?<CODESPLIT>SELECT COUNT( * ) FROM DRIVER AS DRIVERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , home city , and age for all drivers .<CODESPLIT>SELECT DRIVERalias0.AGE , DRIVERalias0.HOME_CITY , DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>when is the hire date for those employees whose first name does not containing the letter var0 ?<CODESPLIT>SELECT COUNT( * ) , DRIVERalias0.PARTY FROM DRIVER AS DRIVERalias0 GROUP BY DRIVERalias0.PARTY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of drivers in descending order of age .<CODESPLIT>SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 ORDER BY DRIVERalias0.AGE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all different home cities .<CODESPLIT>SELECT DISTINCT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members that have a rank in round higher than var0 .<CODESPLIT>SELECT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 GROUP BY HOME_CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers has var0 co-authored since var1 ?<CODESPLIT>SELECT DRIVERalias0.PARTY FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.AGE > var1 AND DRIVERalias0.HOME_CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show home city where at least two drivers older than var0 are from .<CODESPLIT>SELECT CLASSROOMalias0.BUILDING , COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CAPACITY > var0 GROUP BY CLASSROOMalias0.BUILDING ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of the products that have their color described as " var0 " and have a characteristic named " var1 " .<CODESPLIT>SELECT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 EXCEPT SELECT DRIVERalias1.HOME_CITY FROM DRIVER AS DRIVERalias1 WHERE DRIVERalias1.AGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List var0's albums .<CODESPLIT>SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.DRIVER_ID NOT IN ( SELECT SCHOOL_BUSalias0.DRIVER_ID FROM SCHOOL_BUS AS SCHOOL_BUSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the types of schools that have two schools .<CODESPLIT>SELECT SCHOOLalias0.TYPE FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.TYPE HAVING COUNT( * ) = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the school name and driver name for all school buses .<CODESPLIT>SELECT DRIVERalias0.NAME , SCHOOLalias0.SCHOOL FROM SCHOOL_BUS AS SCHOOL_BUSalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_BUSalias0.SCHOOL_ID JOIN DRIVER AS DRIVERalias0 ON SCHOOL_BUSalias0.DRIVER_ID = DRIVERalias0.DRIVER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum , minimum and average years spent working on a school bus ?<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the school name and type for schools without a school bus .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the type of school and the number of buses for each type .<CODESPLIT>SELECT COUNT( SCHOOL_BUSalias0.* ) , SCHOOLalias0.TYPE FROM SCHOOL_BUS AS SCHOOL_BUSalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_BUSalias0.SCHOOL_ID GROUP BY SCHOOLalias0.TYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of student var0 var1 ?<CODESPLIT>SELECT COUNT( * ) FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.AGE < var1 OR DRIVERalias0.HOME_CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List names for drivers from var0 city and younger than var1 .<CODESPLIT>SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.AGE < var1 AND DRIVERalias0.HOME_CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the name of driver who is driving the school bus with the longest working history .<CODESPLIT>SELECT GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of courses provided in each semester and year .<CODESPLIT>SELECT COUNT( FLIGHTalias0.* ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.VELOCITY > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the vehicle flight number , date and pilot of all the flights , ordered by altitude .<CODESPLIT>SELECT FLIGHTalias0.DATE , FLIGHTalias0.PILOT , FLIGHTalias0.VEHICLE_FLIGHT_NUMBER FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.ALTITUDE ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the id , country , city and name of the airports ordered alphabetically by the name .<CODESPLIT>SELECT AIRPORTalias0.CITY , AIRPORTalias0.COUNTRY , AIRPORTalias0.ID , AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 ORDER BY AIRPORTalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is maximum group equity shareholding of the companies ?<CODESPLIT>SELECT MAX( OPERATE_COMPANYalias0.GROUP_EQUITY_SHAREHOLDING ) FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the velocity of the pilot named ' var0 ' ?<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND CONFERENCEalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many business rates are related to each cmi cross reference ? List cross reference id , master customer id and the n<CODESPLIT>SELECT OPERATE_COMPANYalias0.NAME , OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the codes of countries where var0 is spoken by the largest percentage of people ?<CODESPLIT>SELECT AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.COUNTRY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct types of the companies that have operated any flights with velocity less than var0 ?<CODESPLIT>SELECT DISTINCT OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID WHERE FLIGHTalias0.VELOCITY < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and names of the companies that operated more than one flight ?<CODESPLIT>SELECT OPERATE_COMPANYalias0.ID , OPERATE_COMPANYalias0.NAME FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID GROUP BY OPERATE_COMPANYalias0.ID HAVING COUNT( FLIGHTalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id , name and IATA code of the airport that had most number of flights ?<CODESPLIT>SELECT AIRPORTalias0.IATA , AIRPORTalias0.ID , AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 JOIN FLIGHT AS FLIGHTalias0 ON FLIGHTalias0.AIRPORT_ID = AIRPORTalias0.ID GROUP BY FLIGHTalias0.ID ORDER BY COUNT( FLIGHTalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different pilot names who had piloted a flight in the country ' var0 ' or in the airport named ' var1 ' ?<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the age of all music artists .<CODESPLIT>SELECT COUNT( * ) , OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airports haven't the pilot ' var0 ' driven an aircraft ?<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the pilots who have flied for both a company that mainly provide ' var0 ' services and a company that runs ' var1 ' activities .<CODESPLIT>SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the residences that have both a player of gender " var0 " and a player of gender " var1 " .<CODESPLIT>SELECT AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many companies operates airlines in each airport ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PERPETRATORalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the most common type of Status across cities .<CODESPLIT>SELECT AIRPORTalias0.COUNTRY , COUNT( * ) FROM AIRPORT AS AIRPORTalias0 GROUP BY AIRPORTalias0.COUNTRY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which countries have more than var0 airports ?<CODESPLIT>SELECT AIRPORTalias0.COUNTRY FROM AIRPORT AS AIRPORTalias0 GROUP BY AIRPORTalias0.COUNTRY HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first and last name of all the faculty members who participated in some activity , together with the number of activities they participated in .<CODESPLIT>SELECT FLIGHTalias0.PILOT FROM FLIGHT AS FLIGHTalias0 GROUP BY PILOT ORDER BY COUNT( FLIGHTalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many accounts do we have ?<CODESPLIT>SELECT COUNT( ACCOUNTSalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is maximum and minimum RAM size of phone produced by company named " var0 " ?<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.ACCOUNT_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many statements do we have ?<CODESPLIT>SELECT COUNT( * ) FROM STATEMENTS AS STATEMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all statement ids and statement details .<CODESPLIT>SELECT STATEMENTSalias0.STATEMENT_DETAILS , STATEMENTSalias0.STATEMENT_ID FROM STATEMENTS AS STATEMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of teachers and the number of courses they teach .<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all statement id and the number of accounts for each statement .<CODESPLIT>SELECT ACCOUNTSalias0.STATEMENT_ID , COUNT( ACCOUNTSalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.STATEMENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all cities which has a " var0 " .<CODESPLIT>SELECT ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID GROUP BY ACCOUNTSalias0.STATEMENT_ID ORDER BY COUNT( ACCOUNTSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of documents .<CODESPLIT>SELECT DISTINCT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the document type code , document name , and document description for the document with name ' var0 ' or name ' var1 ' .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_NAME , DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" OR DOCUMENTSalias0.DOCUMENT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids and names of all documents .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.POPULATION > ( SELECT MAX( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many Annual Meeting events happened in the var0 region ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents are with document type code var0 for each product id ?<CODESPLIT>SELECT COUNT( * ) , DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENT_TYPE_CODE = "var0" GROUP BY DOCUMENTSalias0.PROJECT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the document name and the document date for all documents on project with details ' var0 ' .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_DATE , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of amenities var0 dorm have .<CODESPLIT>SELECT COUNT( * ) , DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the project with least number of documents ?<CODESPLIT>SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 WHERE GENDER = "var0" GROUP BY PERSONalias0.JOB ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids for projects with at least var0 documents .<CODESPLIT>SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List document type codes and the number of documents in each code .<CODESPLIT>SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE ORDER BY SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document type code with most number of documents ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the document type code with fewer than var0 documents .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the statement detail and the corresponding document name for the statement with detail ' var0 ' .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME , STATEMENTSalias0.STATEMENT_DETAILS FROM STATEMENTS AS STATEMENTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE STATEMENTSalias0.STATEMENT_DETAILS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all document type codes , document type names , document type descriptions .<CODESPLIT>SELECT DOCUMENT_TYPE_CODE , DOCUMENT_TYPE_DESCRIPTION , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document type description for document type named var0 ?<CODESPLIT>SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document type name and the document type description and creation date for all the documents ?<CODESPLIT>SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_DESCRIPTION , DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME , DOCUMENTSalias0.DOCUMENT_DATE FROM REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON DOCUMENTSalias0.DOCUMENT_TYPE_CODE = DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of projects .<CODESPLIT>SELECT COUNT( * ) FROM PROJECTS AS PROJECTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List ids and details for all projects .<CODESPLIT>SELECT DEPARTMENTalias0.NAME , PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE AFFILIATED_WITHalias0.PRIMARYAFFILIATION = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the project id and detail for the project with at least two documents ?<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many drivers did not participate in the races held in var0 ?<CODESPLIT>SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many budget types do we have ?<CODESPLIT>SELECT COUNT( * ) FROM REF_BUDGET_CODES ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all budget type codes and descriptions .<CODESPLIT>SELECT BUDGET_TYPE_CODE , BUDGET_TYPE_DESCRIPTION FROM REF_BUDGET_CODES ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description for the budget type with code var0 ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name of pilots aged var0 or older ?<CODESPLIT>SELECT COUNT( * ) FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the document ids for the budget type code ' var0 ' ?<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var0" ) AND BORDER_INFOalias0.STATE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the budget type code and description and the corresponding document id .<CODESPLIT>SELECT DERIVED_TABLEalias0.BUDGET_TYPE_CODE , DERIVED_TABLEalias0.BUDGET_TYPE_DESCRIPTION , DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 JOIN REF_BUDGET_CODES AS DERIVED_TABLEalias0 ON DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = DERIVED_TABLEalias0.BUDGET_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all documents with budget types described as ' var0 ' .<CODESPLIT>SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID GROUP BY RECORDalias0.SWIMMER_ID ORDER BY COUNT( RECORDalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show budget type codes and the number of documents in each budget type .<CODESPLIT>SELECT COUNT( * ) , DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the budget type code with most number of documents .<CODESPLIT>SELECT DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY BUDGET_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of documents which don't have expense budgets ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all documents in type var0 without expense budgets .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = "var0" EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the characters and duration of actors ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents do not have any expense ?<CODESPLIT>SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID NOT IN ( SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the dates for the documents with both ' var0 ' type and ' var1 ' type expenses ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = "var0" INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_DATE FROM DOCUMENTS AS DOCUMENTSalias1 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias1 ON DOCUMENTSalias1.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias1.DOCUMENT_ID WHERE DOCUMENTS_WITH_EXPENSESalias1.BUDGET_TYPE_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the account details with the largest value or with value having char ' var0 ' in it ?<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < ( SELECT MIN( WINEalias1.YEAR ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of scientists .<CODESPLIT>SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total hours of all projects .<CODESPLIT>SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.TRANSACTION_ID = LOTSalias0.LOT_ID JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID WHERE TRANSACTIONSalias0.SHARE_COUNT > var0 AND TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of matches happened in each year .<CODESPLIT>SELECT COUNT( DISTINCT SCIENTIST ) FROM ASSIGNEDTO ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct projects .<CODESPLIT>SELECT COUNT( DISTINCT PROJECTSalias0.NAME ) FROM PROJECTS AS PROJECTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the building full names that contain the word " var0 " ?<CODESPLIT>SELECT AVG( PROJECTSalias0.HOURS ) FROM PROJECTS AS PROJECTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of project that continues for the longest time .<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 ORDER BY PROJECTSalias0.HOURS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all projects that are operated longer than the average working hours of all projects .<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS > ( SELECT AVG( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and hours of project that has the most number of scientists .<CODESPLIT>SELECT PROJECTSalias0.HOURS , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT GROUP BY DERIVED_TABLEalias0.PROJECT ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the project for which a scientist whose name contains ' var0 ' is assigned to .<CODESPLIT>SELECT PROJECTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total hours of the projects that scientists named var0 or var1 are assigned to .<CODESPLIT>SELECT SUM( PROJECTSalias0.HOURS ) FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME = "var0" OR SCIENTISTSalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names for tracks without a race in class ' var0 ' .<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the scientist who worked on both a project named ' var0 ' and a project named ' var1 ' .<CODESPLIT>SELECT SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.NAME = "var0" INTERSECT SELECT SCIENTISTSalias1.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias1 JOIN PROJECTS AS PROJECTSalias1 ON PROJECTSalias1.CODE = DERIVED_TABLEalias1.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias1 ON SCIENTISTSalias1.SSN = DERIVED_TABLEalias1.SCIENTIST WHERE PROJECTSalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of gymnasts whose hometown is not " var0 " ?<CODESPLIT>SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 ORDER BY SCIENTISTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of scientists involved for each project name .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MIN( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of scientists involved for the projects that require more than var0 hours .<CODESPLIT>SELECT COUNT( * ) , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT WHERE PROJECTSalias0.HOURS > var0 GROUP BY PROJECTSalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of projects which each scientist is working on and scientist's name .<CODESPLIT>SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.COUNTY = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the SSN and name of scientists who are assigned to the project with the longest hours .<CODESPLIT>SELECT SCIENTISTSalias0.NAME , SCIENTISTSalias0.SSN FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of scientists who are assigned to some project .<CODESPLIT>SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM GROUP BY TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME ORDER BY COUNT( TEACHERSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the project names which are not assigned yet .<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.CODE NOT IN ( SELECT PROJECT FROM ASSIGNEDTO ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of scientists who are not assigned to any project .<CODESPLIT>SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 WHERE SCIENTISTSalias0.SSN NOT IN ( SELECT SCIENTIST FROM ASSIGNEDTO ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of scientists who are not assigned to any project .<CODESPLIT>SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_DESCRIPTION , DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME , DOCUMENTSalias0.DOCUMENT_DATE FROM REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON DOCUMENTSalias0.DOCUMENT_TYPE_CODE = DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of scientists who are not working on the project with the highest hours .<CODESPLIT>SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 EXCEPT SELECT SCIENTISTSalias1.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias1 ON SCIENTISTSalias1.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the scientists ' names , their projects ' names , and the hours worked by that scientist on each project , in alphabetical order of project name , and then scientist name .<CODESPLIT>SELECT PROJECTSalias0.HOURS , PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT ORDER BY PROJECTSalias0.NAME , SCIENTISTSalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it .<CODESPLIT>SELECT PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MIN( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the highest rated wine ?<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which winery is the wine that has the highest score from ?<CODESPLIT>SELECT WINEalias0.WINERY FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which district has both stores with less than var0 products and stores with more than var1 products ?<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the grapes and appelations of all wines .<CODESPLIT>SELECT WINEalias0.APPELATION , WINEalias0.GRAPE FROM WINE AS WINEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and scores of all wines .<CODESPLIT>SELECT WINEalias0.NAME , WINEalias0.SCORE FROM WINE AS WINEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the area and county of all appelations .<CODESPLIT>SELECT APPELLATIONSalias0.AREA , APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of wins the team var0 got in the postseasons each year in history ?<CODESPLIT>SELECT WINEalias0.PRICE FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct wines that have scores higher than var0 .<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.SCORE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct wines that are made of red color grape .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MIN( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of all distinct wines that have appellations in var0 area .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.AREA = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many wines are produced at var0 winery ?<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many appelations are in var0 Country ?<CODESPLIT>SELECT COUNT( * ) FROM APPELLATIONS AS APPELLATIONSalias0 WHERE APPELLATIONSalias0.COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the average prices of wines that are produced by appelations in var0 County .<CODESPLIT>SELECT AVG( WINEalias0.PRICE ) FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and scores of wines that are made of white color grapes ?<CODESPLIT>SELECT WINEalias0.NAME , WINEalias0.SCORE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the maximum price of wins from the appelations in var0 area and produced before the year of var1 .<CODESPLIT>SELECT MAX( WINEalias0.PRICE ) FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.AREA = "var0" AND WINEalias0.YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the the grape whose white color grapes are used to produce wines with scores higher than var1 .<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 AND USERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the wines that have prices higher than var1 and made of var0 color grapes ?<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS > ( SELECT AVG( RATINGalias1.STARS ) FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE MOVIEalias1.DIRECTOR = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the wines that have prices lower than var1 and have appelations in var0 county ?<CODESPLIT>SELECT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = "var0" AND WINEalias0.PRICE < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the numbers of wines for different grapes ?<CODESPLIT>SELECT COUNT( WINEalias0.* ) , WINEalias0.GRAPE FROM WINE AS WINEalias0 GROUP BY WINEalias0.GRAPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average prices of wines for different years ?<CODESPLIT>SELECT CHURCHalias0.NAME , CHURCHalias0.OPEN_DATE , CHURCHalias0.ORGANIZED_BY FROM CHURCH AS CHURCHalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct names of all wines that have prices higher than some wines from var0 winery .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MIN( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct wines in alphabetical order .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct wines ordered by price .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.PRICE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students for each department .<CODESPLIT>SELECT APPELLATIONSalias0.AREA FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION GROUP BY WINEalias0.APPELATION HAVING WINEalias0.YEAR < var0 ORDER BY COUNT( WINEalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the denomination shared by more than one school .<CODESPLIT>SELECT GRAPESalias0.COLOR FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE GROUP BY WINEalias0.GRAPE ORDER BY AVG( WINEalias0.PRICE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct names of wines produced before the year of var0 or after the year of var1 .<CODESPLIT>SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < var0 OR WINEalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct winery of wines having price between var0 and var1 .<CODESPLIT>SELECT DISTINCT WINEalias0.WINERY FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average prices and cases of wines produced in the year of var0 and made of var1 grape ?<CODESPLIT>SELECT AVG( WINEalias0.CASES ) , AVG( WINEalias0.PRICE ) FROM WINE AS WINEalias0 WHERE WINEalias0.GRAPE = "var1" AND WINEalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum price and score of wines produced by St . Helena appelation ?<CODESPLIT>SELECT AVG( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of department where has the smallest number of professors ?<CODESPLIT>SELECT MAX( WINEalias0.PRICE ) , MAX( WINEalias0.SCORE ) , WINEalias0.YEAR FROM WINE AS WINEalias0 GROUP BY WINEalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the parties that have both representatives in var0 state and representatives in var1 state .<CODESPLIT>SELECT AVG( WINEalias0.PRICE ) , AVG( WINEalias0.SCORE ) , WINEalias0.APPELATION FROM WINE AS WINEalias0 GROUP BY WINEalias0.APPELATION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the wineries that have at least four wines .<CODESPLIT>SELECT WINEalias0.WINERY FROM WINE AS WINEalias0 GROUP BY WINEalias0.WINERY HAVING COUNT( WINEalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the country of all appelations who have at most three wines .<CODESPLIT>SELECT APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION GROUP BY WINEalias0.APPELATION HAVING COUNT( WINEalias0.* ) <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of wines whose production year are before the year of all wines by var0 winery ?<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < ( SELECT MIN( WINEalias1.YEAR ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of wines that are more expensive then all wines made in the year var0 ?<CODESPLIT>SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MAX( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.YEAR = var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the top var1 wineries with the greatest number of wines made of white color grapes .<CODESPLIT>SELECT WINEalias0.WINERY FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = "var0" GROUP BY WINEalias0.WINERY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the grape , winery and year of the wines whose price is bigger than var0 ordered by year .<CODESPLIT>SELECT WINEalias0.GRAPE , WINEalias0.WINERY , WINEalias0.YEAR FROM WINE AS WINEalias0 WHERE PRICE > var0 ORDER BY WINEalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the grape , appelation and name of wines whose score is higher than var0 ordered by Name .<CODESPLIT>SELECT WINEalias0.APPELATION , WINEalias0.GRAPE , WINEalias0.NAME FROM WINE AS WINEalias0 WHERE SCORE > var0 ORDER BY WINEalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the appelations that produce wines after the year of var0 but not in var1 area .<CODESPLIT>SELECT WINEalias0.APPELATION FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR > var0 EXCEPT SELECT APPELLATIONSalias0.APPELATION FROM APPELLATIONS AS APPELLATIONSalias0 WHERE APPELLATIONSalias0.AREA = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average price of wines that are not produced from var0 county .<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working .<CODESPLIT>SELECT APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE WINEalias0.SCORE > var0 GROUP BY APPELLATIONSalias0.COUNTY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many train stations are there ?<CODESPLIT>SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.DEPARTMENT_ID FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 GROUP BY DEPARTMENT_ID ORDER BY COUNT( STAFF_DEPARTMENT_ASSIGNMENTSalias0.* ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , location , and number of platforms for all stations .<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.DRIBBLING = ( SELECT MAX( PLAYER_ATTRIBUTESalias1.OVERALL_RATING ) FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find distinct cities of addresses of people ?<CODESPLIT>SELECT DISTINCT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the cities which have exactly two airports .<CODESPLIT>SELECT STATIONalias0.NAME , STATIONalias0.TOTAL_PASSENGERS FROM STATION AS STATIONalias0 WHERE STATIONalias0.LOCATION != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and main services for train stations that have the top three total number of passengers .<CODESPLIT>SELECT STATIONalias0.MAIN_SERVICES , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY STATIONalias0.TOTAL_PASSENGERS DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average and maximum number of total passengers for train stations in var0 or var1 ?<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of citations of " var0 " in each year .<CODESPLIT>SELECT STATIONalias0.LOCATION , SUM( STATIONalias0.NUMBER_OF_PLATFORMS ) , SUM( STATIONalias0.TOTAL_PASSENGERS ) FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.LOCATION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all locations that have train stations with at least var0 platforms and train stations with more than var1 total passengers .<CODESPLIT>SELECT DISTINCT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 WHERE STATIONalias0.NUMBER_OF_PLATFORMS >= var0 AND STATIONalias0.TOTAL_PASSENGERS > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the age of all music artists .<CODESPLIT>SELECT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 EXCEPT SELECT STATIONalias1.LOCATION FROM STATION AS STATIONalias1 WHERE STATIONalias1.NUMBER_OF_PLATFORMS >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location with most number of train stations .<CODESPLIT>SELECT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , time , and service for all trains .<CODESPLIT>SELECT TRAINalias0.NAME , TRAINalias0.SERVICE , TRAINalias0.TIME FROM TRAIN AS TRAINalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of trains<CODESPLIT>SELECT COUNT( * ) FROM TRAIN AS TRAINalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the first student to register ? List the first name , middle name and last name .<CODESPLIT>SELECT TRAINalias0.NAME , TRAINalias0.SERVICE FROM TRAIN AS TRAINalias0 ORDER BY TRAINalias0.TIME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the count and id of each product in all the orders .<CODESPLIT>SELECT COUNT( TRAIN_STATIONalias0.* ) , STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID GROUP BY TRAIN_STATIONalias0.STATION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show the train name and station name for each train .<CODESPLIT>SELECT STATIONalias0.NAME , TRAINalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number and averaged salary of all instructors who are in the department with the highest budget .<CODESPLIT>SELECT TRAINalias0.NAME , TRAINalias0.TIME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID WHERE STATIONalias0.LOCATION = "var0" ORDER BY TRAINalias0.TIME DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the station name with greatest number of trains .<CODESPLIT>SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE TRYOUTalias0.DECISION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the station name with at least two trains .<CODESPLIT>SELECT STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID GROUP BY TRAIN_STATIONalias0.STATION_ID HAVING COUNT( TRAIN_STATIONalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all locations with only var0 station .<CODESPLIT>SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many capitals does var0 have<CODESPLIT>SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE STATIONalias0.STATION_ID NOT IN ( SELECT TRAIN_STATIONalias0.STATION_ID FROM TRAIN_STATION AS TRAIN_STATIONalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the description of transaction type with code " var0 " .<CODESPLIT>SELECT STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID WHERE TRAINalias0.NAME = "var0" INTERSECT SELECT STATIONalias1.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias1 JOIN STATION AS STATIONalias1 ON TRAIN_STATIONalias1.STATION_ID = STATIONalias1.STATION_ID JOIN TRAIN AS TRAINalias1 ON TRAINalias1.TRAIN_ID = TRAIN_STATIONalias1.TRAIN_ID WHERE TRAINalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the trains that do not pass any station located in var0 .<CODESPLIT>SELECT TRAINalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID WHERE TRAIN_STATIONalias0.STATION_ID NOT IN ( SELECT STATIONalias0.STATION_ID FROM TRAIN_STATION AS TRAIN_STATIONalias1 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias1.STATION_ID = STATIONalias0.STATION_ID WHERE STATIONalias0.LOCATION = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and locations of all stations ordered by their yearly entry exit and interchange amounts .<CODESPLIT>SELECT STATIONalias0.LOCATION , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY STATIONalias0.ANNUAL_ENTRY_EXIT , STATIONalias0.ANNUAL_INTERCHANGES ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all vehicle id<CODESPLIT>SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many vehicle in total ?<CODESPLIT>SELECT COUNT( * ) FROM VEHICLES AS VEHICLESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the detail of vehicle with id var0 .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the sale details and dates of transactions with amount smaller than var0 ?<CODESPLIT>SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME , STAFFalias0.MIDDLE_NAME FROM STAFF AS STAFFalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the birthday of the staff member with first name as var0 and last name as var1 ?<CODESPLIT>SELECT STAFFalias0.DATE_OF_BIRTH FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the staff member with first name as var0 and last name as var1 join the company ?<CODESPLIT>SELECT STAFFalias0.DATE_JOINED_STAFF FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the staff member with first name as var0 and last name as var1 leave the company ?<CODESPLIT>SELECT STAFFalias0.DATE_LEFT_STAFF FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers written by " H . V . Jagadish " and " var1 " before var2 .<CODESPLIT>SELECT COUNT( * ) FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the nickname of staff with first name as var0 and last name as var1 ?<CODESPLIT>SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many staff in total ?<CODESPLIT>SELECT COUNT( * ) FROM STAFF AS STAFFalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city does staff with first name as var0 and last name as var1 live ?<CODESPLIT>SELECT DISTINCT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MIN( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country and state does staff with first name as var0 and last name as var1 lived ?<CODESPLIT>SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is minimum age for different job title ?<CODESPLIT>SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the zip code of staff with first name as var0 and last name as var1 lived ?<CODESPLIT>SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.GRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = "var1" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all advisors and corresponding number of students .<CODESPLIT>SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city lives most of staffs ? List the city name and number of staffs .<CODESPLIT>SELECT ADDRESSESalias0.CITY , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the states which have between var0 to var1 staffs living there .<CODESPLIT>SELECT BUILDINGalias0.FLOORS , BUILDINGalias0.NAME , BUILDINGalias0.STREET_ADDRESS FROM BUILDING AS BUILDINGalias0 ORDER BY BUILDINGalias0.FLOORS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first name and last name of all customers .<CODESPLIT>SELECT MAX( DISTINCT HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List email address and birthday of customer whose first name as var0 .<CODESPLIT>SELECT * FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List phone number and email address of customer with more than var0 outstanding balance .<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of songs that are available in var0 format and have resolution lower than var1 .<CODESPLIT>SELECT CUSTOMERSalias0.CELL_MOBILE_PHONE_NUMBER , CUSTOMERSalias0.CUSTOMER_STATUS_CODE , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" OR CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the publishers that have publications with price higher than var0 and publications with price lower than var1 .<CODESPLIT>SELECT CUSTOMERSalias0.DATE_OF_BIRTH FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_STATUS_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kids stay in the rooms reserved by var0 var1 ?<CODESPLIT>SELECT CUSTOMERSalias0.DATE_BECAME_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all customer status codes and the number of customers having each status code .<CODESPLIT>SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which customer status code has least number of customers ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_STATUS_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMER_STATUS_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes from the var1 to var0 .<CODESPLIT>SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" AND LESSONSalias0.LESSON_STATUS_CODE = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is maximum , minimum and average amount of outstanding of customer ?<CODESPLIT>SELECT COUNT( * ) , FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FILESalias0.FORMATS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the user who tweeted more than once , and number of tweets tweeted by them .<CODESPLIT>SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.AMOUNT_OUTSTANDING BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List first name and last name of customers lived in city var0 .<CODESPLIT>SELECT BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_END , BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_START FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = BEHAVIOR_INCIDENTalias0.STUDENT_ID WHERE STUDENTSalias0.LAST_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city does has most number of customers ?<CODESPLIT>SELECT ADDRESSESalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is zip code of customer with first name as var0 and last name as var1 ?<CODESPLIT>SELECT ADDRESSESalias0.ZIP_POSTCODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the invoice numbers which are created before var0 or after var1 .<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names , results and bulgarian commanders of the battles with no ships lost in the ' var0 ' .<CODESPLIT>SELECT SUM( CUSTOMER_PAYMENTSalias0.AMOUNT_PAYMENT ) FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" AND CUSTOMERSalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are some var1 papers that var0 did not write ?<CODESPLIT>SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT CUSTOMER_PAYMENTSalias0.CUSTOMER_ID FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many schools do not participate in the basketball match ?<CODESPLIT>SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMER_PAYMENTSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all payment methods and number of payments using each payment methods .<CODESPLIT>SELECT COUNT( * ) , CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 GROUP BY CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lessons were in cancelled state ?<CODESPLIT>SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 WHERE LESSONSalias0.LESSON_STATUS_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who has written the most var0 papers ?<CODESPLIT>SELECT LESSONSalias0.LESSON_ID FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" AND STAFFalias0.NICKNAME LIKE "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How mvar0ny lessons tvar0ught by stvar0ff whose first nvar0me hvar0s letter ' var0 ' in it ?<CODESPLIT>SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How long is the total lesson time taught by staff with first name as var0 and last name as var1 ?<CODESPLIT>SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average lesson price taught by staff with first name as var0 and last name as var1 ?<CODESPLIT>SELECT AVG( LESSONSalias0.PRICE ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lesson does customer with first name var0 took ?<CODESPLIT>SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which last names are both used by customers and by staff ?<CODESPLIT>SELECT CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 INTERSECT SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name of the staff who did not give any lesson ?<CODESPLIT>SELECT STAFFalias0.FIRST_NAME FROM STAFF AS STAFFalias0 EXCEPT SELECT STAFFalias1.FIRST_NAME FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = LESSONSalias0.STAFF_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and detail of the vehicle used in lessons for most of the times ?<CODESPLIT>SELECT VEHICLESalias0.VEHICLE_DETAILS , VEHICLESalias0.VEHICLE_ID FROM VEHICLES AS VEHICLESalias0 JOIN LESSONS AS LESSONSalias0 ON VEHICLESalias0.VEHICLE_ID = LESSONSalias0.VEHICLE_ID GROUP BY VEHICLESalias0.VEHICLE_ID ORDER BY COUNT( LESSONSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many faculty do we have ?<CODESPLIT>SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What ranks do we have for faculty ?<CODESPLIT>SELECT DISTINCT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct buildings that have faculty rooms .<CODESPLIT>SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) , MANUFACTURERSalias0.HEADQUARTER FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.HEADQUARTER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of different programs that are broadcast during night time .<CODESPLIT>SELECT FACULTYalias0.RANK , FNAME , LNAME FROM FACULTY AS FACULTYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first name , last name , and phone number for all female faculty members .<CODESPLIT>SELECT FACULTYalias0.PHONE , FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.SEX = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all the male faculty .<CODESPLIT>SELECT COUNT( ELECTIONalias0.* ) , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many female var1s do we have ?<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average price of the products for each category ?<CODESPLIT>SELECT FACULTYalias0.BUILDING , FACULTYalias0.PHONE , FACULTYalias0.ROOM FROM FACULTY AS FACULTYalias0 WHERE FNAME = "var0" AND LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var0s are in building var1 ?<CODESPLIT>SELECT DISTINCT MILLalias0.NAME FROM MILL AS MILLalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID WHERE BRIDGEalias0.LENGTH_METERS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first name and last name for all the instructors .<CODESPLIT>SELECT COURSEalias0.COURSE , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the buildings along with the number of faculty members the buildings have .<CODESPLIT>SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.LAUNCH ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which building has most faculty members ?<CODESPLIT>SELECT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 GROUP BY BUILDING ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the buildings that have at least var1 professors .<CODESPLIT>SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each faculty rank , show the number of faculty members who have it .<CODESPLIT>SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.LOAN_TYPE = "var0" INTERSECT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias1 ON LOANalias1.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias1.LOAN_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the ranks and the number of male and female faculty for each rank .<CODESPLIT>SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.RANK , FACULTYalias0.SEX ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which rank has the smallest number of faculty members ?<CODESPLIT>SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( FACULTYalias0.* ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many architects haven't built a mill before year var0 ?<CODESPLIT>SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 WHERE RANK = "var0" GROUP BY FACULTYalias0.SEX ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show order ids and the total quantity in each order .<CODESPLIT>SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE STUDENTalias0.FNAME = "var0" AND STUDENTalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show origin and destination for flights with price higher than var0 .<CODESPLIT>SELECT STUDENTalias0.STUID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.RANK = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show first name and last name for all the students advised by var0 var1 .<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.FNAME = "var0" AND FACULTYalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the faculty id of each faculty member , along with the number of students he or she advises .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the faculty ranks and the number of students advised by each rank .<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the first and last name of the faculty who has the most students ?<CODESPLIT>SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids for all the faculty members who have at least var0 students .<CODESPLIT>SELECT COUNT( VOTESalias0.* ) FROM VOTES AS VOTESalias0 WHERE VOTESalias0.STATE = "var0" OR VOTESalias0.STATE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for the faculty members who don't advise any student .<CODESPLIT>SELECT PEOPLEalias0.HEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.TOTAL < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average and minimum price of the rooms in different decor .<CODESPLIT>SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the phone number of the customer who has filed the most recent complaint ?<CODESPLIT>SELECT COUNT( * ) FROM ACTIVITY AS ACTIVITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many faculty members participate in an activity ?<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of the faculty who don't participate in any activity .<CODESPLIT>SELECT FACID FROM FACULTY AS FACULTYalias0 EXCEPT SELECT FACID FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of all the faculty members who participate in an activity and advise a student .<CODESPLIT>SELECT FACID FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 INTERSECT SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many activities does var0 var1 participate in ?<CODESPLIT>SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID WHERE FACULTYalias0.FNAME = "var0" AND FACULTYalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of all the activities var0 var1 participates in .<CODESPLIT>SELECT DISTINCT CNAME FROM TRYOUT AS TRYOUTalias0 ORDER BY CNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the first and last name of all the faculty members who participated in some activity , together with the number of activities they participated in .<CODESPLIT>SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.FACID , FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID GROUP BY FACULTYalias0.FACID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the activity names and the number of faculty involved in each activity .<CODESPLIT>SELECT ACTIVITYalias0.ACTIVITY_NAME , COUNT( * ) FROM ACTIVITY AS ACTIVITYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of all employees who don't destroy any document .<CODESPLIT>SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the activity that has the most faculty members involved in ?<CODESPLIT>SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of the students who don't participate in any activity .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the first var0 customers .<CODESPLIT>SELECT STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 INTERSECT SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first and last name of the student participating in the most activities ?<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN PARTICIPATES_IN AS PARTICIPATES_INalias0 ON STUDENTalias0.STUID = PARTICIPATES_INalias0.STUID GROUP BY STUDENTalias0.STUID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the description of all the colors .<CODESPLIT>SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 JOIN PARTICIPATES_IN AS PARTICIPATES_INalias0 ON PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the writers who have written more than one book .<CODESPLIT>SELECT DISTINCT FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = "var0" OR ACTIVITYalias0.ACTIVITY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names of all counties sorted by population in ascending order .<CODESPLIT>SELECT LNAME FROM FACULTY AS FACULTYalias0 WHERE ACTIVITYalias0.ACTIVITY_NAME = "var2" OR FACULTYalias0.RANK = "var0" EXCEPT SELECT DISTINCT FACULTYalias1.LNAME FROM FACULTY AS FACULTYalias1 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias1.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of the faculty members who participate in var0 and var1 .<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of the students who participate in var0 and var1 .<CODESPLIT>SELECT PARTICIPATES_INalias0.STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 JOIN ACTIVITY AS ACTIVITYalias0 ON ACTIVITYalias0.ACTID = ACTIVITYalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = "var0" INTERSECT SELECT PARTICIPATES_INalias1.STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias1 JOIN ACTIVITY AS ACTIVITYalias1 ON ACTIVITYalias1.ACTID = ACTIVITYalias1.ACTID WHERE ACTIVITYalias1.ACTIVITY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the airport in the city of var0 .<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , city , country , and altitude (or elevation) of the airports in the city of var0 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airlines are there ?<CODESPLIT>SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airlines does var0 has ?<CODESPLIT>SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the zip codes in which the max dew point have never reached var0 .<CODESPLIT>SELECT MAX( AIRPORTSalias0.ELEVATION ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the airports located in var0 or var1 .<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = "var0" OR AIRPORTSalias0.COUNTRY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the payment method that is used most frequently .<CODESPLIT>SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of airports whose altitude is between var0 and var1 .<CODESPLIT>SELECT COUNT( DISTINCT DEPARTMENTalias0.SCHOOL_CODE ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country is the airport that has the highest altitude located in ?<CODESPLIT>SELECT AIRPORTSalias0.COUNTRY FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of airports whose name contain the word ' var0 ' .<CODESPLIT>SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did the web accelerator ' var0 ' and browser ' var1 ' become compatible ?<CODESPLIT>SELECT COUNT( DISTINCT AIRPORTSalias0.CITY ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the var0 who visited both a museum opened before var1 and a museum opened after var3 ?<CODESPLIT>SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes whose destination airports are in var0 .<CODESPLIT>SELECT COUNT( * ) FROM FOLLOWS AS FOLLOWSalias0 GROUP BY F1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , city , and country of the airport that has the lowest altitude .<CODESPLIT>SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , city , and country of the airport that has the highest latitude .<CODESPLIT>SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and city of the airport which is the destination of the most number of routes .<CODESPLIT>SELECT AVG( SHOWalias0.ATTENDANCE ) FROM SHOW AS SHOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the top var0 airlines that operate the most number of routes .<CODESPLIT>SELECT AIRLINESalias0.NAME , ROUTESalias0.ALID FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY ROUTESalias0.ALID ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of faculty lines in campus " var1 " in var0 ?<CODESPLIT>SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.NAME , ROUTESalias0.SRC_APID FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY ROUTESalias0.SRC_APID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of different airports which are the destinations of the var0 .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries has the most number of airlines ?<CODESPLIT>SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries has the most number of airlines whose active status is ' var0 ' ?<CODESPLIT>SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE ACTIVE = "var0" GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all countries and their number of airlines in the descending order of number of airlines .<CODESPLIT>SELECT AVG( VISITalias0.NUM_OF_TICKET ) , MAX( VISITalias0.NUM_OF_TICKET ) FROM VISIT AS VISITalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airports are there per country ? Order the countries by decreasing number of airports .<CODESPLIT>SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = "var0" GROUP BY ROOMSalias0.DECOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of projects which each scientist is working on and scientist's name .<CODESPLIT>SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 WHERE COUNTRY = "var0" GROUP BY CITY ORDER BY COUNT( * ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance .<CODESPLIT>SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 WHERE COUNTRY = "var0" GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cities are there that have more than var0 airports ?<CODESPLIT>SELECT ENTREPRENEURalias0.COMPANY , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the cities which have more than one airport and number of airports .<CODESPLIT>SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the cities which have more than var0 airports sorted by the number of airports .<CODESPLIT>SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY CITY HAVING COUNT( * ) > var0 ORDER BY COUNT( * ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes for each source airport and the airport name .<CODESPLIT>SELECT AIRPORTSalias0.NAME , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY AIRPORTSalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes and airport name for each source airport , order the results by decreasing number of routes .<CODESPLIT>SELECT AIRPORTSalias0.NAME , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the characteristic names of product " var0 " ?<CODESPLIT>SELECT AIRPORTSalias0.COUNTRY , AVG( AIRPORTSalias0.ELEVATION ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.COUNTRY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the cities which have exactly two airports .<CODESPLIT>SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each country and airline name , how many routes are there ?<CODESPLIT>SELECT AIRLINESalias0.COUNTRY , AIRLINESalias0.NAME , COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY AIRLINESalias0.COUNTRY , AIRLINESalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the instructors in the Comp . Sci . department who earn more than var1 ?<CODESPLIT>SELECT COUNT( * ) FROM ROUTES AS ROUTESalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the characteristic name used by most number of the products ?<CODESPLIT>SELECT COUNT( AIRLINESalias0.* ) FROM ROUTES AS ROUTESalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID JOIN AIRLINES AS AIRLINESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = "var1" AND AIRPORTSalias0.COUNTRY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes that have destination var0 .<CODESPLIT>SELECT MAX( TRIPalias0.DURATION ) , SUM( TRIPalias0.DURATION ) FROM TRIP AS TRIPalias0 WHERE TRIPalias0.BIKE_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes from the var1 to var0 .<CODESPLIT>SELECT COUNT( * ) FROM ROUTES AS ROUTESalias0 WHERE DST_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = "var0" ) AND SRC_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias1 WHERE AIRPORTSalias1.COUNTRY = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of routes whose source and destination airports are in the var0 .<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = "var0" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names , results and bulgarian commanders of the battles with no ships lost in the ' var0 ' .<CODESPLIT>SELECT AIRLINESalias0.NAME FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY AIRLINESalias0.NAME ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of actors that have appeared in musical with name " var0 " .<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = "var0" GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the busiest destination airport that runs most number of routes in var0 .<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = "var0" GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the most recent order ?<CODESPLIT>SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the order id and customer id of the oldest order ?<CODESPLIT>SELECT ORDERSalias0.CUSTOMER_ID , ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the order whose shipment tracking number is " var0 " .<CODESPLIT>SELECT COUNT( COMPLAINTSalias0.* ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of schools with the top var0 largest size ?<CODESPLIT>SELECT ORDER_ITEMSalias0.ORDER_ITEM_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 WHERE ORDER_ITEMSalias0.PRODUCT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of all the distinct customers who have orders with status " var0 " .<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which model has the most version(make) of cars ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the customer who has the most orders ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the customer id of the customer who has the most orders ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of id and status of orders which belong to the customer named " var0 " .<CODESPLIT>SELECT ORDERSalias0.ORDER_ID , ORDERSalias0.ORDER_STATUS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the dates of orders which belong to the customer named " var0 " .<CODESPLIT>SELECT ORDERSalias0.DATE_ORDER_PLACED FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the names of customers who have placed orders between var0 and var1 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.DATE_ORDER_PLACED <= "var1" AND ORDERSalias0.DATE_ORDER_PLACED >= "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me a list of distinct product ids from orders placed between var0 and var1 ?<CODESPLIT>SELECT DISTINCT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE ORDERSalias0.DATE_ORDER_PLACED <= "var1" AND ORDERSalias0.DATE_ORDER_PLACED >= "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries speak both var0 and var1 ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = "var0" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the customers who have order status both " var0 " and " var1 " .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = "var0" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum point for climbers whose country is var0 ?<CODESPLIT>SELECT ORDERSalias0.DATE_ORDER_PLACED FROM ORDERS AS ORDERSalias0 JOIN SHIPMENTS AS SHIPMENTSalias0 ON SHIPMENTSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE SHIPMENTSalias0.SHIPMENT_TRACKING_NUMBER = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the placement date of the order whose invoice number is var0 ?<CODESPLIT>SELECT ORDERSalias0.DATE_ORDER_PLACED FROM ORDERS AS ORDERSalias0 JOIN SHIPMENTS AS SHIPMENTSalias0 ON SHIPMENTSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE SHIPMENTSalias0.INVOICE_NUMBER = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the count and id of each product in all the orders .<CODESPLIT>SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = "var0" AND AUTHORSalias0.LNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location name and code with the least documents .<CODESPLIT>SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the record companies shared by orchestras founded before var0 and after var0 .<CODESPLIT>SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_DATE > "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id of the order which is shipped most recently .<CODESPLIT>SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_DATE = ( SELECT MAX( SHIPMENTSalias1.SHIPMENT_DATE ) FROM SHIPMENTS AS SHIPMENTSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , city , and country of the airport that has the lowest altitude .<CODESPLIT>SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the ids of all distinct orders ordered by placed date .<CODESPLIT>SELECT COUNT( * ) FROM PHONE AS PHONEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all game ids and the number of hours played .<CODESPLIT>SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID GROUP BY ORDERSalias0.ORDER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the invoice numbers which are created before var0 or after var1 .<CODESPLIT>SELECT COUNT( * ) FROM USERS AS USERSalias0 WHERE USERSalias0.USER_LOGIN = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the date of perpetrators in descending order of the number of people killed .<CODESPLIT>SELECT DISTINCT INVOICESalias0.INVOICE_DETAILS FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.INVOICE_DATE < "var0" OR INVOICESalias0.INVOICE_DATE > "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each customer who has at least two orders , find the customer name and number of orders made .<CODESPLIT>SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_NAME FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the customers who have at most two orders .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the customers who have once bought product " var0 " .<CODESPLIT>SELECT EMPLOYEESalias0.ADDRESS FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = "var0" AND EMPLOYEESalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the company name and the main industry for all companies whose headquarters are not from var0 .<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID AND ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE ORDER_ITEMSalias0.ORDER_ITEM_STATUS = "var0" AND PRODUCTSalias0.PRODUCT_NAME = "var1" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many architects are var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ARCHITECT AS ARCHITECTalias0 WHERE ARCHITECTalias0.GENDER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name , nationality and id of all var0 architects ordered by their names lexicographically .<CODESPLIT>SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME , ARCHITECTalias0.NATIONALITY FROM ARCHITECT AS ARCHITECTalias0 WHERE GENDER = "var0" ORDER BY ARCHITECTalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum length in meters for the bridges and what are the architects ' names ?<CODESPLIT>SELECT ARCHITECTalias0.NAME , MAX( BRIDGEalias0.LENGTH_METERS ) FROM BRIDGE AS BRIDGEalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which distinctive models are produced by maker with the full name var0 or weighing more than var1 ?<CODESPLIT>SELECT AVG( BRIDGEalias0.LENGTH_FEET ) FROM BRIDGE AS BRIDGEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and year of construction for the mills of ' var0 ' type ?<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of the party that has at least two records .<CODESPLIT>SELECT DISTINCT ARCHITECTalias0.NAME , ARCHITECTalias0.NATIONALITY FROM ARCHITECT AS ARCHITECTalias0 JOIN MILL AS MILLalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the mills which are not located in ' var0 ' ?<CODESPLIT>SELECT MILLalias0.NAME FROM MILL AS MILLalias0 WHERE MILLalias0.LOCATION != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct types of mills that are built by var0 or var1 architects ?<CODESPLIT>SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and names of the architects who built at least var0 bridges ?<CODESPLIT>SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME FROM ARCHITECT AS ARCHITECTalias0 JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id , name and nationality of the architect who built most mills ?<CODESPLIT>SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME , ARCHITECTalias0.NATIONALITY FROM ARCHITECT AS ARCHITECTalias0 JOIN MILL AS MILLalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID ORDER BY COUNT( MILLalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids , names and genders of the architects who built two bridges or one mill ?<CODESPLIT>SELECT COUNT( DISTINCT TV_CHANNELalias0.CONTENT ) , COUNT( DISTINCT TV_CHANNELalias0.SERIES_NAME ) FROM TV_CHANNEL AS TV_CHANNELalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location of the bridge named ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT BRIDGEalias0.LOCATION FROM BRIDGE AS BRIDGEalias0 WHERE BRIDGEalias0.NAME = "var0" OR BRIDGEalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which of the mill names contains the french word ' var0 ' ?<CODESPLIT>SELECT DISTINCT STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct name of the mills built by the architects who have also built a bridge longer than var0 meters ?<CODESPLIT>SELECT SONGalias0.RELEASEDATE , SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RELEASEDATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most common mill type , and how many are there ?<CODESPLIT>SELECT COUNT( * ) , COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many architects haven't built a mill before year var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ARCHITECT AS ARCHITECTalias0 WHERE ARCHITECTalias0.ID NOT IN ( SELECT MILLalias0.ARCHITECT_ID FROM MILL AS MILLalias0 WHERE MILLalias0.BUILT_YEAR < var0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show the name of all bridges that was designed by american archtect , and sort the result by the bridge feet length .<CODESPLIT>SELECT BRIDGEalias0.NAME FROM BRIDGE AS BRIDGEalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID WHERE ARCHITECTalias0.NATIONALITY = "var0" ORDER BY BRIDGEalias0.LENGTH_FEET ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many book clubs are there ?<CODESPLIT>SELECT COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>show the titles , and authors or editors for all books made after the year var0 .<CODESPLIT>SELECT BOOK_CLUBalias0.AUTHOR_OR_EDITOR , BOOK_CLUBalias0.BOOK_TITLE FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE BOOK_CLUBalias0.YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of the dogs of the rarest breed and the treatment dates of them .<CODESPLIT>SELECT DISTINCT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the years , book titles , and publishers for all books , in descending order by year .<CODESPLIT>SELECT BOOK_CLUBalias0.BOOK_TITLE , BOOK_CLUBalias0.PUBLISHER , BOOK_CLUBalias0.YEAR FROM BOOK_CLUB AS BOOK_CLUBalias0 ORDER BY BOOK_CLUBalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all publishers and the number of books for each publisher .<CODESPLIT>SELECT BOOK_CLUBalias0.PUBLISHER , COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY BOOK_CLUBalias0.PUBLISHER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total account balance of each customer from var0 or var1 .<CODESPLIT>SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which season and which stadium did any player have an injury of ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT BOOK_CLUBalias0.CATEGORY , COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY BOOK_CLUBalias0.CATEGORY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List categories that have at least two books after year var0 .<CODESPLIT>SELECT BOOK_CLUBalias0.CATEGORY FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE YEAR > var0 GROUP BY BOOK_CLUBalias0.CATEGORY HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show publishers with a book published in var0 and a book in var1 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all publishers which do not have a book in var0 .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all movie titles , years , and directors , ordered by budget .<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 ORDER BY MOVIEalias0.BUDGET_MILLION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movie directors are there ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.DIRECTOR ) FROM MOVIE AS MOVIEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the title and director for the movie with highest worldwide gross in the year var0 or before ?<CODESPLIT>SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE YEAR <= var0 ORDER BY MOVIEalias0.GROSS_WORLDWIDE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all director names who have a movie in both year var1 and var0 .<CODESPLIT>SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = var0 INTERSECT SELECT MOVIEalias1.DIRECTOR FROM MOVIE AS MOVIEalias1 WHERE MOVIEalias1.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all director names who have a movie in the year var0 or var1 .<CODESPLIT>SELECT APPELLATIONSalias0.AREA , APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average , maximum , and minimum budget for all movies before var0 .<CODESPLIT>SELECT AVG( MOVIEalias0.BUDGET_MILLION ) , MAX( MOVIEalias0.BUDGET_MILLION ) , MIN( MOVIEalias0.BUDGET_MILLION ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all company names with a book published by var0 .<CODESPLIT>SELECT CULTURE_COMPANYalias0.COMPANY_NAME FROM CULTURE_COMPANY AS CULTURE_COMPANYalias0 JOIN BOOK_CLUB AS BOOK_CLUBalias0 ON CULTURE_COMPANYalias0.BOOK_CLUB_ID = BOOK_CLUBalias0.BOOK_CLUB_ID WHERE BOOK_CLUBalias0.PUBLISHER = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the movie titles and book titles for all companies in var0 .<CODESPLIT>SELECT BOOK_CLUBalias0.BOOK_TITLE , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN CULTURE_COMPANY AS CULTURE_COMPANYalias0 ON MOVIEalias0.MOVIE_ID = CULTURE_COMPANYalias0.MOVIE_ID JOIN BOOK_CLUB AS BOOK_CLUBalias0 ON CULTURE_COMPANYalias0.BOOK_CLUB_ID = BOOK_CLUBalias0.BOOK_CLUB_ID WHERE CULTURE_COMPANYalias0.INCORPORATED_IN = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all company names with a movie directed in year var0 .<CODESPLIT>SELECT COUNT( * ) FROM RESULTS AS RESULTSalias0 JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = "var0" AND RACESalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest city in var0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "var0" ) AND CITYalias0.STATE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of students who took exactly one class .<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how big is var0<CODESPLIT>SELECT DEPARTMENTSalias0.DEPARTMENT_DESCRIPTION FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in var0<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ORDER BY EMPLOYEEalias0.EMP_FNAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who was the director of the movie var1 from var0 ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cities in var0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NATIONALITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the capital var0<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the lakes in var0<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name the major lakes in var1<CODESPLIT>SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.PAYMENT_DATE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the states<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the industry shared by the most companies .<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest population<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest elevation in var0<CODESPLIT>SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 WHERE RANK = "var0" GROUP BY FACULTYalias0.SEX ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and price of the product that has been ordered the greatest number of times .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT , HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the longest river in the usa<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers written by " H . V . Jagadish " and " var0 " with the most number of citations .<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "var0" ) AND RIVERalias0.TRAVERSE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers are in var0<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of conductors in ascending order of age .<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name all the rivers in var0<CODESPLIT>SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state is var0 in<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the state with the largest area<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in var0<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest city in var0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "var0" ) AND CITYalias0.STATE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states lie on the largest river in the united states<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which movies have ' var0 ' as a substring in the special feature ?<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of the tallest person ?<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and number of followers for each user , and sort the results by the number of followers in descending order .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the longest river that passes through the us<CODESPLIT>SELECT MEDIA_TYPESalias0.NAME FROM MEDIA_TYPES AS MEDIA_TYPESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of distinct continents where var0 is spoken ?<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest city in the largest state<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 dataset<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the highest points of states surrounding var0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in states bordering var0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ORDER BY HIGHLOWalias0.HIGHEST_ELEVATION DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the order which has the most items ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the countries that are in the continent of var0 and have a population of var1 ?<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has var0 written any papers in var1 ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the state with the smallest population density<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>count the states which have elevations lower than what var0 has<CODESPLIT>SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION < ( SELECT HIGHLOWalias1.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of teachers and the number of courses they teach .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_POINT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high is the highest point in america<CODESPLIT>SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the var0 river<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the longest river in var0<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "var0" ) AND RIVERalias0.TRAVERSE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many capitals does var0 have<CODESPLIT>SELECT COUNT( STATEalias0.CAPITAL ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many cities are there in the united states<CODESPLIT>SELECT ORGANIZATIONalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.CONTINENT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are there<CODESPLIT>SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ORDER BY ADDRESSESalias0.CITY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , time , and service for all trains .<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the authors of submissions and the acceptance results of their submissions .<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of var0 var1<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "var0" AND CITYalias0.STATE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the language used least number of TV Channel . List language and number of TV Channel .<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "var0" ) AND CITYalias0.STATE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the capital of var0<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the united states<CODESPLIT>SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states are in the usa<CODESPLIT>SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE ROOMSalias0.MAXOCCUPANCY = RESERVATIONSalias0.ADULTS + RESERVATIONSalias0.KIDS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border var0<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the state with the largest population<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common reigns of wrestlers .<CODESPLIT>SELECT COUNT( DISTINCT STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have a higher point than the highest point of the state with the largest capital city in the us<CODESPLIT>SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ( SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name the major rivers in var1<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 AND RIVERalias0.TRAVERSE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>through which states does the longest river in var0 run<CODESPLIT>SELECT CINEMAalias0.CAPACITY , CINEMAalias0.NAME , CINEMAalias0.OPENNING_YEAR FROM CINEMA AS CINEMAalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the capital city in var0<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the names of movies whose created year is after all movies directed by var0 ?<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>display all the information of those employees who did not have any job in the past .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the cities of the state with the highest point<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the highest points of all the states<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in var1<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in states through which the var2 runs<CODESPLIT>SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.CLASS = "var0" INTERSECT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the population densities of each us state<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lakes in states bordering var0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the populations of states which border var0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the populations of the major cities of var1<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what city has the most people<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest capital city in the us<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of states that have cities named var0<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN CITY AS CITYalias0 ON STATEalias0.STATE_NAME = CITYalias0.STATE_NAME WHERE CITYalias0.CITY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the smallest state<CODESPLIT>SELECT COUNT( * ) FROM CHURCH AS CHURCHalias0 WHERE CHURCHalias0.OPEN_DATE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the largest population density<CODESPLIT>SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 JOIN HAPPY_HOUR AS HAPPY_HOURalias0 ON SHOPalias0.SHOP_ID = HAPPY_HOURalias0.SHOP_ID WHERE HAPPY_HOURalias0.MONTH = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the largest population<CODESPLIT>SELECT PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MIN( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state with the longest river<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the combined area of all 50 states<CODESPLIT>SELECT SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the density of the var0<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest mountain in the us<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the state with capital var0<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the usa<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name , address road , and city for all branches sorted by open year .<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in smallest state through which the var0 runs<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "var1" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ) ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in the smallest state in the usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state bordering var0<CODESPLIT>SELECT APARTMENT_FACILITIESalias0.FACILITY_CODE FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_FACILITIESalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.BEDROOM_COUNT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the largest state<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the states that border var0<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the state with the most major cities<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE TRAVERSE = ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE POPULATION > var0 GROUP BY STATE_NAME ORDER BY COUNT( CITYalias0.CITY_NAME ) DESC LIMIT 1 ) ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point in var0<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point in usa<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point of all states through which the var0 river runs through<CODESPLIT>SELECT PLAYERalias0.PNAME , TRYOUTalias0.CNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most dense state in the usa<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the most populous state through which the var0 runs<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the minimum snatch score ?<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the largest city in the state with the largest area<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the smallest state<CODESPLIT>SELECT DISTINCT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the state with the highest population density<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest city in the usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the channels owned by var0 or var1 ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest state that the var0 river runs through<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the state with the smallest area<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the total length of all rivers in the usa<CODESPLIT>SELECT SUM( RIVERalias0.LENGTH ) FROM RIVER AS RIVERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what river flows through the most states<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers are in states that border var0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and names of the architects who built at least var0 bridges ?<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state contains the highest point of those the var0 river traverses<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest capital<CODESPLIT>SELECT MAX( POKER_PLAYERalias0.FINAL_TABLE_MADE ) FROM POKER_PLAYER AS POKER_PLAYERalias0 WHERE POKER_PLAYERalias0.EARNINGS < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the longest river<CODESPLIT>SELECT DISTINCT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the smallest urban population<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that border var0<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that the var0 runs through<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many medicines have the FDA approval status ' var0 ' ?<CODESPLIT>SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER = "var0" AND BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the most populous state<CODESPLIT>SELECT TREATMENTSalias0.COST_OF_TREATMENT , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENTS AS TREATMENTSalias0 JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border the state with the smallest area<CODESPLIT>SELECT CINEMAalias0.NAME , SUM( SCHEDULEalias0.SHOW_TIMES_PER_DAY ) FROM SCHEDULE AS SCHEDULEalias0 JOIN CINEMA AS CINEMAalias0 ON SCHEDULEalias0.CINEMA_ID = CINEMAalias0.CINEMA_ID GROUP BY SCHEDULEalias0.CINEMA_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states contain at least one major rivers<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where are mountains<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.FEATURE_ID = FEATURESalias0.FEATURE_ID WHERE FEATURESalias0.FEATURE_DETAILS = "var0" UNION SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.FEATURE_ID = FEATURESalias1.FEATURE_ID WHERE FEATURESalias1.FEATURE_DETAILS = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the highest mountain of the united states<CODESPLIT>SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the smallest city<CODESPLIT>SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the density of the state that the largest river in the united states runs through<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which is the highest peak not in var0<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.STATE_NAME != "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of school that has the smallest enrollment in each state ?<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers do not run through var0<CODESPLIT>SELECT DISTINCT CUSTOMER_ADDRESSESalias0.ADDRESS_TYPE_CODE FROM CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through states that border the state with the capital var0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state capital has the smallest population<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = "var1" AND DERIVED_TABLEalias0.COLOR_DESCRIPTION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the highest elevation<CODESPLIT>SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID ORDER BY LAPTIMESalias0.MILLISECONDS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the lowest elevation<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the nationality of the journalist with the largest number of years working ?<CODESPLIT>SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state has the smallest average urban population<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state is mount var0 in<CODESPLIT>SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states have a river<CODESPLIT>SELECT AIRCRAFTalias0.NAME FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID GROUP BY FLIGHTalias0.AID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states have a major city named var0<CODESPLIT>SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of film studio that have the most number of films .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , city , country , and altitude (or elevation) of the airports in the city of var0 .<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE NOT IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the shortest river in var0<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "var0" ) AND RIVERalias0.TRAVERSE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the smallest state in the us<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the largest state through which the var0 runs<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 JOIN RIVER AS RIVERalias0 ON STATEalias1.STATE_NAME = RIVERalias0.TRAVERSE WHERE RIVERalias0.RIVER_NAME = "var0" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the shortest river in the usa<CODESPLIT>SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.HORSEPOWER > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the state that borders the state that borders var0<CODESPLIT>SELECT COURSESalias0.COURSE_DESCRIPTION FROM COURSES AS COURSESalias0 WHERE COURSESalias0.COURSE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct building descriptions .<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the largest state that borders var0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state is var0 the capital of<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the state with the largest population<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state that borders the state with the highest population<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.POPULATION = ( SELECT MAX( STATEalias3.POPULATION ) FROM STATE AS STATEalias3 ) ) ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.BORDER IN ( SELECT STATEalias4.STATE_NAME FROM STATE AS STATEalias4 WHERE STATEalias4.POPULATION = ( SELECT MAX( STATEalias5.POPULATION ) FROM STATE AS STATEalias5 ) ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers are there in us<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name the 50 capitals in the usa<CODESPLIT>SELECT DISTINCT STATEalias0.CAPITAL FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have a city named var0<CODESPLIT>SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the unit of measuerment of the product category code " var0 " ?<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the lakes in states bordering var0<CODESPLIT>SELECT DISTINCT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.MANAGER_ID HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are in var1<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total amount of settlement made for all the settlements ?<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what datasets did var0 use ?<CODESPLIT>SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of people in ascending order of weight ?<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the claim status " var0 " ?<CODESPLIT>SELECT STATEalias0.POPULATION / STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that border states that border var0<CODESPLIT>SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 GROUP BY POLL_SOURCE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all employees with at least var0 salary .<CODESPLIT>SELECT COUNT( DISTINCT BORDER_INFOalias0.STATE_NAME ) FROM BORDER_INFO AS BORDER_INFOalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the height of the highest mountain in var0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" AND PAPERalias0.YEAR = var1 GROUP BY WRITESalias0.AUTHORID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct name of losers .<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var0" ) AND BORDER_INFOalias0.STATE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major cities are in states bordering var1<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above var0 ?<CODESPLIT>SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and ids of stations that had more than var0 bikes available on average or were installed in December ?<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>name all the lakes of us<CODESPLIT>SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many major rivers cross var1<CODESPLIT>SELECT COUNT( * ) , RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 GROUP BY RAILWAYalias0.BUILDER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the shortest river<CODESPLIT>SELECT COUNT( DISTINCT PERPETRATORalias0.LOCATION ) FROM PERPETRATOR AS PERPETRATORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct products in alphabetical order .<CODESPLIT>SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the height of mount var0<CODESPLIT>SELECT MOUNTAINalias0.MOUNTAIN_ALTITUDE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states does the shortest river run through<CODESPLIT>SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the state with the smallest population<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MIN( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which rivers run through the state with the lowest elevation in the usa<CODESPLIT>SELECT ALL_DOCUMENTSalias0.DATE_STORED FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what mountains are in var0<CODESPLIT>SELECT STATIONalias0.MAIN_SERVICES , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY STATIONalias0.TOTAL_PASSENGERS DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have major rivers<CODESPLIT>SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the smallest state through which the longest river runs<CODESPLIT>SELECT COUNT( * ) , MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE GROUP BY MEDICATIONalias0.BRAND ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state traversed by the var0 river<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers run through the states bordering var0<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has no rivers<CODESPLIT>SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of the largest state<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many cities are in var0<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the states<CODESPLIT>SELECT COUNT( VOTING_RECORDalias0.* ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states in the us does the shortest river run through<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through states that border the state with the largest population<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in the largest state<CODESPLIT>SELECT STAFFalias0.STAFF_ID , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID ORDER BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO - STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_FROM LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the area of the smallest state<CODESPLIT>SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which states border the longest river in the usa<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population density of the state with the smallest population<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the var0 river<CODESPLIT>SELECT COUNT( DISTINCT BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states have a capital that is the highest point in the state<CODESPLIT>SELECT BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN BENEFITS_OVERPAYMENTS AS BENEFITS_OVERPAYMENTSalias0 ON CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID = BENEFITS_OVERPAYMENTSalias0.CMI_CROSS_REF_ID ORDER BY BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the population of the capital of the smallest state<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the status shared by more than two roller coaster .<CODESPLIT>SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point of the state with the largest area<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.AREA = ( SELECT MAX( STATEalias2.AREA ) FROM STATE AS STATEalias2 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of representatives and the dates of elections they participated in .<CODESPLIT>SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 JOIN BORDER_INFO AS BORDER_INFOalias1 ON BORDER_INFOalias1.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the size of the largest state in the usa<CODESPLIT>SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which capitals are not major cities<CODESPLIT>SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN CITY AS CITYalias0 ON STATEalias0.CAPITAL = CITYalias0.CITY_NAME WHERE CITYalias0.POPULATION <= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me the cities in usa<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point of the state with the largest area<CODESPLIT>SELECT FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 WHERE FESTIVAL_DETAILalias0.YEAR = var0 OR FESTIVAL_DETAILalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is var0<CODESPLIT>SELECT STATEalias0.COUNTRY_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest urban population<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major rivers in the us<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many cities named var0 are there in the usa<CODESPLIT>SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the smallest state bordering var0<CODESPLIT>SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the length of the var0 river in var1<CODESPLIT>SELECT LNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY LNAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the highest rank of losers in all matches .<CODESPLIT>SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students living in city var0 whose age is between var1 and var2 .<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the elevation of var0<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" AND PROFESSORalias0.PROF_HIGH_DEGREE != "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the average population of the us by state<CODESPLIT>SELECT AVG( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what rivers flow through the largest state<CODESPLIT>SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which role is most common for the staff ?<CODESPLIT>SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 JOIN BORDER_INFO AS BORDER_INFOalias1 ON BORDER_INFOalias1.STATE_NAME = BORDER_INFOalias0.BORDER JOIN BORDER_INFO AS BORDER_INFOalias2 ON BORDER_INFOalias2.BORDER = BORDER_INFOalias0.STATE_NAME JOIN BORDER_INFO AS BORDER_INFOalias3 ON BORDER_INFOalias3.BORDER = BORDER_INFOalias2.STATE_NAME WHERE BORDER_INFOalias3.STATE_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border on the state whose capital is var0<CODESPLIT>SELECT INSTRUMENTSalias0.INSTRUMENT FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID JOIN INSTRUMENTS AS INSTRUMENTSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID AND INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = "var0" AND SONGSalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river flowing through var0<CODESPLIT>SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.LENGTH > var1 AND RIVERalias1.TRAVERSE = "var2" ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the manager name with most number of gas stations opened after var0 .<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states border the largest state<CODESPLIT>SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which state is the largest city in var0 in<CODESPLIT>SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = "var0" ) AND CITYalias0.STATE_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is capital of the state with the lowest point<CODESPLIT>SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the biggest american city in a state with a river<CODESPLIT>SELECT DISTINCT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 JOIN RIVER AS RIVERalias0 ON RIVERalias0.TRAVERSE = CITYalias0.STATE_NAME WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM RIVER AS RIVERalias1 JOIN CITY AS CITYalias1 ON RIVERalias1.TRAVERSE = CITYalias1.STATE_NAME ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many rivers are in the state with the largest population<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE WHERE STATEalias0.STATE_NAME = ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MAX( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest state that borders the state with the lowest point in the usa<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = "var0" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please list the years of film market estimations when the market is in country " var0 " in descending order .<CODESPLIT>SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the highest point in the smallest state<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the citizenship shared by singers with birth year before var0 and after var1 .<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM HIGHLOW AS HIGHLOWalias0 JOIN RIVER AS RIVERalias0 ON RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how high is the highest point in the largest state<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.GRADE > var0 GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the longest river in the state with the highest point<CODESPLIT>SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = "var0" GROUP BY INVOICESalias0.BILLING_STATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers that are coauthored by var0 and var1<CODESPLIT>SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who has written the most var0 papers ?<CODESPLIT>SELECT AVG( CITYalias0.POPULATION ) , CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATUS ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citation var0 has ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 papers<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Has var0 written any papers in var1 ?<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) , DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers has var0 written ?<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE ORDER BY PROCEDURESalias0.COST DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many players are there ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>are there any var0 papers since var1 ?<CODESPLIT>SELECT OPERATE_COMPANYalias0.NAME , OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does var0 publish a lot ?<CODESPLIT>SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did David M . Blei publish at var1 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all academic papers on var0<CODESPLIT>SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which var1 var0 papers have the most citations ?<CODESPLIT>SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY PERPETRATORalias0.COUNTRY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers were published at var3 in var2 about var1 applied to var0 ?<CODESPLIT>SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE , TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 JOIN TRANSCRIPTS AS TRANSCRIPTSalias0 ON TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID = TRANSCRIPTSalias0.TRANSCRIPT_ID GROUP BY TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers are in var0 ?<CODESPLIT>SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE ACC_TYPE = "var0" INTERSECT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the capital of states that have cities named var0<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what kind of papers does var0 publish<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the organizations in " var0 " .<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers are there ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERID ) FROM PAPER AS PAPERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of customers who have once canceled the purchase of the product " varvar2 " (the item status is " var0") .<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of members and names of colleges they go to .<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" AND PAPERalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var2 papers in var1 on var0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the photos for mountains ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by var0 for each year<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" ORDER BY PAPERalias0.YEAR , DERIVED_TABLEalias0.KEYPHRASEID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>recent research interests of var0<CODESPLIT>SELECT PROPERTIESalias0.PROPERTY_NAME FROM PROPERTIES AS PROPERTIESalias0 WHERE PROPERTIESalias0.PROPERTY_TYPE_CODE = "var0" UNION SELECT PROPERTIESalias1.PROPERTY_NAME FROM PROPERTIES AS PROPERTIESalias1 WHERE PROPERTIESalias1.PROPERTY_TYPE_CODE = "var1" AND PROPERTIESalias1.ROOM_COUNT > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of customers who have both var0 and var1 account types .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many var0 papers in var2 var1<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 var1 paper<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers has var0 written in var1<CODESPLIT>SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.NAME NOT IN ( SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What var0 paper published in var1 ?<CODESPLIT>SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 WHERE BANKalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many co-authors has var0 had ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT AUTHORalias0.AUTHORID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME != "var0" AND WRITESalias0.PAPERID IN ( SELECT WRITESalias1.PAPERID FROM WRITES AS WRITESalias1 JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias1.AUTHORNAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>keyphrases used by var0 in var1<CODESPLIT>SELECT APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what author is most cited ?<CODESPLIT>SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and major of the students who are not allegry to soy .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" AND PAPERalias0.JOURNALID >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of perpetrators in country " var0 " or " var1 " ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" GROUP BY PAPERalias0.PAPERID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find employee with ID and name of the country presently where (s)he is working .<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many settlements are there in total ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 GROUP BY PAPERalias0.PAPERID HAVING COUNT( DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME ) > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers run experiments on var0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did var0 cite ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When does var0 publish the first var1 paper ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ORDER BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which bike traveled the most often in zip code var0 ?<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where does var0 publish ?<CODESPLIT>SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers appeared at var1 last year<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what was the first var0 paper ?<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID , PAPERalias0.YEAR FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = "var0" ORDER BY PAPERalias0.YEAR ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the cinema name and location for cinemas with capacity above average .<CODESPLIT>SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the papers on var1 by var0 at var3 in var2<CODESPLIT>SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_LOSER WHERE POSTSEASONalias0.YEAR = var1 AND TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers were written on var0 in the past year ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers were written on var0 this year ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the vocal types .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who writes papers with var0 ?<CODESPLIT>SELECT FESTIVAL_DETAILalias0.LOCATION FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ORDER BY FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what datasets did var0 use ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many addresses are in the district of var0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" ORDER BY PAPERalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What years did var0 publish papers in ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY PAPERalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 ' s publications by year<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ORDER BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers does var0 publish each year ?<CODESPLIT>SELECT DISTINCT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who does var0 cite<CODESPLIT>SELECT COUNT( * ) , FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 GROUP BY FRIENDalias0.STUDENT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>journal papers for varvar1<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.JOURNALID >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average amount of transactions with type code " var0 " .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR > var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citations does var0 ' s var1 paper have ?<CODESPLIT>SELECT COUNT( * ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants on var0 rd in var0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what topics does var0 write about most ?<CODESPLIT>SELECT DISTINCT COUNT( DERIVED_TABLEalias0.KEYPHRASEID ) , DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY DERIVED_TABLEalias0.KEYPHRASEID ORDER BY COUNT( DERIVED_TABLEalias0.KEYPHRASEID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers related to var1 cited the dataset var0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON PAPERalias0.PAPERID = DERIVED_TABLEalias1.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = "var0" AND DERIVED_TABLEalias2.KEYPHRASENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>most cited papers on var0<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What paper did var0 wrote in the 90s ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR , WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME LIKE "var0" AND PAPERalias0.YEAR LIKE "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most cited paper by var0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers did michael i . jordan publish in var1 ?<CODESPLIT>SELECT COURSEalias0.COURSE_ID FROM COURSE AS COURSEalias0 EXCEPT SELECT COURSE_ID FROM PREREQ ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>count of var0 papers by author<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY WRITESalias0.AUTHORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who wrote the most papers for var1 var0<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers in var1 var0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers from var0<CODESPLIT>SELECT MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What papers does var0 have in var1 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the minimum and maximum number of bathrooms of all the apartments ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which district has the largest population ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the distinct premise types ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Papers on var0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how long is the longest river in var0<CODESPLIT>SELECT DISTINCT VENUEID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how is the most cited author in var0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are some var1 papers that var0 did not write ?<CODESPLIT>SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers published in the last year<CODESPLIT>SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = ( SELECT MAX( PAPERalias1.YEAR ) FROM PAPER AS PAPERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the distinct director of all films .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who cites var0 the most<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , WRITESalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY WRITESalias1.AUTHORID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the first name , gpa and phone number of the top var0 students with highest gpa ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what papers have fewer than var1 citations by var0 papers ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name and building of the departments whose budget is more than the average budget ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ORDER BY PAPERalias0.YEAR DESC LIMIT var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What were the papers published at var1 var0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List today ' s journals<CODESPLIT>SELECT COUNT( DISTINCT ELECTIONalias0.DELEGATE ) FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var2 papers in var1 with var0 in the title<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.TITLE LIKE "var0" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which position is most popular among players in the tryout ?<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY AUTHORalias0.AUTHORNAME ORDER BY COUNT( DISTINCT WRITESalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information in the item table .<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many papers by var1 are cited by michael i . jordan<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND AUTHORalias1.AUTHORNAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>who else was on the paper with var0 and var1 ?<CODESPLIT>SELECT DISTINCT WRITESalias2.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PAPERID = WRITESalias1.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND AUTHORalias1.AUTHORNAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many kids stay in the room var1 var2 checked in on Sep 21 , 2010 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" AND PAPERalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total amount of loans offered by each bank branch .<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY PAPERalias0.JOURNALID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What authors wrote papers about var0 in var1 ?<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did var0 publish ?<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ORDER BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many dogs have an age below the average ?<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , DERIVED_TABLEalias1.KEYPHRASENAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN CITE AS CITEalias0 ON DERIVED_TABLEalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY DERIVED_TABLEalias1.KEYPHRASENAME ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the type of the company who concluded its contracts most recently ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY PAPERalias0.JOURNALID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is zip code of customer with first name as var0 and last name as var1 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = "var0" AND DERIVED_TABLEalias2.KEYPHRASENAME = "var1" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>in what journals does var0 publish ?<CODESPLIT>SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 EXCEPT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID JOIN ENZYME AS ENZYMEalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE ENZYMEalias0.PRODUCT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 authors<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each var0 county campus , report the number of degrees granted after var1 .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , VENUEalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY VENUEalias0.VENUEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the delegate and committee information of elections .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE JOURNALalias0.JOURNALNAME = "var0" AND PAPERalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the publication titles by var0 ?<CODESPLIT>SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID IN ( SELECT ID FROM TAKES WHERE SEMESTER = "var0" AND YEAR = var1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border states that border states that border states that border var0<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are some papers dealing with var1 in var0 ?<CODESPLIT>SELECT AVG( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) , MIN( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who has published more papers in var0 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In what year did var0 publish the most papers<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME LIKE "var0" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>conferences that mention var0<CODESPLIT>SELECT DISTINCT PAPERalias0.VENUEID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>first var0 paper<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what papers were published in var0 in var1 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID WHERE JOURNALalias0.JOURNALNAME = "var0" AND PAPERalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professors are teaching class with code var0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>venue for var0<CODESPLIT>SELECT COUNT( * ) , MATCHalias0.COMPETITION FROM MATCH AS MATCHalias0 GROUP BY MATCHalias0.COMPETITION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all distinct countries where singers above age var0 are from ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR >= var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the best var0 conferences ?<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 papers by author<CODESPLIT>SELECT COUNT( * ) , MEMBERalias0.COUNTRY FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.COUNTRY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers with more than var0 citations<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and city of the airport which is the source for the most number of flight routes .<CODESPLIT>SELECT DISTINCT WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum , minimum and average home games each stadium held ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , SUM( PAPERalias0.NUMCITEDBY ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN var0 AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var1" GROUP BY DERIVED_TABLEalias1.KEYPHRASENAME ORDER BY SUM( PAPERalias0.NUMCITEDBY ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>main topics of work by var0<CODESPLIT>SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>authors with at least var0 papers<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID WHERE CIRCULATION_HISTORYalias0.DOCUMENT_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers that were not published in the last year<CODESPLIT>SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR != var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find products with max page size as " var0 " or pages per minute color smaller than var1 .<CODESPLIT>SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In var1 what journal published an article about var0 ?<CODESPLIT>SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.HEIGHT > var1 OR ROLLER_COASTERalias0.LENGTH > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most popular paper this year in var1 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many citations does var0 have per year<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY PAPERalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many gymnasts are there ?<CODESPLIT>SELECT DISTINCT WRITESalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" GROUP BY WRITESalias0.PAPERID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What articles have been published since var1 about var0 ?<CODESPLIT>SELECT DISTINCT PAPERID , PAPERalias0.TITLE FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE LIKE "var0" AND PAPERalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Eric C . Kerrigan ' s var1 var2 paper<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE AUTHORalias0.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" AND VENUEalias0.VENUENAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where did var0 publish his last paper ?<CODESPLIT>SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many allergies are there ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are the prominent researchers in var0 in var1 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND PAPERalias0.YEAR = var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>the papers at var2 in var1 using var0 dataset<CODESPLIT>SELECT PARTIESalias0.PARTY_EMAIL FROM PARTIES AS PARTIESalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.PARTY_ID = PARTIESalias0.PARTY_ID WHERE PARTY_FORMSalias0.FORM_ID = ( SELECT PARTY_FORMSalias1.FORM_ID FROM PARTY_FORMS AS PARTY_FORMSalias1 GROUP BY FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>var0 papers citing var1 papers<CODESPLIT>SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN CITE AS CITEalias0 ON DERIVED_TABLEalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>top authors working on var0 ?<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" GROUP BY WRITESalias0.PAPERID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many var1 var0 papers have more than var2 citations ?<CODESPLIT>SELECT DISTINCT ( PAPERalias0.PAPERID ) , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" GROUP BY PAPERalias0.PAPERID HAVING COUNT( CITEalias0.CITINGPAPERID ) > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the topic of best paper in var0 var1 ?<CODESPLIT>SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers has var0 co-authored since var1 ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME != "var0" AND PAPERalias0.YEAR > var1 AND WRITESalias0.PAPERID IN ( SELECT WRITESalias1.PAPERID FROM WRITES AS WRITESalias1 JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias1.AUTHORNAME LIKE "var2" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Number of var0 papers with more than var1 citations<CODESPLIT>SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of Eric C . Kerrigan ' s var1 var2 paper ?<CODESPLIT>SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = "var0" EXCEPT SELECT DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and rank points of the winner who won the most times .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = "var0" AND VENUEalias0.VENUENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What venues are for var0 ?<CODESPLIT>SELECT DISTINCT VENUEID FROM VENUE AS VENUEalias0 WHERE VENUENAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was the last time var0 published a paper ?<CODESPLIT>SELECT DISTINCT MAX( PAPERalias0.YEAR ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>I want the co-authors of papers on var1 with var0<CODESPLIT>SELECT DISTINCT AUTHORalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AUTHORID = AUTHORalias0.AUTHORID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias1.AUTHORNAME = "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many papers does var0 publish outside of var1 area ?<CODESPLIT>SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = "var0" AND VENUEalias0.VENUENAME != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which journal did var0 publish his last paper ?<CODESPLIT>SELECT DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the venue of var0 ?<CODESPLIT>SELECT DISTINCT VENUEID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the nicknames of schools that are not in division 1 .<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many gymnasts are there ?<CODESPLIT>SELECT DISTINCT PAPERalias0.TITLE , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the product ID of the most frequently ordered item on invoices ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me the papers written by var0 before var1 .<CODESPLIT>SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers in var0 for each year<CODESPLIT>SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>papers with at least var0 citations<CODESPLIT>SELECT PUBLICATIONalias0.PUBLICATION_DATE FROM PUBLICATION AS PUBLICATIONalias0 ORDER BY PUBLICATIONalias0.PRICE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the most cited paper at var0 ?<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = "var0" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of var0 ' s var1 paper ?<CODESPLIT>SELECT DISTINCT PAPERalias0.TITLE FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME LIKE "var0" AND DERIVED_TABLEalias1.KEYPHRASENAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the businesses with more than var0 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all businesses with rating var0<CODESPLIT>SELECT CLUBNAME FROM CLUB AS CLUBalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all user ids with name var0<CODESPLIT>SELECT USERalias0.USER_ID FROM USER AS USERalias0 WHERE USERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all states in which there is a var0<CODESPLIT>SELECT BUSINESSalias0.STATE FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the distinct names of all songs that have a higher resolution than some songs in English .<CODESPLIT>SELECT BUSINESSalias0.CITY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the cities of businesses rated below var0<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all cities which has a " var0 " .<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the reviews which rated a business less than var0<CODESPLIT>SELECT REVIEWalias0.TEXT FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.RATING < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the var1 rated more than var0<CODESPLIT>SELECT AVG( PAYMENTSalias0.AMOUNT_DUE ) FROM PAYMENTS AS PAYMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the reviews by var0<CODESPLIT>SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.RESULT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the businesses which have a review by var0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE USERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the businesses which var1 rated var0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.RATING = var0 AND USERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the names of singers who are from var0 and released an English song .<CODESPLIT>SELECT REVIEWalias0.TEXT FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" AND CATEGORYalias1.CATEGORY_NAME = "var1" AND USERalias0.NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of amenity that is most common in all dorms .<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND BUSINESSalias0.STATE = "var1" AND CATEGORYalias0.CATEGORY_NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all var0 star var1 var2<CODESPLIT>SELECT PARTSalias0.PART_ID , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN PART_FAULTS AS PART_FAULTSalias0 ON PART_FAULTSalias0.PART_ID = PARTSalias0.PART_ID JOIN SKILLS_REQUIRED_TO_FIX AS SKILLS_REQUIRED_TO_FIXalias0 ON SKILLS_REQUIRED_TO_FIXalias0.PART_FAULT_ID = PART_FAULTSalias0.PART_FAULT_ID GROUP BY PARTSalias0.PART_ID ORDER BY COUNT( SKILLS_REQUIRED_TO_FIXalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the neighbourhoods with var1 var2 in var0<CODESPLIT>SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND CATEGORYalias1.CATEGORY_NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the neighbourhoods with var2 var3 rated less than var1 in var0<CODESPLIT>SELECT COUNT( AFFECTED_REGIONalias0.* ) , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID GROUP BY REGIONalias0.REGION_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all the var1 in var0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the reviews for all var1 with more than var0 reviews<CODESPLIT>SELECT REVIEWalias0.TEXT FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.REVIEW_COUNT > var0 AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the var1 in " var0 " ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who reviewed var1 " var0 "<CODESPLIT>SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_PRICE , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the addresses of all var1 in " var0 "<CODESPLIT>SELECT BUSINESSalias0.FULL_ADDRESS FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many counties are there ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND USERalias0.NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var0 reviewed by var1<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" AND USERalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var1 reviewed by var2 with at least var0 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.RATING >= var0 AND CATEGORYalias0.CATEGORY_NAME = "var1" AND USERalias0.NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who have written tips for " var0 " in var1<CODESPLIT>SELECT USERalias0.NAME FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE BUSINESSalias0.NAME = "var0" AND TIPalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the budget type code and description and the corresponding document id .<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING < var0 AND BUSINESSalias0.STATE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the maximum scores of the team var0 when the team won in postseason ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND CATEGORYalias1.CATEGORY_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all reviews by var1 with a rating above var0<CODESPLIT>SELECT REVIEWalias0.TEXT FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.RATING > var0 AND USERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var1 in " var0 "<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var0 var2 with a rating above var1<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What neighbourhood is restaurant " var0 " in ?<CODESPLIT>SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the interaction type of the enzyme named ' var0 ' and the medicine named ' var1 ' ?<CODESPLIT>SELECT TIPalias0.TEXT FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND TIPalias0.LIKES > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all reviews about " var0 " in year var1<CODESPLIT>SELECT MAX( AREA_CODE_STATEalias0.AREA_CODE ) , MIN( AREA_CODE_STATEalias0.AREA_CODE ) FROM AREA_CODE_STATE AS AREA_CODE_STATEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who have written tips about businesses in var0<CODESPLIT>SELECT USERalias0.NAME FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct projects .<CODESPLIT>SELECT BUSINESSalias0.CITY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND BUSINESSalias0.STATE = "var1" AND CATEGORYalias0.CATEGORY_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the users who have given tips on var0<CODESPLIT>SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN TIP AS TIPalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are flight numbers of Airline " var0 " ?<CODESPLIT>SELECT TIPalias0.TEXT FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND BUSINESSalias0.STATE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all users who reviewed businesses that are var0 .<CODESPLIT>SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all tips for " var0 " in var1 in var2 .<CODESPLIT>SELECT TIPalias0.TEXT FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND BUSINESSalias0.STATE = "var1" AND TIPalias0.YEAR = var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all users who reviewed businesses that are var0 in var1 .<CODESPLIT>SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" AND REVIEWalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the tips from a user who has written a review in var0<CODESPLIT>SELECT TIPalias0.TEXT FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all reviews for businesses rated var0<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of var1 in var0<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of var1 rated more than var0<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.RATING > var0 AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in var2 var1 in " var0 "<CODESPLIT>SELECT BUILDINGSalias0.NAME , COMPANIESalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in var1 var2 in " var0 " on var3<CODESPLIT>SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in var1 var2 in " var0 " per day<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_POINT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in var0 var1 in each state on var2<CODESPLIT>SELECT BUSINESSalias0.STATE , SUM( CHECKINalias0.COUNT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" AND CATEGORYalias1.CATEGORY_NAME = "var1" AND CHECKINalias0.DAY = "var2" GROUP BY BUSINESSalias0.STATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and opening year for three churches that opened most recently .<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 AND USERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the average rating given in var0 reviews<CODESPLIT>SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_NAME = "var0" INTERSECT SELECT DERIVED_TABLEalias1.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias1 JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_TYPE_CODE = DERIVED_TABLEalias1.SERVICE_TYPE_CODE WHERE SERVICESalias1.PRODUCT_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of checkins for " var0 " on var1<CODESPLIT>SELECT CHECKINalias0.COUNT FROM CHECKIN AS CHECKINalias0 JOIN BUSINESS AS BUSINESSalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND CHECKINalias0.DAY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many users reviewed " var1 " in var0<CODESPLIT>SELECT COUNT( DISTINCT USERalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of var2 in var0 rated var1<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.RATING = var1 AND CATEGORYalias0.CATEGORY_NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the founder of var0 ?<CODESPLIT>SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM TIP AS TIPalias0 WHERE TIPalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total likes on tips from var0<CODESPLIT>SELECT SUM( TIPalias0.LIKES ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE USERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total likes on tips about " var0 "<CODESPLIT>SELECT SUM( TIPalias0.LIKES ) FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total likes on tips from var1 about " var0 "<CODESPLIT>SELECT DISTINCT * FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID WHERE EMPLOYEESalias0.EMPLOYEE_ID = DEPARTMENTSalias0.MANAGER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips has var1 written in var0<CODESPLIT>SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE TIPalias0.YEAR = var0 AND USERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips has var1 written in var0<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the names of schools with an endowment amount smaller than or equal to var0 .<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var2 in " var0 " have a rating above var1 ?<CODESPLIT>SELECT DISTINCT GENRESalias0.NAME FROM GENRES AS GENRESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the event that happened in the most recent year ?<CODESPLIT>SELECT COUNT( DISTINCT USERalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.NAME = "var1" AND BUSINESSalias0.STATE = "var2" AND CATEGORYalias0.CATEGORY_NAME = "var3" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many people reviewed " var0 " in var1 ?<CODESPLIT>SELECT COUNT( DISTINCT USERalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.NAME = "var0" AND REVIEWalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and residence for players whose occupation is not " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var1 are there in var0 var2 ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.BUSINESS_ID ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.NAME = "var1" AND BUSINESSalias0.STATE = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many reviews does " var0 " have ?<CODESPLIT>SELECT BUSINESSalias0.REVIEW_COUNT FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of checkins in var1 " var0 " per day<CODESPLIT>SELECT AVG( CHECKINalias0.COUNT ) , CHECKINalias0.DAY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" GROUP BY CHECKINalias0.DAY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and family name of the driver who has the longest laptime ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many reviews has var0 written ?<CODESPLIT>SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE BOOK_CLUBalias0.YEAR = var0 INTERSECT SELECT BOOK_CLUBalias1.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias1 WHERE BOOK_CLUBalias1.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many reviews has var2 written in var0 var1 ?<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.MONTH = "var0" AND REVIEWalias0.YEAR = var1 AND USERalias0.NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of department has the highest amount of students ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 AND USERalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many businesses in " var0 " has var2 reviewed in var1 ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" AND REVIEWalias0.YEAR = var1 AND USERalias0.NAME = "var2" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var1 are there in " var0 " ?<CODESPLIT>SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE DIRECTOR != "var0" GROUP BY MOVIEalias0.DIRECTOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many users have reviewed var1 in var0 ?<CODESPLIT>SELECT CARS_DATAalias0.CYLINDERS , MAX( CARS_DATAalias0.ACCELERATE ) FROM CARS_DATA AS CARS_DATAalias0 GROUP BY CARS_DATAalias0.CYLINDERS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating of reviews written in year var0 ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = "var0" AND PAPERalias0.YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many people reviewed restaurant " var0 " in var2 ?<CODESPLIT>SELECT COUNT( DISTINCT USERalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.NAME = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND REVIEWalias0.YEAR = var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of states that has some colleges whose enrollment is smaller than the average enrollment ?<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List name of all amenities which var0 has , and sort the results in alphabetic order .<CODESPLIT>SELECT COUNT( DISTINCT USERalias0.NAME ) FROM USER AS USERalias0 WHERE USERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of businesses that are var0 .<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE CATEGORYalias0.CATEGORY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of cities that has " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT CONDUCTORalias0.NATIONALITY ) FROM CONDUCTOR AS CONDUCTORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of tips that are written by var0 .<CODESPLIT>SELECT ORCHESTRAalias0.ORCHESTRA FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.ORCHESTRA_ID NOT IN ( SELECT PERFORMANCEalias0.ORCHESTRA_ID FROM PERFORMANCE AS PERFORMANCEalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total checkins in " var0 " neighbourhood<CODESPLIT>SELECT SUM( CHECKINalias0.COUNT ) FROM CHECKIN AS CHECKINalias0 JOIN BUSINESS AS BUSINESSalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of reviews written in var0<CODESPLIT>SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.MONTH = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of tips written in each month<CODESPLIT>SELECT COUNT( DISTINCT TIPalias0.TEXT ) , TIPalias0.MONTH FROM TIP AS TIPalias0 GROUP BY TIPalias0.MONTH ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many neighbourhoods have a business with rating var1 in var0 ?<CODESPLIT>SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and name of the most expensive base price room .<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND CATEGORYalias1.CATEGORY_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which business has the most number of checkins<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CHECKIN AS CHECKINalias0 JOIN BUSINESS AS BUSINESSalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY BUSINESSalias0.NAME ORDER BY SUM( CHECKINalias0.COUNT ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which neighbourhood has the most number of businesses in var0<CODESPLIT>SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" GROUP BY NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME ORDER BY COUNT( DISTINCT BUSINESSalias0.NAME ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var2 var3 in var0 with at least var1 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = "var2" AND CATEGORYalias1.CATEGORY_NAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct amenities .<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.STATE = "var1" AND CATEGORYalias0.CATEGORY_NAME = "var2" AND CATEGORYalias1.CATEGORY_NAME = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors from var1 born after var0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND CATEGORYalias1.CATEGORY_NAME = "var2" AND NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = "var3" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var3 in " var0 " with at least var10 reviews and average rating above var1 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND BUSINESSalias0.RATING > var1 AND BUSINESSalias0.REVIEW_COUNT > var2 AND CATEGORYalias0.CATEGORY_NAME = "var3" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var2 var1 are there in var0 ?<CODESPLIT>SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = "var0" AND CATEGORYalias0.CATEGORY_NAME = "var1" AND CATEGORYalias1.CATEGORY_NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find users whose average review rating is below var0<CODESPLIT>SELECT USERalias0.NAME FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID GROUP BY USERalias0.NAME HAVING AVG( REVIEWalias0.RATING ) < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the business with the most number of reviews in var0<CODESPLIT>SELECT COUNT( * ) , FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the business which has the most number of categories<CODESPLIT>SELECT PEOPLEalias0.CELL_MOBILE_NUMBER FROM CANDIDATES AS CANDIDATESalias0 JOIN CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 ON CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID = CANDIDATESalias0.CANDIDATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the homepage of var0 .<CODESPLIT>SELECT JOURNALalias0.HOMEPAGE FROM JOURNAL AS JOURNALalias0 WHERE JOURNALalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the homepage of " H . V . Jagadish " .<CODESPLIT>SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = "var0" EXCEPT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the abstract of " var0 " .<CODESPLIT>SELECT PUBLICATIONalias0.ABSTRACT FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the year of " var0 "<CODESPLIT>SELECT PUBLICATIONalias0.YEAR FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many accounts have a savings balance above the average savings balance ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the homepage of the var0 conference .<CODESPLIT>SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ORDER BY COUNT( * ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the keywords .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM KEYWORD AS KEYWORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the organizations .<CODESPLIT>SELECT FNAME , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the organizations in " var0 " .<CODESPLIT>SELECT ORGANIZATIONalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.CONTINENT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of keywords in the papers of " var0 " .<CODESPLIT>SELECT ORGANIZATIONalias0.HOMEPAGE FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of references of " var0 " .<CODESPLIT>SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID NOT IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of citations of " var0 " .<CODESPLIT>SELECT OWNERSalias0.OWNER_ID , OWNERSalias0.ZIP_CODE FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID GROUP BY OWNERSalias0.OWNER_ID ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many transaction does each account have ? Show the number and account id .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.CITATION_NUM > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the emails and phone numbers of all the customers , ordered by email address and phone number .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have papers in var0 after var1 .<CODESPLIT>SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have papers in var0 conference in var1 .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have papers in var0 conference before var1 .<CODESPLIT>SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.JOB_ID , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT MAX( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the company that produced more than one phone model .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR < var1 AND PUBLICATIONalias0.YEAR > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names and publication dates of all catalogs that have catalog level number greater than var0 .<CODESPLIT>SELECT DOMAINalias0.NAME FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_JOURNAL AS DOMAIN_JOURNALalias0 ON DOMAINalias0.DID = DOMAIN_JOURNALalias0.DID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JID = DOMAIN_JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have papers in var0 .<CODESPLIT>SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE > ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of students in the descending order of age .<CODESPLIT>SELECT ORGANIZATIONalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the conferences , which have papers by " H . V . Jagadish " .<CODESPLIT>SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.INVOICE_DATE DESC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the journals , which have papers by " H . V . Jagadish " .<CODESPLIT>SELECT JOURNALalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country has at most var0 stadiums listed ?<CODESPLIT>SELECT DOMAINalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors of " var0 " .<CODESPLIT>SELECT DOCUMENT_STATUS_DESCRIPTION FROM REF_DOCUMENT_STATUS WHERE DOCUMENT_STATUS_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the conference , which published " var0 " .<CODESPLIT>SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE PUBLICATIONalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers on var0 conference .<CODESPLIT>SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers on var0 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers on var0 after var1 .<CODESPLIT>SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 WHERE SCIENTISTSalias0.SSN NOT IN ( SELECT SCIENTIST FROM ASSIGNEDTO ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the event with the most participants ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the policy types that are used by more than var0 customers .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND JOURNALalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " on var1 conference .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND CONFERENCEalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " after var1 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " on var1 after var2 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND JOURNALalias0.NAME = "var1" AND PUBLICATIONalias0.YEAR > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the date of enrollment of the course named " var0 " ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND CONFERENCEalias0.NAME = "var1" AND PUBLICATIONalias0.YEAR > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the area of the var0 conference .<CODESPLIT>SELECT DOMAINalias0.NAME FROM DOMAIN_CONFERENCE AS DOMAIN_CONFERENCEalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON DOMAIN_CONFERENCEalias0.CID = CONFERENCEalias0.CID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_CONFERENCEalias0.DID WHERE CONFERENCEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the different location codes for documents ?<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the keywords in var0 area .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_KEYWORD AS DOMAIN_KEYWORDalias0 ON DOMAINalias0.DID = DOMAIN_KEYWORDalias0.DID JOIN KEYWORD AS KEYWORDalias0 ON KEYWORDalias0.KID = DOMAIN_KEYWORDalias0.KID WHERE DOMAINalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers , which contain the keyword " var0 " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords of " var0 " .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which model has the most version(make) of cars ?<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords in var0 conference .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords in var0 .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords in the papers of " var0 " .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID WHERE ORGANIZATIONalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers of " H . V . Jagadish " containing keyword " var1 " .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.RECEIPT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers in var0 containing keyword " var1 " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location of the festival with the largest number of audience ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have papers containing keyword " var0 " .<CODESPLIT>SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION ASC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the organizations in var0 area .<CODESPLIT>SELECT ORGANIZATIONalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the organizations in var0 area located in " var1 " .<CODESPLIT>SELECT ORDER_ITEMSalias0.ORDER_ID , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the researchers in " var0 " .<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the researchers in var0 area in " var1 " .<CODESPLIT>SELECT AUTHORalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers in " var0 " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers after var1 in " var0 " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers in var0 conference in " var1 " .<CODESPLIT>SELECT CAMERA_LENSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN CAMERA_LENS AS CAMERA_LENSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID GROUP BY CAMERA_LENSalias0.ID ORDER BY COUNT( PHOTOSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers in var0 in " var1 " .<CODESPLIT>SELECT BANKalias0.BNAME , SUM( LOANalias0.AMOUNT ) FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID GROUP BY BANKalias0.BNAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the papers in var0 after var2 in " var1 " .<CODESPLIT>SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT ENDOWMENTalias0.SCHOOL_ID FROM ENDOWMENT AS ENDOWMENTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 area with more than var1 citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = "var0" AND PUBLICATIONalias0.CITATION_NUM > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 with more than var1 citations .<CODESPLIT>SELECT AVG( BRIDGEalias0.LENGTH_FEET ) FROM BRIDGE AS BRIDGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 conference with more than var1 citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.CITATION_NUM > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper by " H . V . Jagadish " with more than var1 citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" AND PUBLICATIONalias0.CITATION_NUM > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the region name with at least two storms .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND JOURNALalias0.NAME = "var1" AND PUBLICATIONalias0.CITATION_NUM > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers by " H . V . Jagadish " on var1 conference with more than var2 citations .<CODESPLIT>SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID NOT IN ( SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var00 with more than var0 citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.CITATION_NUM > var0 AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var10 in var0 area with more than var1 citations .<CODESPLIT>SELECT COURSEalias0.CRS_DESCRIPTION , STUDENTalias0.STU_FNAME , STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var10 in var0 with more than var1 citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.CITATION_NUM > var1 AND PUBLICATIONalias0.YEAR > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var10 in var0 conference with more than var1 citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.CITATION_NUM > var1 AND PUBLICATIONalias0.YEAR > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of conferences which have papers by " H . V . Jagadish " .<CODESPLIT>SELECT COUNT( DISTINCT CONFERENCEalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which dogs are owned by someone who lives in var0 ? List the owner's first name and the dog's name .<CODESPLIT>SELECT COUNT( DISTINCT JOURNALalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers written by " H . V . Jagadish " in each year .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) , PUBLICATIONalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" GROUP BY PUBLICATIONalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and membership level of the visitors whose membership level is higher than var0 , and sort by their age from old to young .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE PUBLICATIONalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of citations of " var0 " in each year .<CODESPLIT>SELECT PUBLICATIONalias0.YEAR , SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 WHERE TITLE = "var0" GROUP BY PUBLICATIONalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of citations of " var0 " before var1 .<CODESPLIT>SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.GENDER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers on var0 conference .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers on var0 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers after var0 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.YEAR > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers on var0 after var1 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the storm name and max speed which affected the greatest number of regions ?<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " on var1 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND JOURNALalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " on var1 conference .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND CONFERENCEalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " after var1 .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " on var1 after var2 .<CODESPLIT>SELECT DISTINCT TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 WHERE TRIPalias0.DURATION < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers by " H . V . Jagadish " on var1 conference after var2 .<CODESPLIT>SELECT DISTRICTalias0.CITY_POPULATION , DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_POPULATION BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of keywords .<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM KEYWORD AS KEYWORDalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of keywords in var0 area .<CODESPLIT>SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the planned delivery dates and actual delivery dates of bookings .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the keywords of " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE PUBLICATIONalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the keywords related to " H . V . Jagadish " .<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all the distinct institution types .<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the city with the most number of stores .<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of keywords in the papers of " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID WHERE ORGANIZATIONalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the papers of " H . V . Jagadish " containing keyword " var1 " .<CODESPLIT>SELECT AVG( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.FOUNDED < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the date of birth for all the guests with gender code " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the emails of customers who has filed a complaints of the product with the most complaints .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND KEYWORDalias0.KEYWORD = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average rank of winners in all matches .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of the papers containing keyword " var0 "<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the organizations .<CODESPLIT>SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the organizations in " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.CONTINENT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of organizations in var0 area .<CODESPLIT>SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of organizations in var0 area located in " var1 " .<CODESPLIT>SELECT PARTYalias0.LOCATION , PARTYalias0.PARTY_THEME FROM PARTY AS PARTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers in " var0 " .<CODESPLIT>SELECT PLAYERalias0.HS , PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the product name and total order quantity for each product .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers after var1 in " var0 " .<CODESPLIT>SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 ORDER BY TEACHERalias0.AGE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the dates on which more than one revisions were made .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers in var0 in " var1 " .<CODESPLIT>SELECT FILMalias0.STUDIO , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.STUDIO LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers in var0 after var2 in " var1 " .<CODESPLIT>SELECT DOMAINalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID WHERE AUTHORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the category of music festivals with result " var0 " ?<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of researchers in " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE ORGANIZATIONalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of researchers in var0 area in " var1 " .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have papers in var0 .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have papers in the var0 conference .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List today ' s journals<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the claim dates and settlement dates of all the settlements ?<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the cities in a decreasing order of each city's stations ' highest latitude .<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the citations of each paper in var0 .<CODESPLIT>SELECT PUBLICATIONalias0.CITATION_NUM FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of papers in var0 in var1 .<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many schools are in the basketball match ?<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of papers in var0 in each year .<CODESPLIT>SELECT PUBLICATIONalias0.YEAR , SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" GROUP BY PUBLICATIONalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers published in var0 in each year .<CODESPLIT>SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of all the papers in the var0 conference .<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the citations of each paper in the var0 conference .<CODESPLIT>SELECT PUBLICATIONalias0.CITATION_NUM FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the dates , places , and names of events in descending order of the attendance .<CODESPLIT>SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of papers in the var0 conference before var1 .<CODESPLIT>SELECT DORMalias0.DORM_NAME , DORMalias0.GENDER FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY < var1 OR DORMalias0.STUDENT_CAPACITY > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the total citations of papers in the var0 conference in each year .<CODESPLIT>SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers published in the var0 conference in each year .<CODESPLIT>SELECT PROBLEM_LOGalias0.LOG_ENTRY_DESCRIPTION , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have cooperated both with " H . V . Jagadish " and " var1 " .<CODESPLIT>SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID JOIN AUTHOR AS AUTHORalias2 ON WRITESalias2.AID = AUTHORalias2.AID WHERE AUTHORalias1.NAME = "var0" AND AUTHORalias2.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have cooperated with " H . V . Jagadish " after var1 .<CODESPLIT>SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers written by " H . V . Jagadish " and " var1 " .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of var1 in var0<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" AND PUBLICATIONalias0.YEAR > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers written by " H . V . Jagadish " and " var1 " on var2 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var1" AND AUTHORalias1.NAME = "var0" AND JOURNALalias0.NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers written by " H . V . Jagadish " and " var1 " on var2 after var3 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var1" AND AUTHORalias1.NAME = "var0" AND JOURNALalias0.NAME = "var2" AND PUBLICATIONalias0.YEAR > var3 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have cooperated with " H . V . Jagadish " .<CODESPLIT>SELECT PARTYalias0.MINISTER , PARTYalias0.PARTY_NAME FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.TOOK_OFFICE DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the papers written by " H . V . Jagadish " and " var1 " before var2 .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" AND PUBLICATIONalias0.YEAR < var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have cited the papers by " H . V . Jagadish " .<CODESPLIT>SELECT CLIMBERalias0.NAME , MOUNTAINalias0.NAME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id of the order which has the most items ?<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the height of the highest mountain in var0<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" AND PUBLICATIONalias0.YEAR < var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers written by " H . V . Jagadish " , " var2 " , and " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID JOIN AUTHOR AS AUTHORalias2 ON WRITESalias2.AID = AUTHORalias2.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" AND AUTHORalias2.NAME = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have cooperated with " H . V . Jagadish " .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have cited the papers by " H . V . Jagadish " .<CODESPLIT>SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CITE AS CITEalias0 ON PUBLICATIONalias0.PID = CITEalias0.CITING JOIN PUBLICATION AS PUBLICATIONalias1 ON PUBLICATIONalias1.PID = CITEalias0.CITED JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias1.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students for the cities where have more than one student .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" AND PUBLICATIONalias0.CITATION_NUM > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which staff have contacted which engineers ? List the staff name and the engineer first name and last name .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = "var0" GROUP BY AUTHORalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actors who played in the movie " var0 "<CODESPLIT>SELECT CONFERENCEalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE KEYWORDalias0.KEYWORD = "var0" GROUP BY CONFERENCEalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the journal that has the most number of papers containing keyword " var0 " .<CODESPLIT>SELECT JOURNALalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE KEYWORDalias0.KEYWORD = "var0" GROUP BY JOURNALalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keyword , which have been contained by the most number of papers in var0 conference .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" GROUP BY KEYWORDalias0.KEYWORD ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name , open date , and organizer for all churches .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" GROUP BY KEYWORDalias0.KEYWORD ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of followers for the users who do not have any tweet .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" GROUP BY KEYWORDalias0.KEYWORD ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author in the " var0 " whose papers have the most total citations .<CODESPLIT>SELECT AUTHORalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = "var0" GROUP BY AUTHORalias0.NAME ORDER BY SUM( PUBLICATIONalias0.CITATION_NUM ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author in the " var1 " whose papers in var0 area have the most total citations .<CODESPLIT>SELECT SECTIONalias0.BUILDING , SECTIONalias0.ROOM_NUMBER , SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM COURSE AS COURSEalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPT_NAME = "var0" ORDER BY COURSEalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have an active value of var0 ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var0" AND AUTHORalias1.NAME = "var1" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the conferences , which have more than var1 papers by " H . V . Jagadish " .<CODESPLIT>SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" GROUP BY CONFERENCEalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What's the name of the course with most number of enrollments ?<CODESPLIT>SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" GROUP BY CONFERENCEalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which model has the most version(make) of cars ?<CODESPLIT>SELECT JOURNALalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" GROUP BY JOURNALalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average latitude and longitude of the starting points of all trips ?<CODESPLIT>SELECT JOURNALalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" GROUP BY JOURNALalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper with the most citations .<CODESPLIT>SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DAYS = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 area with the most citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = "var0" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 with the most citations .<CODESPLIT>SELECT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper in var0 conference with the most citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper by " H . V . Jagadish " with the most citations .<CODESPLIT>SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 INTERSECT SELECT MOUNTAINalias1.COUNTRY FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.HEIGHT < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all players who have a crossing score higher than var0 and prefer their var1 foot .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE YEAR > var0 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of pilots that do not have any record .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many states have major rivers<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var1 in var0 conference with the most citations .<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" AND PUBLICATIONalias0.YEAR > var1 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have more than var1 papers in var0 .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = "var0" GROUP BY AUTHORalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have the most number of papers in var0 .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = "var0" GROUP BY AUTHORalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have more than var1 papers containing keyword " var0 " .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = "var0" GROUP BY AUTHORalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the conferences , which have more than var1 papers containing keyword " var0 " .<CODESPLIT>SELECT JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 ORDER BY JOURNALISTalias0.YEARS_WORKING DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the creation year , name and budget of each department .<CODESPLIT>SELECT JOURNALalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE KEYWORDalias0.KEYWORD = "var0" GROUP BY JOURNALalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords , which have been contained by more than var1 papers in var0 conference .<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" GROUP BY KEYWORDalias0.KEYWORD HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keywords , which have been contained by more than var1 papers in var0 .<CODESPLIT>SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS > ( SELECT AVG( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When did var0 publish ?<CODESPLIT>SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" GROUP BY KEYWORDalias0.KEYWORD HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the authors who have more than var1 papers in the var0 conference .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" GROUP BY AUTHORalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author who has the most number of papers in the var0 conference .<CODESPLIT>SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = "var0" GROUP BY AUTHORalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author in the " var0 " whose papers have more than var1 total citations .<CODESPLIT>SELECT AUTHORalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = "var0" GROUP BY AUTHORalias0.NAME HAVING SUM( PUBLICATIONalias0.CITATION_NUM ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author in the " var1 " in var0 area whose papers have more than var2 total citations .<CODESPLIT>SELECT AUTHORalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = "var0" AND ORGANIZATIONalias0.NAME = "var1" GROUP BY AUTHORalias0.NAME HAVING SUM( PUBLICATIONalias0.CITATION_NUM ) > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What year is the movie " var0 " from ?<CODESPLIT>SELECT MOVIEalias0.RELEASE_YEAR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the average price of each manufacturer's products , showing only the manufacturer's code .<CODESPLIT>SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the keyword , which have been contained by the most number of papers by " H . V . Jagadish " .<CODESPLIT>SELECT ACTORalias0.NATIONALITY FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the largest city in a state that borders var0<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors born in " var0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who are from var0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NATIONALITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what papers were published in var0 in var1 ?<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Where is the birth place of " Kevin Spacey "<CODESPLIT>SELECT DIRECTORalias0.BIRTH_CITY FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the nationality of " Kevin Spacey " ?<CODESPLIT>SELECT * FROM ITEM AS ITEMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find out the top var0 customers by total number of orders . List customers ' first and last name and the number of total orders .<CODESPLIT>SELECT MOVIEalias0.BUDGET FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " var0 " after var1<CODESPLIT>SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUID FROM ENROLLED_IN AS ENROLLED_INalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the director of the movie " var0 " ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actor who played " var0 " in the movie " var1 "<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = "var0" AND MOVIEalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the papers of " H . V . Jagadish " containing keyword " var1 " .<CODESPLIT>SELECT GENREalias0.GENRE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of wrestlers that have not been eliminated .<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.RELEASE_YEAR = var0 AND MOVIEalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of races that were held after var1 and the circuits were in the country of var0 ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM WRITTEN_BY AS WRITTEN_BYalias0 JOIN MOVIE AS MOVIEalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE WRITERalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies written and produced by " var0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID JOIN WRITTEN_BY AS WRITTEN_BYalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE PRODUCERalias0.NAME = "var0" AND WRITERalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the location with most number of train stations .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What was the budget of the movie var1 from var0 ?<CODESPLIT>SELECT CASTalias0.ROLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all var0 produced in year var1<CODESPLIT>SELECT MOVIEalias0.TITLE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID WHERE GENREalias0.GENRE = "var0" AND MOVIEalias0.RELEASE_YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors born in " var0 " after var1<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.BIRTH_YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies by directors born in " var0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.BIRTH_CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who were born in " var0 " in var1<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.BIRTH_YEAR = var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies about var0<CODESPLIT>SELECT MOVIEalias0.TITLE FROM TAGS AS TAGSalias0 JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID JOIN MOVIE AS MOVIEalias0 ON TAGSalias0.MSID = MOVIEalias0.MID WHERE KEYWORDalias0.KEYWORD = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which movies did " var0 " direct ?<CODESPLIT>SELECT SPORTNAME FROM SPORTSINFO WHERE ONSCHOLARSHIP = "var0" GROUP BY SPORTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all movies directed by " var1 " and featuring " var0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = "var0" AND DIRECTORalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the tv series created by " var0 " ?<CODESPLIT>SELECT AVG( MANUFACTURERalias0.NUM_OF_FACTORIES ) FROM MANUFACTURER AS MANUFACTURERalias0 WHERE MANUFACTURERalias0.NUM_OF_SHOPS > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many institutions are there ?<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = CASTalias0.MSID WHERE CASTalias0.ROLE = "var0" AND TV_SERIESalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the paper after var00 with more than var0 citations .<CODESPLIT>SELECT WRITERalias0.NAME FROM WRITTEN_BY AS WRITTEN_BYalias0 JOIN MOVIE AS MOVIEalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the series featuring " var0 " ?<CODESPLIT>SELECT REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME FROM REF_SHIPPING_AGENTS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias0.SHIPPING_AGENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of documents with document type code var0 or var1 .<CODESPLIT>SELECT DIRECTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the producers of all movies in which " var0 " is an actor<CODESPLIT>SELECT PRODUCERalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID WHERE ACTORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the director of the tv series " var1 " from var0 ?<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = DIRECTED_BYalias0.MSID WHERE TV_SERIESalias0.RELEASE_YEAR = var0 AND TV_SERIESalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of conferences which have papers by " H . V . Jagadish " .<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.GENDER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors from var1 born after var0<CODESPLIT>SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_YEAR > var0 AND ACTORalias0.NATIONALITY = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the var2 actors born in " var0 " after var1<CODESPLIT>SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.CAPITAL = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the var0 actors in the movie " var1 "<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_DETAILS ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the directors who are from var0<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NATIONALITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the actors who played in the movie " var0 "<CODESPLIT>SELECT DISTINCT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors from var0 who acted in " var1 " movies<CODESPLIT>SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_LEVEL_NUMBER = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which student's age is older than var0 and is majoring in var1 ? List each student's first and last name .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = "var0" AND CASTalias0.ROLE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the director of " var0 " from<CODESPLIT>SELECT DIRECTORalias0.BIRTH_CITY FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of routes for each source airport and the airport name .<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID WHERE CASTalias0.ROLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the genres of movies directed by " var0 "<CODESPLIT>SELECT ALLERGYTYPE , COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each country and airline name , how many routes are there ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN CAST AS CASTalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the major roles in the movie " var0 "<CODESPLIT>SELECT CASTalias0.ROLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the directors of movies about var0<CODESPLIT>SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN TAGS AS TAGSalias0 ON TAGSalias0.MSID = MOVIEalias0.MID JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID WHERE KEYWORDalias0.KEYWORD = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies in which " var0 " acted after var1 ?<CODESPLIT>SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 AND MAXOCCUPANCY > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of actors in the movie " var0 " ?<CODESPLIT>SELECT GAMEalias0.AWAY_TEAM , GAMEalias0.HOME_TEAM , GAMEalias0.SEASON FROM GAME AS GAMEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " direct ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies were produced in the year var0 ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies directed by " var0 " per year ?<CODESPLIT>SELECT SHOPalias0.DISTRICT , SHOPalias0.MANAGER_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " act in ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many actors were born in " var0 " after var1 ?<CODESPLIT>SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.BIRTH_YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " act in before var1 ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = "var0" AND MOVIEalias0.RELEASE_YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of movies that " var0 " acts in per year ?<CODESPLIT>SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_NAME != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies about var0 were produced in var1 ?<CODESPLIT>SELECT PEOPLEalias0.DATE_OF_BIRTH FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR = "var0" OR ENTREPRENEURalias0.INVESTOR = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies about var0 were released after var1 ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM TAGS AS TAGSalias0 JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID JOIN MOVIE AS MOVIEalias0 ON TAGSalias0.MSID = MOVIEalias0.MID WHERE KEYWORDalias0.KEYWORD = "var0" AND MOVIEalias0.RELEASE_YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " direct after var1 ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = "var0" AND MOVIEalias0.RELEASE_YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " direct before var1 ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = "var0" AND MOVIEalias0.RELEASE_YEAR < var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many movies did " var0 " direct before var2 and after var1 ?<CODESPLIT>SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID WHERE DIRECTORalias0.NAME = "var0" AND MOVIEalias0.RELEASE_YEAR < var1 AND MOVIEalias0.RELEASE_YEAR > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var2 actors were born in " var0 " after var1 ?<CODESPLIT>SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = "var0" AND ACTORalias0.BIRTH_YEAR > var1 AND ACTORalias0.GENDER = "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of actors from var0 who played in " var1 " movies<CODESPLIT>SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NATIONALITY = "var0" AND DIRECTORalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many actors from var0 have acted in " var1 "<CODESPLIT>SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NATIONALITY = "var0" AND MOVIEalias0.TITLE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the ids of all products that were ordered more than three times or supplied more than var1 .<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias0.NAME = "var0" AND ACTORalias1.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all actors who acted in the same movie as " var0 "<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias1.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What movies have the same director as the movie " var0 " ?<CODESPLIT>SELECT MOVIEalias1.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN DIRECTED_BY AS DIRECTED_BYalias1 ON DIRECTORalias0.DID = DIRECTED_BYalias1.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.MID = DIRECTED_BYalias1.MSID WHERE MOVIEalias0.TITLE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the movie which is classified in the most number of genres<CODESPLIT>SELECT MOVIEalias0.TITLE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID GROUP BY MOVIEalias0.TITLE ORDER BY COUNT( DISTINCT GENREalias0.GENRE ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which movie has the most number of actors from var0 ?<CODESPLIT>SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NATIONALITY = "var0" GROUP BY MOVIEalias0.TITLE ORDER BY COUNT( DISTINCT ACTORalias0.NAME ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was the last time var0 published a paper ?<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE DIRECTORalias0.NAME = "var0" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and budget of the latest movie by " var0 "<CODESPLIT>SELECT MOVIEalias0.BUDGET , MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = "var0" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the latest movie by " var0 "<CODESPLIT>SELECT MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = "var0" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of parties that do not have delegates in election ?<CODESPLIT>SELECT PRODUCERalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID GROUP BY PRODUCERalias0.NAME ORDER BY COUNT( DISTINCT DIRECTORalias0.NAME ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the latest movie which " var0 " acted in<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = "var0" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many var1 are there in var0 ?<CODESPLIT>SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the date of the performance with the highest number of attendees ?<CODESPLIT>SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many var1 are there in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.COUNTY = "var0" AND RESTAURANTalias0.NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is var0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the role code with the least employees .<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = "var2" AND RESTAURANTalias1.FOOD_TYPE = "var3" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is var1 in the var0 ?<CODESPLIT>SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are some good restaurants on var0 rd in var0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND LOCATIONalias0.STREET_NAME = "var1" AND RESTAURANTalias0.RATING > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can we find a restaurant in var0 ?<CODESPLIT>SELECT AIRCRAFTalias0.FLEET_SERIES FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID WHERE PILOTalias0.AGE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the shortest river<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.FOOD_TYPE = "var0" AND RESTAURANTalias0.RATING > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many places for var1 food are there in var0 ?<CODESPLIT>SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > SAVINGSalias0.BALANCE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which Advisor has most of students ? List advisor and the number of students .<CODESPLIT>SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.COUNTY = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the ids of the problems that are reported by the staff whose last name is var0 .<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many var1 are there in the var0 ?<CODESPLIT>SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = "var0" AND RESTAURANTalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of courses that have either var0 credits or var1 credit but var2 hours .<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.RATING > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is a good restaurant on var1 in var0 for var2 food ?<CODESPLIT>SELECT MAX( POSTSEASONalias0.WINS ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can i eat var1 food in the var0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me some restaurants on var0 rd in var0 ?<CODESPLIT>SELECT DEPT_NAME , MIN( INSTRUCTORalias0.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where is the best restaurant in the var0 for var1 food ?<CODESPLIT>SELECT USERalias0.NAME FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE BUSINESSalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers written by " H . V . Jagadish " and " var1 " before var2 .<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" AND RESTAURANTalias0.RATING > var2 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where are some restaurants good for var1 food in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM ITEM AS ITEMalias0 WHERE I_ID NOT IN ( SELECT I_ID FROM REVIEW AS REVIEWalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can i find a var1 in var0 ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = "var0" AND RESTAURANTalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>where can we find some restaurants in the var0 ?<CODESPLIT>SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTCODE NOT IN ( SELECT SOURCEAIRPORT FROM FLIGHTS AS FLIGHTSalias0 UNION SELECT DESTAIRPORT FROM FLIGHTS ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>give me a good restaurant in the bay area ?<CODESPLIT>SELECT DISTINCT JOURNALalias0.THEME FROM JOURNAL AS JOURNALalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many singers do we have ?<CODESPLIT>SELECT COUNT( * ) FROM SINGER AS SINGERalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name , country , age for all singers ordered by age from the oldest to the youngest .<CODESPLIT>SELECT SINGERalias0.AGE , SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.AGE DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average , minimum , and maximum age of all singers from var0 ?<CODESPLIT>SELECT SCHOOLalias0.IHSAA_FOOTBALL_CLASS , SCHOOLalias0.MASCOT , SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 JOIN BUDGET AS BUDGETalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE BUDGETED > var0 OR YEAR < var1 ORDER BY BUDGETalias0.TOTAL_BUDGET_PERCENT_INVESTED , BUDGETalias0.TOTAL_BUDGET_PERCENT_BUDGETED ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and the release year of the song by the youngest singer .<CODESPLIT>SELECT SINGERalias0.SONG_NAME , SINGERalias0.SONG_RELEASE_YEAR FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.AGE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all distinct countries where singers above age var0 are from ?<CODESPLIT>SELECT DISTINCT SINGERalias0.COUNTRY FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all countries and the number of singers in each country .<CODESPLIT>SELECT DISTINCT CITEalias0.CITEDPAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the author in the " var0 " whose papers have the most total citations .<CODESPLIT>SELECT SINGERalias0.SONG_NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > ( SELECT AVG( SINGERalias1.AGE ) FROM SINGER AS SINGERalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show location and name for all stadiums with a capacity between var0 and var1 .<CODESPLIT>SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RATING > ( SELECT AVG( REVIEWalias1.RATING ) FROM REVIEW AS REVIEWalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average and the maximum capacity of all stadiums ?<CODESPLIT>SELECT AVG( STADIUMalias0.CAPACITY ) , MAX( STADIUMalias0.CAPACITY ) FROM STADIUM AS STADIUMalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of buildings in descending order of building height .<CODESPLIT>SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 ORDER BY STADIUMalias0.AVERAGE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many concerts are there in year var0 or var1 ?<CODESPLIT>SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 WHERE CONCERTalias0.YEAR = var0 OR CONCERTalias0.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many var1 var0 papers have more than var2 citations ?<CODESPLIT>SELECT COUNT( * ) , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID GROUP BY CONCERTalias0.STADIUM_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the stadium name and capacity with most number of concerts in year var0 or after .<CODESPLIT>SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR >= var0 GROUP BY STADIUMalias0.STADIUM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and count of each product in all orders .<CODESPLIT>SELECT CONCERTalias0.YEAR FROM CONCERT AS CONCERTalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the stadium names without any concert .<CODESPLIT>SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.STADIUM_ID NOT IN ( SELECT CONCERTalias0.STADIUM_ID FROM CONCERT AS CONCERTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show countries where a singer above age var0 and a singer below var1 are from .<CODESPLIT>SELECT MATCHalias0.VENUE FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID JOIN MATCH AS MATCHalias0 ON MATCHalias0.MATCH_ID = HOSTING_CITYalias0.MATCH_ID WHERE CITYalias0.CITY = "var0" AND MATCHalias0.COMPETITION = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names for all stadiums except for stadiums having a concert in year var0 .<CODESPLIT>SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NATIONALITY = "var0" AND MOVIEalias0.TITLE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and theme for all concerts and the number of singers in each concert .<CODESPLIT>SELECT CONCERTalias0.CONCERT_NAME , CONCERTalias0.THEME , COUNT( SINGER_IN_CONCERTalias0.* ) FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN CONCERT AS CONCERTalias0 ON SINGER_IN_CONCERTalias0.CONCERT_ID = CONCERTalias0.CONCERT_ID GROUP BY CONCERTalias0.CONCERT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List singer names and number of concerts for each singer .<CODESPLIT>SELECT COUNT( SINGER_IN_CONCERTalias0.* ) , SINGERalias0.NAME FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN SINGER AS SINGERalias0 ON SINGERalias0.SINGER_ID = SINGER_IN_CONCERTalias0.SINGER_ID GROUP BY SINGERalias0.SINGER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many female students have milk or egg allergies ?<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN SINGER AS SINGERalias0 ON SINGERalias0.SINGER_ID = SINGER_IN_CONCERTalias0.SINGER_ID JOIN CONCERT AS CONCERTalias0 ON SINGER_IN_CONCERTalias0.CONCERT_ID = CONCERTalias0.CONCERT_ID WHERE CONCERTalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the name and nation of the singer who have a song having ' var0 ' in its name ?<CODESPLIT>SELECT SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SONG_NAME LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and location of the stadiums which some concerts happened in the years of both var0 and var1 .<CODESPLIT>SELECT STADIUMalias0.LOCATION , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR = var0 INTERSECT SELECT STADIUMalias1.LOCATION , STADIUMalias1.NAME FROM CONCERT AS CONCERTalias1 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.STADIUM_ID = CONCERTalias1.STADIUM_ID WHERE CONCERTalias1.YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of concerts happened in the stadium with the highest capacity .<CODESPLIT>SELECT DEPARTMENTalias0.NAME , DEPARTMENTalias0.NUM_EMPLOYEES FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID WHERE MANAGEMENTalias0.TEMPORARY_ACTING = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of pets whose weight is heavier than var0 .<CODESPLIT>SELECT COUNT( PETSalias0.* ) FROM PETS AS PETSalias0 WHERE PETSalias0.WEIGHT > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the weight of the youngest dog .<CODESPLIT>SELECT PETSalias0.WEIGHT FROM PETS AS PETSalias0 ORDER BY PETSalias0.PET_AGE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the maximum weight for each type of pet . List the maximum weight and pet type .<CODESPLIT>SELECT MAX( PETSalias0.WEIGHT ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find number of pets owned by students who are older than var0 .<CODESPLIT>SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID WHERE STUDENTalias0.AGE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the distinct leader names of colleges associated with members from country " var0 " .<CODESPLIT>SELECT COUNT( PETSalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var1" AND STUDENTalias0.SEX = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct type of pets .<CODESPLIT>SELECT COUNT( DISTINCT PETTYPE ) FROM PETS AS PETSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Select the names and the prices of all the products in the store .<CODESPLIT>SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var0" OR PETSalias0.PETTYPE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var1 are there in var0 var2 ?<CODESPLIT>SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var0" INTERSECT SELECT STUDENTalias1.FNAME FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias1 ON STUDENTalias1.STUID = HAS_PETalias1.STUID JOIN PETS AS PETSalias1 ON PETSalias1.PETID = HAS_PETalias1.PETID WHERE PETSalias1.PETTYPE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the major and age of students who do not have a var0 pet .<CODESPLIT>SELECT STUDENTalias0.AGE , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the city and state of the bank branch named var0 .<CODESPLIT>SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and age of students who have a var0 but do not have a var1 as a pet .<CODESPLIT>SELECT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var0" AND STUDENTalias0.STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias1 ON STUDENTalias1.STUID = HAS_PETalias1.STUID JOIN PETS AS PETSalias1 ON PETSalias1.PETID = HAS_PETalias1.PETID WHERE PETSalias1.PETTYPE = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the type and weight of the youngest pet .<CODESPLIT>SELECT PETSalias0.WEIGHT , PETTYPE FROM PETS AS PETSalias0 ORDER BY PETSalias0.PET_AGE LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and weight of all pets whose age is older than var0 .<CODESPLIT>SELECT PLAYERalias0.PNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.CNAME = ( SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT 1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average and maximum age for each type of pet .<CODESPLIT>SELECT AVG( PETSalias0.PET_AGE ) , MAX( PETSalias0.PET_AGE ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what state has the largest population<CODESPLIT>SELECT AVG( PETSalias0.WEIGHT ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and age of students who have a pet .<CODESPLIT>SELECT DISTINCT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of products that are in at least two events .<CODESPLIT>SELECT HAS_PETalias0.PETID FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID WHERE STUDENTalias0.LNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of pets for each student who has any pet and student id .<CODESPLIT>SELECT COUNT( * ) , STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID GROUP BY STUDENTalias0.STUID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different roles are there in the club " var0 " ?<CODESPLIT>SELECT STUDENTalias0.FNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID GROUP BY STUDENTalias0.STUID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the student who has a var1 that is age var0 .<CODESPLIT>SELECT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = "var1" AND PETSalias0.PET_AGE = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age of students who do not have any pet .<CODESPLIT>SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many continents are there ?<CODESPLIT>SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries does each continent have ? List the continent id , continent name and the number of countries .<CODESPLIT>SELECT CONTINENTSalias0.CONTID , CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID GROUP BY CONTINENTSalias0.CONTID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries are listed ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTRIES AS COUNTRIESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many models does each car maker produce ? List maker full name , id and the number .<CODESPLIT>SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID , COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which model of the car has the minimum horsepower ?<CODESPLIT>SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONS_LOTSalias0.LOT_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID GROUP BY TRANSACTIONS_LOTSalias0.LOT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the model of the car whose weight is below the average weight .<CODESPLIT>SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the makers that produced some cars in the year of var0 ?<CODESPLIT>SELECT DISTINCT CAR_MAKERSalias0.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the make and production time of the cars that were produced in the earliest year ?<CODESPLIT>SELECT CARS_DATAalias0.YEAR , CAR_NAMESalias0.MAKE FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR = ( SELECT MIN( CARS_DATAalias1.YEAR ) FROM CARS_DATA AS CARS_DATAalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of conductors in ascending order of age .<CODESPLIT>SELECT DISTINCT MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many car makers are there in each continents ? List the continent name and the count .<CODESPLIT>SELECT CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CONTINENTSalias0.CONTINENT ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which of the countries has the most car makers ? List the country name .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYNAME FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CAR_MAKERSalias0.COUNTRY ORDER BY COUNT ( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many car models are produced by each maker ? List the count and the maker full name .<CODESPLIT>SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID , COUNT ( * ) FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all var0 star var1 var2<CODESPLIT>SELECT CARS_DATAalias0.ACCELERATE FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MAKE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many car makers are there in var0 ?<CODESPLIT>SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = "var0" ORDER BY INSTRUCTORalias0.SALARY LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many car models are produced in the var0 ?<CODESPLIT>SELECT COUNT( * ) FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE COUNTRIESalias0.COUNTRYNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents can one grant have at most ? List the grant id and number .<CODESPLIT>SELECT AVG( CARS_DATAalias0.MPG ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the smallest weight of the car produced with 8 cylinders on 197var0 ?<CODESPLIT>SELECT CARS_DATAalias0.WEIGHT FROM CARS_DATA AS CARS_DATAalias0 WHERE CYLINDERS = var0 AND YEAR = var1 ORDER BY CARS_DATAalias0.WEIGHT ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in var0<CODESPLIT>SELECT MODEL_LISTalias0.MAKER , MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries having at least one car maker ? List name and id .<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of the cars with horsepower more than var0 ?<CODESPLIT>SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.HORSEPOWER > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average weight of cars each year ?<CODESPLIT>SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries in var0 have at least var1 car manufacturers ?<CODESPLIT>SELECT COUNT( * ) FROM DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 JOIN DEPARTMENT_STORE_CHAIN AS DEPARTMENT_STORE_CHAINalias0 ON DEPARTMENT_STORE_CHAINalias0.DEPT_STORE_CHAIN_ID = DEPARTMENT_STORESalias0.DEPT_STORE_CHAIN_ID WHERE DEPARTMENT_STORE_CHAINalias0.DEPT_STORE_CHAIN_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum horsepower and the make of the car models with var0 cylinders ?<CODESPLIT>SELECT CARS_DATAalias0.HORSEPOWER , CAR_NAMESalias0.MAKE FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS = var0 ORDER BY CARS_DATAalias0.HORSEPOWER DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which model saves the most gasoline ? That is to say , have the maximum miles per gallon .<CODESPLIT>SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of people that are not entrepreneurs .<CODESPLIT>SELECT AVG( CARS_DATAalias0.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average edispl of the cars of model var0 ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_ID ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum accelerate for different number of cylinders ?<CODESPLIT>SELECT COUNT( * ) FROM ( SELECT COUNT( * ) , COUNTRIESalias0.COUNTRYID FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all payment method codes and the number of orders for each code .<CODESPLIT>SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 GROUP BY MODEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the program which most number of students are enrolled in . List both the id and the summary .<CODESPLIT>SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many cars were produced in var0 ?<CODESPLIT>SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR = var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many car models were produced by the maker with full name var0 ?<CODESPLIT>SELECT COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID WHERE CAR_MAKERSalias0.FULLNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which makers designed more than var0 car models ? List full name and the id .<CODESPLIT>SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which distinctive models are produced by maker with the full name var0 or weighing more than var1 ?<CODESPLIT>SELECT DISTINCT MODEL_LISTalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.WEIGHT > var1 OR CAR_MAKERSalias0.FULLNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>In which years cars were produced weighing no less than var0 and no more than var1 ?<CODESPLIT>SELECT DISTINCT CARS_DATAalias0.YEAR FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.WEIGHT < var1 AND CARS_DATAalias0.WEIGHT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are characteristic names used at least twice across all products ?<CODESPLIT>SELECT CARS_DATAalias0.HORSEPOWER FROM CARS_DATA AS CARS_DATAalias0 ORDER BY CARS_DATAalias0.ACCELERATE DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For model var0 , how many cylinders does the car with the least accelerate have ?<CODESPLIT>SELECT DISTINCT INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cars have a larger accelerate than the car with the largest horsepower ?<CODESPLIT>SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE DEPARTMENTalias0.NAME = "var0" OR DEPARTMENTalias0.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many countries has more than var0 car makers ?<CODESPLIT>SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE EMPLOYEEalias0.EMP_LNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For the cars with var0 cylinders , which model has the largest horsepower ?<CODESPLIT>SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Among the cars with more than lowest horsepower , which ones do not have more than var0 cylinders ? List the car makeid and make name .<CODESPLIT>SELECT CAR_NAMESalias0.MAKE , CAR_NAMESalias0.MAKEID FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS <= var0 AND CARS_DATAalias0.HORSEPOWER > ( SELECT MIN( CARS_DATAalias1.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum miles per gallon of the car with var0 cylinders or produced before 19var00 ?<CODESPLIT>SELECT CARS_DATAalias0.MPG FROM CARS_DATA AS CARS_DATAalias0 WHERE CYLINDERS = var0 OR YEAR < var1 ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the states where at least var0 heads were born ?<CODESPLIT>SELECT DISTINCT MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID WHERE CARS_DATAalias0.WEIGHT < var0 AND CAR_MAKERSalias0.FULLNAME != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name of the countries where there is not a single car maker ?<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which are the car makers which produce at least var0 models and more than var1 car makes ? List the id and the maker .<CODESPLIT>SELECT CAR_MAKERSalias0.ID , CAR_MAKERSalias0.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) >= var0 INTERSECT SELECT CAR_MAKERSalias1.ID , CAR_MAKERSalias1.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias1 JOIN MODEL_LIST AS MODEL_LISTalias1 ON MODEL_LISTalias1.MAKER = CAR_MAKERSalias1.ID JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias1.MODEL = CAR_NAMESalias0.MODEL GROUP BY CAR_MAKERSalias1.ID HAVING COUNT( * ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and names of the countries which have more than var0 car makers or produce the ' var1 ' model ?<CODESPLIT>SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) > var0 UNION SELECT COUNTRIESalias1.COUNTRYID , COUNTRIESalias1.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias1 JOIN CAR_MAKERS AS CAR_MAKERSalias1 ON COUNTRIESalias1.COUNTRYID = CAR_MAKERSalias1.COUNTRY JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias1.ID WHERE MODEL_LISTalias0.MODEL = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country does Airline " var0 " belong to ?<CODESPLIT>SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating star for each reviewer ?<CODESPLIT>SELECT AIRLINESalias0.ABBREVIATION FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>order all gas station locations by the opening year .<CODESPLIT>SELECT AIRLINE , AIRLINESalias0.ABBREVIATION FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the airport code and name in the city of var0 .<CODESPLIT>SELECT AIRPORTCODE , AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airlines do we have ?<CODESPLIT>SELECT COUNT( * ) FROM AIRLINES AS AIRLINESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airports do we have ?<CODESPLIT>SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the minimum and maximum crime rate of counties ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which airline has abbreviation ' var0 ' ?<CODESPLIT>SELECT AIRLINE FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.ABBREVIATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many airlines are from var0 ?<CODESPLIT>SELECT COUNT( * ) FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city and country is the var0 airport at ?<CODESPLIT>SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTNAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the airport name for airport ' var0 ' ?<CODESPLIT>SELECT GAS_STATIONalias0.MANAGER_NAME FROM GAS_STATION AS GAS_STATIONalias0 WHERE OPEN_YEAR > var0 GROUP BY MANAGER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average credit score of the customers who do not have any loan .<CODESPLIT>SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights depart from ' var0 ' ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 WHERE SOURCEAIRPORT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights have destination var0 ?<CODESPLIT>SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the rank , company names , market values of the companies in the banking industry order by their sales and profits in billion .<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights arriving in var0 city ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many flights depart from City ' var1 ' and have destination City ' var0 ' ?<CODESPLIT>SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY CITIZENSHIP ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many apartment bookings are there in total ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many ' var0 ' flights go to Airport ' var1 ' ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = "var0" AND FLIGHTSalias0.DESTAIRPORT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many ' var0 ' flights depart from Airport ' var1 ' ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = "var0" AND FLIGHTSalias0.SOURCEAIRPORT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many var1 flights go to City ' var0 ' ?<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = "var1" AND AIRPORTSalias0.CITY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which city has most number of arriving flights ?<CODESPLIT>SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = "var1" AND AUTHORalias1.NAME = "var0" AND JOURNALalias0.NAME = "var2" AND PUBLICATIONalias0.YEAR > var3 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of followers for each user .<CODESPLIT>SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.CITY ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the code of airport that has the highest number of flights ?<CODESPLIT>SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the code of airport that has fewest number of flights ?<CODESPLIT>SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which airline has most number of flights ?<CODESPLIT>SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN PEOPLE_ADDRESSES AS PEOPLE_ADDRESSESalias0 ON PEOPLE_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = PEOPLE_ADDRESSESalias0.PERSON_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and market share of the browser var0 ?<CODESPLIT>SELECT AIRLINESalias0.ABBREVIATION , AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all game names played by var1 var0<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are airlines that have flights arriving at airport ' var0 ' ?<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.DESTAIRPORT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the role of the employee named var0 ?<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = "var0" INTERSECT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all airlines that have flights from airport ' var0 ' but not from ' var1 ' .<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = "var0" EXCEPT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all airlines that have at least var0 flights .<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE HAVING COUNT( FLIGHTSalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all airlines that have fewer than var0 flights .<CODESPLIT>SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE HAVING COUNT( FLIGHTSalias0.* ) < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are flight numbers of Airline " var0 " ?<CODESPLIT>SELECT COUNT( * ) , COURSESalias0.SUBJECT_ID , SUBJECTSalias0.SUBJECT_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID GROUP BY COURSESalias0.SUBJECT_ID ORDER BY COUNT( * ) ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of papers written by " H . V . Jagadish " and " var1 " before var2 .<CODESPLIT>SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE SOURCEAIRPORT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are flight numbers of flights arriving at Airport " var0 " ?<CODESPLIT>SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are flight numbers of flights departing from City " var0 " ?<CODESPLIT>SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.BUILT_YEAR , SHIPalias0.CLASS ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are flight numbers of flights arriving at City " var0 " ?<CODESPLIT>SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of flights landing in the city of var0 or var1 .<CODESPLIT>SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = "var0" OR AIRPORTSalias0.CITY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of airports which do not have any flight in and out .<CODESPLIT>SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTCODE NOT IN ( SELECT SOURCEAIRPORT FROM FLIGHTS AS FLIGHTSalias0 UNION SELECT DESTAIRPORT FROM FLIGHTS ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Sort employee names by their age in ascending order .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.AGE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of employees from each city ?<CODESPLIT>SELECT COUNT( * ) , EMPLOYEEalias0.CITY FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMPLOYEEalias0.CITY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating of songs produced by female artists ?<CODESPLIT>SELECT EMPLOYEEalias0.CITY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE AGE < var0 GROUP BY EMPLOYEEalias0.CITY HAVING COUNT( * ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of shops in each location .<CODESPLIT>SELECT COUNT( * ) , SHOPalias0.LOCATION FROM SHOP AS SHOPalias0 GROUP BY SHOPalias0.LOCATION ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the manager name and district of the shop whose number of products is the largest .<CODESPLIT>SELECT SHOPalias0.DISTRICT , SHOPalias0.MANAGER_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the minimum and maximum number of products of all stores .<CODESPLIT>SELECT MAX( SHOPalias0.NUMBER_PRODUCTS ) , MIN( SHOPalias0.NUMBER_PRODUCTS ) FROM SHOP AS SHOPalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name , location and district of all shops in descending order of number of products .<CODESPLIT>SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 EXCEPT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.MAIN_INDUSTRY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stores whose number products is more than the average number of products .<CODESPLIT>SELECT SHOPalias0.NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS > ( SELECT AVG( SHOPalias1.NUMBER_PRODUCTS ) FROM SHOP AS SHOPalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the name of employee who was awarded the most times in the evaluation .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION ASC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the employee who got the highest one time bonus .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN EVALUATION AS EVALUATIONalias0 ON EVALUATIONalias0.EMPLOYEE_ID = EMPLOYEEalias0.EMPLOYEE_ID ORDER BY EVALUATIONalias0.BONUS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all role codes , role names , and role descriptions .<CODESPLIT>SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.EMPLOYEE_ID NOT IN ( SELECT EVALUATIONalias0.EMPLOYEE_ID FROM EVALUATION AS EVALUATIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the shop that is hiring the largest number of employees ?<CODESPLIT>SELECT SHOPalias0.NAME FROM HIRING AS HIRINGalias0 JOIN SHOP AS SHOPalias0 ON SHOPalias0.SHOP_ID = HIRINGalias0.SHOP_ID GROUP BY HIRINGalias0.SHOP_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the shops that do not hire any employee .<CODESPLIT>SELECT SHOPalias0.NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT HIRINGalias0.SHOP_ID FROM HIRING AS HIRINGalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the cell phone number and email address for all students .<CODESPLIT>SELECT COUNT( * ) , SHOPalias0.NAME FROM HIRING AS HIRINGalias0 JOIN SHOP AS SHOPalias0 ON SHOPalias0.SHOP_ID = HIRINGalias0.SHOP_ID GROUP BY SHOPalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the united states<CODESPLIT>SELECT SUM( EVALUATIONalias0.BONUS ) FROM EVALUATION AS EVALUATIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me all the information about hiring .<CODESPLIT>SELECT * FROM HIRING AS HIRINGalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which district has both stores with less than var0 products and stores with more than var1 products ?<CODESPLIT>SELECT SHOPalias0.DISTRICT FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS < var0 INTERSECT SELECT SHOPalias1.DISTRICT FROM SHOP AS SHOPalias1 WHERE SHOPalias1.NUMBER_PRODUCTS > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different store locations are there ?<CODESPLIT>SELECT COUNT( DISTINCT SHOPalias0.LOCATION ) FROM SHOP AS SHOPalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List document IDs , document names , and document descriptions for all documents .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document name and template id for document var0ith description var0ith the letter ' var0 ' in it ?<CODESPLIT>SELECT ELECTIONalias0.COMMITTEE , ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document id , template id and description for document named " var0 " ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different templates do all document use ?<CODESPLIT>SELECT COUNT( DISTINCT DOCUMENTSalias0.TEMPLATE_ID ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many documents are using the template with type code ' var0 ' ?<CODESPLIT>SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.ACCOUNT_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all public schools and their locations .<CODESPLIT>SELECT COUNT( * ) , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.TEMPLATE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id and type code for the template used by the most documents ?<CODESPLIT>SELECT DOCUMENTSalias0.TEMPLATE_ID , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY DOCUMENTSalias0.TEMPLATE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all templates that are used by more than one document .<CODESPLIT>SELECT COUNT( PARTY_EVENTSalias0.* ) FROM PARTY_EVENTS AS PARTY_EVENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show ids for all templates not used by any document .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_ID FROM TEMPLATES AS TEMPLATESalias0 EXCEPT SELECT DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many templates do we have ?<CODESPLIT>SELECT COUNT( * ) FROM TEMPLATES AS TEMPLATESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show template ids , version numbers , and template type codes for all templates .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_ID , TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all distinct template type codes for all templates .<CODESPLIT>SELECT DISTINCT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids of templates with template type code var0 or var0T ?<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_ID FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = "var0" OR TEMPLATESalias0.TEMPLATE_TYPE_CODE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the themes of parties and the names of the party hosts .<CODESPLIT>SELECT COUNT( * ) FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the version number and template type code for the template with version number later than var0 ?<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.VERSION_NUMBER > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all template type codes and number of templates for each .<CODESPLIT>SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which template type code has most number of templates ?<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all template type codes with less than three templates .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE HAVING COUNT( * ) < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What the smallest version number and its template type code ?<CODESPLIT>SELECT MIN( TEMPLATESalias0.VERSION_NUMBER ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the template type code of the template used by document with the name " var0 " ?<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all document names using templates with template type code var0 .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.TOTAL > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of the professor who is teaching two courses with code var0 and var1 .<CODESPLIT>SELECT COUNT( * ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which template type code is used by most number of documents ?<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all template type codes that are not used by any document .<CODESPLIT>SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all director names who have a movie in both year var1 and var0 .<CODESPLIT>SELECT TEMPLATE_TYPE_CODE , TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the template type descriptions for template type code " var0 " .<CODESPLIT>SELECT TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the race class with most number of races .<CODESPLIT>SELECT TEMPLATE_TYPE_CODE FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_DESCRIPTION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct template type descriptions for the templates ever used by any document ?<CODESPLIT>SELECT DISTINCT DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the template ids with template type description " var0 " .<CODESPLIT>SELECT TEMPLATESalias0.TEMPLATE_ID FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE WHERE DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many paragraphs in total ?<CODESPLIT>SELECT COUNT( PARAGRAPHSalias0.* ) FROM PARAGRAPHS AS PARAGRAPHSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many paragraphs for the document with name ' var0 ' ?<CODESPLIT>SELECT COUNT( PARAGRAPHSalias0.* ) FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show paragraph details for paragraph with text ' var0 ' .<CODESPLIT>SELECT PARAGRAPHSalias0.OTHER_DETAILS FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all paragraph ids and texts for the document with name ' var0 ' .<CODESPLIT>SELECT PARAGRAPHSalias0.PARAGRAPH_ID , PARAGRAPHSalias0.PARAGRAPH_TEXT FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all paragraph texts for the document " var0 " .<CODESPLIT>SELECT GNAME , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ORDER BY GNAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all document ids and the number of paragraphs in each document . Order by document id .<CODESPLIT>SELECT COUNT( PARAGRAPHSalias0.* ) , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY DOCUMENT_ID ORDER BY PARAGRAPHSalias0.DOCUMENT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all document ids , names and the number of paragraphs in each document .<CODESPLIT>SELECT COUNT( PARAGRAPHSalias0.* ) , DOCUMENTSalias0.DOCUMENT_NAME , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID GROUP BY PARAGRAPHSalias0.DOCUMENT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all document ids with at least two paragraphs .<CODESPLIT>SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY PARAGRAPHSalias0.DOCUMENT_ID HAVING COUNT( PARAGRAPHSalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document id and name with greatest number of paragraphs ?<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID GROUP BY PARAGRAPHSalias0.DOCUMENT_ID ORDER BY COUNT( PARAGRAPHSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document id with least number of paragraphs ?<CODESPLIT>SELECT DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ORDER BY COUNT( * ) LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the document id with var0 to var1 paragraphs ?<CODESPLIT>SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY PARAGRAPHSalias0.DOCUMENT_ID HAVING COUNT( PARAGRAPHSalias0.* ) BETWEEN var0 AND var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the document id with paragraph text ' var0 ' and ' var1 ' .<CODESPLIT>SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = "var0" INTERSECT SELECT PARAGRAPHSalias1.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias1 WHERE PARAGRAPHSalias1.PARAGRAPH_TEXT = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many teachers are there ?<CODESPLIT>SELECT COUNT( * ) FROM TEACHER AS TEACHERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of teachers in ascending order of age .<CODESPLIT>SELECT COUNT( * ) , COURSESalias0.COURSE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN COURSES AS COURSESalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the age and hometown of teachers ?<CODESPLIT>SELECT FLIGHTalias0.ARRIVAL_DATE , FLIGHTalias0.DEPARTURE_DATE FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = "var1" AND FLIGHTalias0.ORIGIN = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of teachers whose hometown is not " var0t " .<CODESPLIT>SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.HOMETOWN != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of teachers aged either var0 or var1 ?<CODESPLIT>SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.AGE = var0 OR TEACHERalias0.AGE = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the codes of all courses that take place in room var0 .<CODESPLIT>SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 ORDER BY TEACHERalias0.AGE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What paper did var0 wrote in the 90s ?<CODESPLIT>SELECT COUNT( * ) , TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY TEACHERalias0.HOMETOWN ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the hosts of competitions whose theme is not " var0 " ?<CODESPLIT>SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY HOMETOWN ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the hometowns shared by at least two teachers .<CODESPLIT>SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of teachers and the courses they are arranged to teach .<CODESPLIT>SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE FROM COMPLAINTS AS COMPLAINTSalias0 GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE HAVING COUNT( COMPLAINTSalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name .<CODESPLIT>SELECT COURSEalias0.COURSE , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID ORDER BY TEACHERalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , independence year , and surface area of the country with the smallest population ?<CODESPLIT>SELECT TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID WHERE COURSEalias0.COURSE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of teachers and the number of courses they teach .<CODESPLIT>SELECT COUNT( COURSE_ARRANGEalias0.* ) , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID GROUP BY TEACHERalias0.NAME ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of card types .<CODESPLIT>SELECT TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID GROUP BY TEACHERalias0.NAME HAVING COUNT( COURSE_ARRANGEalias0.* ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of teachers who have not been arranged to teach courses .<CODESPLIT>SELECT PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID HAVING COUNT( PARTY_EVENTSalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many visitors below age var0 are there ?<CODESPLIT>SELECT COUNT( * ) FROM VISITOR WHERE AGE < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of the visitors whose membership level is higher than var0 , and order the results by the level from high to low .<CODESPLIT>SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age of the visitors whose membership level is not higher than var0 ?<CODESPLIT>SELECT AVG( AGE ) FROM VISITOR WHERE LEVEL_OF_MEMBERSHIP <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and membership level of the visitors whose membership level is higher than var0 , and sort by their age from old to young .<CODESPLIT>SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.DRIBBLING = ( SELECT MAX( PLAYER_ATTRIBUTESalias1.OVERALL_RATING ) FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and name of the museum that has the most staff members ?<CODESPLIT>SELECT MUSEUMalias0.MUSEUM_ID , MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 ORDER BY MUSEUMalias0.NUM_OF_STAFF DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of staff working for the museums that were open before var0 .<CODESPLIT>SELECT AVG( MUSEUMalias0.NUM_OF_STAFF ) FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.OPEN_YEAR < var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the opening year and staff number of the museum named var0 ?<CODESPLIT>SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id , name and nationality of the architect who built most mills ?<CODESPLIT>SELECT MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.NUM_OF_STAFF > ( SELECT MIN( MUSEUMalias1.NUM_OF_STAFF ) FROM MUSEUM AS MUSEUMalias1 WHERE MUSEUMalias1.OPEN_YEAR > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>get the details of employees who manage a department .<CODESPLIT>SELECT DERIVED_TABLEalias0.AGE , DERIVED_TABLEalias0.ID , DERIVED_TABLEalias0.NAME FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID GROUP BY DERIVED_TABLEalias0.ID HAVING COUNT( VISITalias0.* ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id , name and membership level of visitors who have spent the largest amount of money in total in all museum tickets ?<CODESPLIT>SELECT BUSINESSalias0.STATE FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and name of the museum visited most times ?<CODESPLIT>SELECT MUSEUMalias0.NAME , VISITalias0.MUSEUM_ID FROM MUSEUM AS MUSEUMalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.MUSEUM_ID = MUSEUMalias0.MUSEUM_ID GROUP BY VISITalias0.MUSEUM_ID ORDER BY COUNT( VISITalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the museum that had no visitor yet ?<CODESPLIT>SELECT MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.MUSEUM_ID NOT IN ( SELECT VISITalias0.MUSEUM_ID FROM VISIT AS VISITalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and age of the var0 who bought the most tickets at once .<CODESPLIT>SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = "var0" AND CONFERENCEalias0.NAME = "var1" AND PUBLICATIONalias0.YEAR > var2 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the average and maximum number of tickets bought in all visits ?<CODESPLIT>SELECT AVG( VISITalias0.NUM_OF_TICKET ) , MAX( VISITalias0.NUM_OF_TICKET ) FROM VISIT AS VISITalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total ticket expense of the visitors whose membership level is var0 ?<CODESPLIT>SELECT SUM( VISITalias0.TOTAL_SPENT ) FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.LEVEL_OF_MEMBERSHIP = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the var0 who visited both a museum opened before var1 and a museum opened after var3 ?<CODESPLIT>SELECT HOSTalias0.NAME FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE PARTYalias0.NUMBER_OF_HOSTS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of visitors who did not visit any museum opened after var0 .<CODESPLIT>SELECT COUNT( * ) FROM VISITOR WHERE ID NOT IN ( SELECT VISITalias0.VISITOR_ID FROM MUSEUM AS MUSEUMalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.MUSEUM_ID = MUSEUMalias0.MUSEUM_ID WHERE MUSEUMalias0.OPEN_YEAR > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the publication titles by var0 ?<CODESPLIT>SELECT COUNT( * ) FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.OPEN_YEAR < var1 OR MUSEUMalias0.OPEN_YEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of players .<CODESPLIT>SELECT REPRESENTATIVEalias0.NAME FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.REPRESENTATIVE_ID NOT IN ( SELECT ELECTIONalias0.REPRESENTATIVE_ID FROM ELECTION AS ELECTIONalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of matches .<CODESPLIT>SELECT COUNT( * ) FROM MATCHES AS MATCHESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many customers have email that contains " var0 " ?<CODESPLIT>SELECT PLAYERSalias0.BIRTH_DATE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 WHERE PLAYERSalias0.COUNTRY_CODE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the user who gave the highest rating .<CODESPLIT>SELECT AVG( MATCHESalias0.LOSER_AGE ) , AVG( MATCHESalias0.WINNER_AGE ) FROM MATCHES AS MATCHESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average rank of winners in all matches .<CODESPLIT>SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the highest rank of losers in all matches .<CODESPLIT>SELECT MIN( MATCHESalias0.LOSER_RANK ) FROM MATCHES AS MATCHESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of distinct country codes of all players .<CODESPLIT>SELECT COUNT( DISTINCT PLAYERSalias0.COUNTRY_CODE ) FROM PLAYERS AS PLAYERSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of distinct name of losers .<CODESPLIT>SELECT COUNT( DISTINCT MATCHESalias0.LOSER_NAME ) FROM MATCHES AS MATCHESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of tourney that has more than var0 matches .<CODESPLIT>SELECT MATCHESalias0.TOURNEY_NAME FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.TOURNEY_NAME HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all winners who played in both var0 and var1 .<CODESPLIT>SELECT DISTINCT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the number of all matches who played in years of var0 or var1 .<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM var0 AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID JOIN MUSEUM AS MUSEUMalias0 ON VISITalias0.MUSEUM_ID = MUSEUMalias0.MUSEUM_ID WHERE MUSEUMalias0.OPEN_YEAR < var1 INTERSECT SELECT DERIVED_TABLEalias1.NAME FROM var2 AS DERIVED_TABLEalias1 JOIN VISIT AS VISITalias1 ON VISITalias1.VISITOR_ID = DERIVED_TABLEalias1.ID JOIN MUSEUM AS MUSEUMalias1 ON VISITalias1.MUSEUM_ID = MUSEUMalias1.MUSEUM_ID WHERE MUSEUMalias1.OPEN_YEAR > var3 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the country code and first name of the players who won in both tourney var0 and var1 ?<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN MATCHES AS MATCHESalias0 ON PLAYERSalias0.PLAYER_ID = MATCHESalias0.WINNER_ID WHERE MATCHESalias0.TOURNEY_NAME = "var0" INTERSECT SELECT PLAYERSalias1.COUNTRY_CODE , PLAYERSalias1.FIRST_NAME FROM PLAYERS AS PLAYERSalias1 JOIN MATCHES AS MATCHESalias1 ON PLAYERSalias1.PLAYER_ID = MATCHESalias1.WINNER_ID WHERE MATCHESalias1.TOURNEY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and country code of the oldest player .<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first and last name of all players in the order of birth date .<CODESPLIT>SELECT PLAYERSalias0.FIRST_NAME , PLAYERSalias0.LAST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of courses provided in each semester and year .<CODESPLIT>SELECT PLAYERSalias0.FIRST_NAME , PLAYERSalias0.LAST_NAME FROM PLAYERS AS PLAYERSalias0 WHERE HAND = "var0" ORDER BY PLAYERSalias0.BIRTH_DATE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average price of wines that are not produced from var0 county .<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID ORDER BY RANKINGSalias0.TOURS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the year that has the most number of matches .<CODESPLIT>SELECT MATCHESalias0.YEAR FROM MATCHES AS MATCHESalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and rank points of the winner who won the most times .<CODESPLIT>SELECT STATEMENTSalias0.STATEMENT_DETAILS , STATEMENTSalias0.STATEMENT_ID FROM STATEMENTS AS STATEMENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of the organizations in " var0 " .<CODESPLIT>SELECT MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 WHERE TOURNEY_NAME = "var0" ORDER BY MATCHESalias0.WINNER_RANK_POINTS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the names of loser and winner who played in the match with greatest number of minutes .<CODESPLIT>SELECT PLAYERalias0.OCCUPATION FROM PLAYER AS PLAYERalias0 GROUP BY OCCUPATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average ranking for each player and their first name .<CODESPLIT>SELECT AVG( RANKINGSalias0.RANKING ) , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total ranking points for each player and their first name .<CODESPLIT>SELECT PLAYERSalias0.FIRST_NAME , SUM( RANKINGSalias0.RANKING_POINTS ) FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of players for each country .<CODESPLIT>SELECT COUNT( * ) , PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the code of the country where has the greatest number of players .<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY COUNTRY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the codes of countries that have more than var0 players .<CODESPLIT>SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total number of tours for each ranking date .<CODESPLIT>SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the date of enrollment of the course named " var0 " ?<CODESPLIT>SELECT COUNT( * ) , MATCHESalias0.YEAR FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name and rank of the var0 youngest winners across all matches .<CODESPLIT>SELECT DISTINCT MATCHESalias0.WINNER_NAME , MATCHESalias0.WINNER_RANK FROM MATCHES AS MATCHESalias0 ORDER BY MATCHESalias0.WINNER_AGE LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different winners both participated in the var0 and were left handed ?<CODESPLIT>SELECT COUNT( DISTINCT MATCHESalias0.WINNER_NAME ) FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.TOURNEY_NAME = "var0" AND MATCHESalias0.WINNER_HAND = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name , country code and birth date of the winner who has the highest rank points in all matches .<CODESPLIT>SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_DATE < "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of players for each hand type .<CODESPLIT>SELECT COUNT( * ) , PLAYERSalias0.HAND FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.HAND ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many ships ended up being ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) FROM SHIP AS SHIPalias0 WHERE SHIPalias0.DISPOSITION_OF_SHIP = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and tonnage ordered by in descending alphaetical order for the names .<CODESPLIT>SELECT SHIPalias0.NAME , SHIPalias0.TONNAGE FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.NAME DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name , date and result of each battle .<CODESPLIT>SELECT BATTLEalias0.DATE , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is maximum and minimum death toll caused each time ?<CODESPLIT>SELECT MAX( DEATHalias0.KILLED ) , MIN( DEATHalias0.KILLED ) FROM DEATH AS DEATHalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average number of injuries caused each time ?<CODESPLIT>SELECT FLIGHTalias0.DESTINATION , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PRICE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Whavar0 are var0he deavar0h and injury sivar0uavar0ions caused by var0he ship wivar0h var0onnage ' var0 ' ?<CODESPLIT>SELECT COUNT( * ) FROM OTHER_AVAILABLE_FEATURES AS OTHER_AVAILABLE_FEATURESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name and results of the battles when the bulgarian commander is not ' var0 '<CODESPLIT>SELECT BATTLEalias0.NAME , BATTLEalias0.RESULT FROM BATTLE AS BATTLEalias0 WHERE BATTLEalias0.BULGARIAN_COMMANDER != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of technicians whose team is not " var0 " .<CODESPLIT>SELECT DISTINCT BATTLEalias0.ID , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID WHERE SHIPalias0.SHIP_TYPE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the ids and names of the battles that led to more than var0 people killed in total .<CODESPLIT>SELECT BATTLEalias0.ID , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID JOIN DEATH AS DEATHalias0 ON SHIPalias0.ID = DEATHalias0.CAUSED_BY_SHIP_ID GROUP BY BATTLEalias0.ID HAVING SUM( DEATHalias0.KILLED ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the ship id and name that caused most total injuries ?<CODESPLIT>SELECT SHIPalias0.ID , SHIPalias0.NAME FROM DEATH AS DEATHalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.ID = DEATHalias0.CAUSED_BY_SHIP_ID GROUP BY SHIPalias0.ID ORDER BY COUNT( DEATHalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct battle names which are between bulgarian commander ' var0 ' and latin commander ' var1 ' ?<CODESPLIT>SELECT BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 WHERE BATTLEalias0.BULGARIAN_COMMANDER = "var0" AND BATTLEalias0.LATIN_COMMANDER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different results are there for the battles ?<CODESPLIT>SELECT COUNT( DISTINCT BATTLEalias0.RESULT ) FROM BATTLE AS BATTLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many battles did not lose any ship with tonnage ' var0 ' ?<CODESPLIT>SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY ORIGIN ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name and date the battle that has lost the ship named ' var0 ' and the ship named ' var1 '<CODESPLIT>SELECT BATTLEalias0.DATE , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID WHERE SHIPalias0.NAME = "var0" INTERSECT SELECT BATTLEalias1.DATE , BATTLEalias1.NAME FROM BATTLE AS BATTLEalias1 JOIN SHIP AS SHIPalias1 ON SHIPalias1.LOST_IN_BATTLE = BATTLEalias1.ID WHERE SHIPalias1.NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names , results and bulgarian commanders of the battles with no ships lost in the ' var0 ' .<CODESPLIT>SELECT COUNT( DISTINCT ALBUMSalias0.LABEL ) FROM ALBUMS AS ALBUMSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the notes of the death events which has substring ' var0 ' ?<CODESPLIT>SELECT DEATHalias0.NOTE FROM DEATH AS DEATHalias0 WHERE DEATHalias0.NOTE LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are all the addresses including line 1 and line 2 ?<CODESPLIT>SELECT COUNT( DISTINCT MATCH_SEASONalias0.TEAM ) FROM MATCH_SEASON AS MATCH_SEASONalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the zip code of the address in the city var0 ?<CODESPLIT>SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which department offers the most number of degrees ? List department name and id .<CODESPLIT>SELECT DEGREE_PROGRAMSalias0.DEPARTMENT_ID , DEPARTMENTSalias0.DEPARTMENT_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON DEPARTMENTSalias0.DEPARTMENT_ID = DEGREE_PROGRAMSalias0.DEPARTMENT_ID GROUP BY DEGREE_PROGRAMSalias0.DEPARTMENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , latitude , and city of the station with the lowest latitude ?<CODESPLIT>SELECT COUNT( DISTINCT DEGREE_PROGRAMSalias0.DEPARTMENT_ID ) FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the physician who prescribed the highest dose ?<CODESPLIT>SELECT COUNT( DISTINCT DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME ) FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many degrees does the var0ing department offer ?<CODESPLIT>SELECT COUNT( * ) , POSTSEASONalias0.YEAR FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = "var0" GROUP BY POSTSEASONalias0.YEAR ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and descriptions of all the sections ?<CODESPLIT>SELECT SECTIONSalias0.SECTION_DESCRIPTION , SECTIONSalias0.SECTION_NAME FROM SECTIONS AS SECTIONSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and id of courses having at most var0 sections ?<CODESPLIT>SELECT COURSESalias0.COURSE_ID , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN SECTIONS AS SECTIONSalias0 ON SECTIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_ID HAVING COUNT( * ) <= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the locations that have more than one railways .<CODESPLIT>SELECT SECTIONSalias0.SECTION_NAME FROM SECTIONS AS SECTIONSalias0 ORDER BY SECTIONSalias0.SECTION_NAME DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all information about the assessment notes sorted by date in ascending order .<CODESPLIT>SELECT SEMESTERSalias0.SEMESTER_ID , SEMESTERSalias0.SEMESTER_NAME FROM SEMESTERS AS SEMESTERSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.SEMESTER_ID = SEMESTERSalias0.SEMESTER_ID GROUP BY SEMESTERSalias0.SEMESTER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the department whose name has the substring the var0 ?<CODESPLIT>SELECT DEPARTMENTSalias0.DEPARTMENT_DESCRIPTION FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who are enrolled in var0 degree programs in one semester ? List the first name , middle name and last name and the id .<CODESPLIT>SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_SETTLED ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of keywords in var0 conference .<CODESPLIT>SELECT DISTINCT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the kind of program which most number of students are enrolled in ?<CODESPLIT>SELECT MEMBERalias0.NAME , PERFORMANCEalias0.LOCATION FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ORDER BY MEMBERalias0.NAME ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the program which most number of students are enrolled in . List both the id and the summary .<CODESPLIT>SELECT AVG( SHIPalias0.TONNAGE ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which student has enrolled for the most times in any program ? List the id , first name , middle name , last name , the number of enrollments and student id .<CODESPLIT>SELECT COUNT( * ) , STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME , STUDENTSalias0.STUDENT_ID , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which semesters do not have any student enrolled ? List the semester name .<CODESPLIT>SELECT SEMESTERSalias0.SEMESTER_NAME FROM SEMESTERS AS SEMESTERSalias0 WHERE SEMESTERSalias0.SEMESTER_ID NOT IN ( SELECT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the course names of the courses which ever have students enrolled in ?<CODESPLIT>SELECT COUNT( * ) FROM CONDUCTOR AS CONDUCTORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of all distinct products in alphabetical order .<CODESPLIT>SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_ENROLMENT_COURSES AS STUDENT_ENROLMENT_COURSESalias0 ON STUDENT_ENROLMENT_COURSESalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program .<CODESPLIT>SELECT STUDENTSalias0.LAST_NAME FROM STUDENTS AS STUDENTSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON STUDENTSalias0.CURRENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" EXCEPT SELECT DISTINCT STUDENTSalias1.LAST_NAME FROM STUDENTS AS STUDENTSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias1.STUDENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the date and id of the transcript with at least var0 course results .<CODESPLIT>SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID HAVING COUNT( * ) >= var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show white percentages of cities and the crime rates of counties they are in .<CODESPLIT>SELECT STUDENTSalias0.CELL_MOBILE_NUMBER FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FIRST_NAME = "var0" AND STUDENTSalias0.LAST_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the first student to register ? List the first name , middle name and last name .<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.DATE_FIRST_REGISTERED ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Who is the earliest graduate of the school ? List the first name , middle name and last name .<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.DATE_LEFT ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Whose permanent address is different from his or her current address ? List his or her first name .<CODESPLIT>SELECT CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NAME , CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER FROM CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 WHERE CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which address holds the most number of students currently ? List the address id and all lines .<CODESPLIT>SELECT DISTINCT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN RENTAL AS RENTALalias0 ON STAFFalias0.STAFF_ID = RENTALalias0.STAFF_ID JOIN CUSTOMER AS CUSTOMERalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID WHERE CUSTOMERalias0.FIRST_NAME = "var0" AND CUSTOMERalias0.LAST_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the id , line var0 , and line 2 of the address with the most students ?<CODESPLIT>SELECT DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY BUDGET_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>On average , when were the transcripts printed ?<CODESPLIT>SELECT AVG( TRANSCRIPTSalias0.TRANSCRIPT_DATE ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When is the first transcript released ? List the date and details .<CODESPLIT>SELECT TRANSCRIPTSalias0.OTHER_DETAILS , TRANSCRIPTSalias0.TRANSCRIPT_DATE FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ORDER BY TRANSCRIPTSalias0.TRANSCRIPT_DATE ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which project made the most number of outcomes ? List the project details and the project id .<CODESPLIT>SELECT COUNT( * ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the last transcript release date ?<CODESPLIT>SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ORDER BY TRANSCRIPTSalias0.TRANSCRIPT_DATE DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many times at most can a course enrollment result show in different transcripts ? Also show the course enrollment id .<CODESPLIT>SELECT COUNT( TRANSCRIPT_CONTENTSalias0.* ) , TRANSCRIPT_CONTENTSalias0.STUDENT_COURSE_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 GROUP BY STUDENT_COURSE_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the date of the transcript which shows the least number of results , also list the id .<CODESPLIT>SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE , TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 JOIN TRANSCRIPTS AS TRANSCRIPTSalias0 ON TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID = TRANSCRIPTSalias0.TRANSCRIPT_ID GROUP BY TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which of the countries has the most car makers ? List the country name .<CODESPLIT>SELECT DISTINCT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = "var0" INTERSECT SELECT DISTINCT STUDENT_ENROLMENTalias1.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias1 ON STUDENT_ENROLMENTalias1.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias1.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias1.DEGREE_SUMMARY_NAME = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different addresses do the students currently live ?<CODESPLIT>SELECT COUNT( DISTINCT STUDENTSalias0.CURRENT_ADDRESS_ID ) FROM STUDENTS AS STUDENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the student details in reversed lexicographical order .<CODESPLIT>SELECT STU_FNAME , STU_GPA FROM STUDENT AS STUDENTalias0 WHERE STU_GPA < ( SELECT AVG( STU_GPA ) FROM STUDENT AS STUDENTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total capacity of all dorms .<CODESPLIT>SELECT SECTIONSalias0.SECTION_DESCRIPTION FROM SECTIONS AS SECTIONSalias0 WHERE SECTIONSalias0.SECTION_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name of the students who permanently live in the country var0 or have the cell phone number var1 .<CODESPLIT>SELECT STUDENTSalias0.FIRST_NAME FROM STUDENTS AS STUDENTSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON STUDENTSalias0.PERMANENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.COUNTRY = "var0" UNION SELECT STUDENTSalias1.FIRST_NAME FROM STUDENTS AS STUDENTSalias1 WHERE STUDENTSalias1.CELL_MOBILE_NUMBER = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the title of all cartoons in alphabetical order .<CODESPLIT>SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.TITLE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all cartoon directed by " var0 " .<CODESPLIT>SELECT ARTWORKalias0.NAME FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID ORDER BY FESTIVAL_DETAILalias0.YEAR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many cartoons were written by " var0 " ?<CODESPLIT>SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_MAKE , ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ORDER BY ASSETSalias0.ASSET_DISPOSED_DATE ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>does var0 publish a lot ?<CODESPLIT>SELECT CARTOONalias0.DIRECTED_BY , CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.ORIGINAL_AIR_DATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the title of all cartoon directed by " var0 " or " var1 " .<CODESPLIT>SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = "var0" OR CARTOONalias0.DIRECTED_BY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which country has the most of TV Channels ? List the country and number of TV Channels it has .<CODESPLIT>SELECT COUNT( * ) , TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the number of different series names and contents in the TV Channel table .<CODESPLIT>SELECT LESSONSalias0.LESSON_ID FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = "var0" AND STAFFalias0.LAST_NAME = "var1" AND STAFFalias0.NICKNAME LIKE "var2" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the content of TV Channel with serial name " var0 " ?<CODESPLIT>SELECT TV_CHANNELalias0.CONTENT FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.SERIES_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the issue date of the volume with the minimum weeks on top ?<CODESPLIT>SELECT TV_CHANNELalias0.PACKAGE_OPTION FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.SERIES_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many TV Channel using language var0 ?<CODESPLIT>SELECT DEPARTMENTalias0.BUDGET , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the year that has the most number of matches .<CODESPLIT>SELECT COUNT( * ) , TV_CHANNELalias0.LANGUAGE FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY LANGUAGE ORDER BY COUNT( * ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each language and the number of TV Channels using it .<CODESPLIT>SELECT COUNT( * ) , TV_CHANNELalias0.LANGUAGE FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY TV_CHANNELalias0.LANGUAGE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the TV Channel that shows the cartoon " The Rise of the Blue Beetle ! " ? List the TV Channel's series name .<CODESPLIT>SELECT TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the lowest point in usa<CODESPLIT>SELECT CARTOONalias0.TITLE FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE TV_CHANNELalias0.SERIES_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the description of the claim status " var0 " ?<CODESPLIT>SELECT TV_SERIESalias0.EPISODE FROM TV_SERIES AS TV_SERIESalias0 ORDER BY TV_SERIESalias0.RATING ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List top var0 highest Rating TV series . List the TV series's Episode and Rating .<CODESPLIT>SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ALBUMalias0.TITLE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is minimum and maximum share of TV series ?<CODESPLIT>SELECT AVG( SURFACEAREA ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND SURFACEAREA > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the air date of TV series with Episode " var0 " ?<CODESPLIT>SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is Weekly Rank of TV series with Episode " var0 " ?<CODESPLIT>SELECT TV_SERIESalias0.WEEKLY_RANK FROM TV_SERIES AS TV_SERIESalias0 WHERE TV_SERIESalias0.EPISODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the TV Channel of TV series with Episode " var0 " ? List the TV Channel's series name .<CODESPLIT>SELECT TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.CHANNEL = TV_CHANNELalias0.ID WHERE TV_SERIESalias0.EPISODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the Episode of all TV series showed on TV Channel with series name " var0 " .<CODESPLIT>SELECT TV_SERIESalias0.EPISODE FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.CHANNEL = TV_CHANNELalias0.ID WHERE TV_CHANNELalias0.SERIES_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of cartoons directed by each of the listed directors .<CODESPLIT>SELECT CARTOONalias0.DIRECTED_BY , COUNT( CARTOONalias0.* ) FROM CARTOON AS CARTOONalias0 GROUP BY CARTOONalias0.DIRECTED_BY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the production code and channel of the most recently aired cartoon .<CODESPLIT>SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" AND PAPERalias0.YEAR < var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>For each country and airline name , how many routes are there ?<CODESPLIT>SELECT TV_CHANNELalias0.PACKAGE_OPTION , TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.HIGHT_DEFINITION_TV = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which countries ' tv channels are playing some cartoon written by var0 ?<CODESPLIT>SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which countries ' tv channels are not playing any cartoon written by var0 ?<CODESPLIT>SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT TV_CHANNELalias1.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias1.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which countries have more than two members ?<CODESPLIT>SELECT TV_CHANNELalias0.COUNTRY , TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.DIRECTED_BY = "var0" INTERSECT SELECT TV_CHANNELalias1.COUNTRY , TV_CHANNELalias1.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias1 ON TV_CHANNELalias1.ID = CARTOONalias1.CHANNEL WHERE CARTOONalias1.DIRECTED_BY = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the pixel aspect ratio and nation of the tv channels that do not use var0 .<CODESPLIT>SELECT TV_CHANNELalias0.COUNTRY , TV_CHANNELalias0.PIXEL_ASPECT_RATIO_PAR FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.LANGUAGE != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find id of the tv channels that from the countries where have more than two tv channels .<CODESPLIT>SELECT TV_CHANNELalias0.ID FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY TV_CHANNELalias0.COUNTRY HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the id of tv channels that do not play any cartoon directed by var0 .<CODESPLIT>SELECT CINEMAalias0.LOCATION , COUNT( * ) FROM CINEMA AS CINEMAalias0 GROUP BY CINEMAalias0.LOCATION ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct types of mills that are built by var0 or var1 architects ?<CODESPLIT>SELECT TV_CHANNELalias0.PACKAGE_OPTION FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.ID NOT IN ( SELECT CARTOONalias0.CHANNEL FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the city and the number of branches opened before var0 for each city .<CODESPLIT>SELECT COUNT( * ) FROM POKER_PLAYER AS POKER_PLAYERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which are the car makers which produce at least var0 models and more than var1 car makes ? List the id and the maker .<CODESPLIT>SELECT POKER_PLAYERalias0.EARNINGS FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the id and surname of the driver who participated the most number of races ?<CODESPLIT>SELECT POKER_PLAYERalias0.BEST_FINISH , POKER_PLAYERalias0.FINAL_TABLE_MADE FROM POKER_PLAYER AS POKER_PLAYERalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average earnings of poker players ?<CODESPLIT>SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the money rank of the poker player with the highest earnings ?<CODESPLIT>SELECT POKER_PLAYERalias0.MONEY_RANK FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the maximum number of final tables made among poker players with earnings less than var0 ?<CODESPLIT>SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of poker players ?<CODESPLIT>SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many employees do we have ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE POKER_PLAYERalias0.EARNINGS > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of poker players ordered by the final tables made in ascending order .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.FINAL_TABLE_MADE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the birth date of the poker player with the lowest earnings ?<CODESPLIT>SELECT PEOPLEalias0.BIRTH_DATE FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.EARNINGS ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which shop has happy hour most frequently ? List its id and number of happy hours .<CODESPLIT>SELECT POKER_PLAYERalias0.MONEY_RANK FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the students and their department names sorted by their total credits in ascending order .<CODESPLIT>SELECT AVG( POKER_PLAYERalias0.EARNINGS ) FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the id and address of the shops which have a happy hour in var0 ?<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are different nationalities of people and the corresponding number of people from each nation ?<CODESPLIT>SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum number of cities in all markets .<CODESPLIT>SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY NATIONALITY ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the nationalities that are shared by at least two people ?<CODESPLIT>SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names and birth dates of people in ascending alphabetical order of name .<CODESPLIT>SELECT PEOPLEalias0.BIRTH_DATE , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.NAME ASC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of people whose nationality is not " var0 " .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.NATIONALITY != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of people that are not poker players .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT POKER_PLAYERalias0.PEOPLE_ID FROM POKER_PLAYER AS POKER_PLAYERalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many distinct nationalities are there ?<CODESPLIT>SELECT COUNT( DISTINCT PEOPLEalias0.NATIONALITY ) FROM PEOPLE AS PEOPLEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many states are there ?<CODESPLIT>SELECT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 GROUP BY REIGN ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the contestant numbers and names , ordered by contestant name descending .<CODESPLIT>SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 ORDER BY CONTESTANTSalias0.CONTESTANT_NAME DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the vote ids , phone numbers and states of all votes .<CODESPLIT>SELECT CLUBNAME FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum values of area codes ?<CODESPLIT>SELECT MAX( AREA_CODE_STATEalias0.AREA_CODE ) , MIN( AREA_CODE_STATEalias0.AREA_CODE ) FROM AREA_CODE_STATE AS AREA_CODE_STATEalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which start station had the most trips starting from August ? Give me the name and id of the station .<CODESPLIT>SELECT MAX( VOTESalias0.CREATED ) FROM VOTES AS VOTESalias0 WHERE VOTESalias0.STATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many bookings do we have ?<CODESPLIT>SELECT CONTESTANTSalias0.CONTESTANT_NAME FROM CONTESTANTS AS CONTESTANTSalias0 WHERE CONTESTANTSalias0.CONTESTANT_NAME != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the distinct states and create time of all votes ?<CODESPLIT>SELECT DISTINCT VOTESalias0.CREATED , VOTESalias0.STATE FROM VOTES AS VOTESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of unique official languages spoken in the countries that are founded before var0 ?<CODESPLIT>SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER GROUP BY CONTESTANTSalias0.CONTESTANT_NUMBER HAVING COUNT( VOTESalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Of all the contestants who got voted , what is the contestant number and name of the contestant who got least votes ?<CODESPLIT>SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER GROUP BY CONTESTANTSalias0.CONTESTANT_NUMBER ORDER BY COUNT( VOTESalias0.* ) ASC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the number of votes from state ' var0 ' or ' var1 ' ?<CODESPLIT>SELECT AIRCRAFTalias0.FLEET_SERIES FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID WHERE PILOTalias0.AGE < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many contestants did not get voted ?<CODESPLIT>SELECT COUNT( * ) FROM CONTESTANTS AS CONTESTANTSalias0 WHERE CONTESTANTSalias0.CONTESTANT_NUMBER NOT IN ( SELECT VOTESalias0.CONTESTANT_NUMBER FROM VOTES AS VOTESalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What neighbourhood is restaurant " var0 " in ?<CODESPLIT>SELECT AREA_CODE_STATEalias0.AREA_CODE FROM AREA_CODE_STATE AS AREA_CODE_STATEalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.STATE = AREA_CODE_STATEalias0.STATE GROUP BY AREA_CODE_STATEalias0.AREA_CODE ORDER BY COUNT( VOTESalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the create dates , states , and phone numbers of the votes that were for the contestant named ' var0 ' ?<CODESPLIT>SELECT VOTESalias0.CREATED , VOTESalias0.PHONE_NUMBER , VOTESalias0.STATE FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER WHERE CONTESTANTSalias0.CONTESTANT_NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the lot details of lots associated with transactions whose share count is bigger than var0 and whose type code is " var1 " ?<CODESPLIT>SELECT AREA_CODE_STATEalias0.AREA_CODE FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER JOIN AREA_CODE_STATE AS AREA_CODE_STATEalias0 ON VOTESalias0.STATE = AREA_CODE_STATEalias0.STATE WHERE CONTESTANTSalias0.CONTESTANT_NAME = "var0" INTERSECT SELECT AREA_CODE_STATEalias1.AREA_CODE FROM CONTESTANTS AS CONTESTANTSalias1 JOIN VOTES AS VOTESalias1 ON VOTESalias1.CONTESTANT_NUMBER = CONTESTANTSalias1.CONTESTANT_NUMBER JOIN AREA_CODE_STATE AS AREA_CODE_STATEalias1 ON VOTESalias1.STATE = AREA_CODE_STATEalias1.STATE WHERE CONTESTANTSalias1.CONTESTANT_NAME = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the subject names .<CODESPLIT>SELECT CONTESTANTSalias0.CONTESTANT_NAME FROM CONTESTANTS AS CONTESTANTSalias0 WHERE CONTESTANTSalias0.CONTESTANT_NAME LIKE "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me the number of authors who have papers in var0 .<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE INDEPYEAR > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the order id , customer id for orders in var0 status , ordered by their order dates .<CODESPLIT>SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total surface area of the countries in the var0 region ?<CODESPLIT>SELECT SUM( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.REGION = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which continent is var0 in ?<CODESPLIT>SELECT COUNTRYalias0.CONTINENT FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which region is the city var0 located in ?<CODESPLIT>SELECT TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY HOW_TO_GET_THERE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which language is the most popular in var0 ?<CODESPLIT>SELECT AVG( COMPANYalias0.MARKET_VALUE ) , MAX( COMPANYalias0.MARKET_VALUE ) , MIN( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the population and life expectancies in var0 ?<CODESPLIT>SELECT COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the region and population of var0 ?<CODESPLIT>SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE DIRECTOR != "var0" GROUP BY MOVIEalias0.DIRECTOR ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>When was the school with the largest enrollment founded ?<CODESPLIT>SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.REGION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many candidates are there ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = "var0" ORDER BY LIFEEXPECTANCY LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total population and maximum GNP in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM GAME AS GAMEalias0 WHERE GAMEalias0.SEASON > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of card types .<CODESPLIT>SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND GOVERNMENTFORM = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total surface area of the continents var0 and var1 ?<CODESPLIT>SELECT SUM( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" OR COUNTRYalias0.CONTINENT = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the department that has the largest number of students enrolled ?<CODESPLIT>SELECT SUM( CITYalias0.POPULATION ) FROM CITY AS CITYalias0 WHERE CITYalias0.DISTRICT = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average GNP and total population in all nations whose government is US territory ?<CODESPLIT>SELECT AVG( COUNTRYalias0.GNP ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of customers whose name contains " var0 " .<CODESPLIT>SELECT COUNT( DISTINCT COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many type of governments are in var0 ?<CODESPLIT>SELECT COUNT( DISTINCT GOVERNMENTFORM ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of languages used in var0 ?<CODESPLIT>SELECT TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many official languages does var0 have ?<CODESPLIT>SELECT COUNT( COUNTRYLANGUAGEalias0.* ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = "var0" AND ISOFFICIAL = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states have a capital that is the highest point in the state<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.NAME ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all home cities except for those having a driver older than var0 .<CODESPLIT>SELECT COUNTRYalias0.CONTINENT FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.CONTINENT ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the total number of rooms of the apartments in the building with short name " var0 " .<CODESPLIT>SELECT COUNT( * ) FROM ( SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of nations speak both var0 and var1 ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of nations where both var0 and var2 are official languages ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = "var1" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = "var2" AND COUNTRYLANGUAGEalias0.LANGUAGE = "var0" AND COUNTRYLANGUAGEalias1.ISOFFICIAL = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average hours of all projects .<CODESPLIT>SELECT COUNT( DISTINCT COUNTRYalias0.CONTINENT ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the regions that use var0 or var1 ?<CODESPLIT>SELECT DISTINCT COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" OR COUNTRYLANGUAGEalias0.LANGUAGE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries where either var0 or var2 is the official language ?<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.* FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" AND ISOFFICIAL = "var1" UNION SELECT COUNTRYLANGUAGEalias1.* FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = "var2" AND ISOFFICIAL = "var3" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which language is the most popular on the var0n continent ?<CODESPLIT>SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT AVG( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which languages are spoken by only one country in republic governments ?<CODESPLIT>SELECT COUNT( * ) , DORMalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY > var0 GROUP BY DORMalias0.DORMID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the shortest river in var0<CODESPLIT>SELECT CITYalias0.NAME , CITYalias0.POPULATION FROM CITY AS CITYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYLANGUAGEalias0.COUNTRYCODE = CITYalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var0" ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name , population and expected life length of asian country with the largest area ?<CODESPLIT>SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = "var0" ORDER BY SURFACEAREA DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is average life expectancy in the countries where var0 is not the official language ?<CODESPLIT>SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = "var1" AND COUNTRYLANGUAGEalias0.LANGUAGE = "var0" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of people living in the nations that do not use var0 ?<CODESPLIT>SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the official language spoken in the country whose head of state is var0 ?<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = "var1" AND COUNTRYalias0.HEADOFSTATE = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first names of the faculty members who participate in var0 and var1 .<CODESPLIT>SELECT COUNT( DISTINCT COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = "var1" AND INDEPYEAR < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the countries that have greater surface area than any country in var0 ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE SURFACEAREA > ( SELECT MIN( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the var0n countries that have a population less than any country in var1 ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.POPULATION < ( SELECT MAX( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which var0n countries have a smaller population than that of any country in var1 ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.POPULATION < ( SELECT MIN( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which var0n countries have a population that is larger than any country in var1 ?<CODESPLIT>SELECT CMI_CROSS_REF_ID FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 EXCEPT SELECT CMI_CROSS_REF_ID FROM PARKING_FINES AS PARKING_FINESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the var0n countries which have a population larger than that of any country in var1 ?<CODESPLIT>SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 JOIN PROBLEMS AS PROBLEMSalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_NAME ORDER BY COUNT( PROBLEMSalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the country codes for countries that do not speak var0 ?<CODESPLIT>SELECT CONSTRUCTORID , COUNT( * ) FROM CONSTRUCTORSTANDINGS GROUP BY CONSTRUCTORID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the country codes of countries where people use languages other than var0 ?<CODESPLIT>SELECT DISTINCT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE COUNTRYLANGUAGEalias0.LANGUAGE != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the codes of the countries that do not speak var1 and whose government forms are not var0 ?<CODESPLIT>SELECT COUNTRYalias0.CODE FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM != "var0" EXCEPT SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE COUNTRYLANGUAGEalias0.LANGUAGE = "var1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which cities are in var0an countries where var2 is not the official language ?<CODESPLIT>SELECT DISTINCT CITYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE COUNTRYalias0.CONTINENT = "var0" AND COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = "var1" AND COUNTRYLANGUAGEalias0.LANGUAGE = "var2" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Whic`h unique cities are in var2n countries where var1 is the official language ?<CODESPLIT>SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = "var0" AND RESTAURANTalias0.FOOD_TYPE = "var1" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = "var2" AND RESTAURANTalias1.FOOD_TYPE = "var3" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the name , independence year , and surface area of the country with the smallest population ?<CODESPLIT>SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the population , name and leader of the country with the largest area ?<CODESPLIT>SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , HEADOFSTATE FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages .<CODESPLIT>SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = "var1" AND TRYOUTalias0.DECISION = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of cities in each district whose population is greater than the average population of cities ?<CODESPLIT>SELECT COUNT( * ) , ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY ORCHESTRAalias0.RECORD_COMPANY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the government form name and total population for each government form whose average life expectancy is longer than var0 .<CODESPLIT>SELECT GOVERNMENTFORM , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY GOVERNMENTFORM HAVING AVG( LIFEEXPECTANCY ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of companies whose revenue is greater than the average revenue of all companies .<CODESPLIT>SELECT AVG( LIFEEXPECTANCY ) , COUNTRYalias0.CONTINENT , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY COUNTRYalias0.CONTINENT HAVING AVG( LIFEEXPECTANCY ) < var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names and areas of countries with the top var0 largest area ?<CODESPLIT>SELECT COUNTRYalias0.NAME , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are names of countries with the top var0 largest population ?<CODESPLIT>SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT AVG( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = "var0" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the nations with the var0 lowest populations ?<CODESPLIT>SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION ASC LIMIT var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many countries are in var0 ?<CODESPLIT>SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of the countries that are in the continent of var0 and have a population of var1 ?<CODESPLIT>SELECT INVOICESalias0.PRODUCT_ID FROM INVOICES AS INVOICESalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total population and average area of countries in the continent of var0 whose area is bigger than var1 ?<CODESPLIT>SELECT AVG( SURFACEAREA ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = "var0" AND SURFACEAREA > var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the location shared by most counties ?<CODESPLIT>SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION BETWEEN var0 AND var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which language is spoken by the largest number of countries ?<CODESPLIT>SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = "var0" AND PROFESSORalias0.PROF_HIGH_DEGREE != "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the language spoken by the largest percentage of people in each country ?<CODESPLIT>SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = "var0" AND STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = "var1" ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total number of countries where var0 is spoken by the largest percentage of people ?<CODESPLIT>SELECT COUNT( COUNTRYLANGUAGEalias0.* ) , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE LANGUAGE = "var0" GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>return me all the keywords .<CODESPLIT>SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE LANGUAGE = "var0" GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many conductors are there ?<CODESPLIT>SELECT HIGHLOWalias0.HIGHEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MIN( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of conductors in ascending order of age .<CODESPLIT>SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of conductors whose nationalities are not " var0 " ?<CODESPLIT>SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 WHERE CONDUCTORalias0.NATIONALITY != "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of students that have at least one grade " var0 " .<CODESPLIT>SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 ORDER BY ORCHESTRAalias0.YEAR_OF_FOUNDED DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average attendance of shows ?<CODESPLIT>SELECT DISTINCT HEADalias0.AGE FROM MANAGEMENT AS MANAGEMENTalias0 JOIN HEAD AS HEADalias0 ON MANAGEMENTalias0.HEAD_ID = HEADalias0.HEAD_ID WHERE MANAGEMENTalias0.TEMPORARY_ACTING = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the maximum and minimum share of performances whose type is not " var0 " .<CODESPLIT>SELECT INSTRUCTORalias0.ID FROM INSTRUCTOR AS INSTRUCTORalias0 EXCEPT SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many different nationalities do conductors have ?<CODESPLIT>SELECT COUNT( DISTINCT CONDUCTORalias0.NATIONALITY ) FROM CONDUCTOR AS CONDUCTORalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many lessons were in cancelled state ?<CODESPLIT>SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.YEAR_OF_WORK DESC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of the conductor with the most years of work .<CODESPLIT>SELECT COUNT( * ) , DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = "var0" GROUP BY DEPT_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which professionals live in the state of var0 or have done treatment on more than var1 treatments ? List his or her id , last name and cell phone .<CODESPLIT>SELECT CONDUCTORalias0.NAME , ORCHESTRAalias0.ORCHESTRA FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of conductors that have conducted more than one orchestras .<CODESPLIT>SELECT PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of the conductor that has conducted the most number of orchestras .<CODESPLIT>SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DEPARTMENT_ID NOT IN ( SELECT MANAGEMENTalias0.DEPARTMENT_ID FROM MANAGEMENT AS MANAGEMENTalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the name of the conductor that has conducted orchestras founded after var0 .<CODESPLIT>SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID WHERE ORCHESTRAalias0.YEAR_OF_FOUNDED > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the different record companies and the corresponding number of orchestras .<CODESPLIT>SELECT COUNT( * ) , ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY ORCHESTRAalias0.RECORD_COMPANY ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the largest and smallest customer codes ?<CODESPLIT>SELECT ORCHESTRAalias0.MAJOR_RECORD_FORMAT FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY MAJOR_RECORD_FORMAT ORDER BY COUNT( * ) ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the highest acc percent score in the competition ?<CODESPLIT>SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY RECORD_COMPANY ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the names of stadiums whose capacity is smaller than the average capacity .<CODESPLIT>SELECT ORCHESTRAalias0.ORCHESTRA FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.ORCHESTRA_ID NOT IN ( SELECT PERFORMANCEalias0.ORCHESTRA_ID FROM PERFORMANCE AS PERFORMANCEalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the record companies shared by orchestras founded before var0 and after var0 .<CODESPLIT>SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = "var0" ) AND RIVERalias0.TRAVERSE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of orchestras whose record format is " var0 " or " var1 " .<CODESPLIT>SELECT DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY SOFTWARE_PLATFORM ORDER BY COUNT( * ) DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the years in which orchestras that have given more than one performance are founded .<CODESPLIT>SELECT ORCHESTRAalias0.YEAR_OF_FOUNDED FROM ORCHESTRA AS ORCHESTRAalias0 JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.ORCHESTRA_ID = ORCHESTRAalias0.ORCHESTRA_ID GROUP BY PERFORMANCEalias0.ORCHESTRA_ID HAVING COUNT( * ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many high schoolers are there ?<CODESPLIT>SELECT COUNT( * ) FROM HIGHSCHOOLER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names and grades of each high schooler .<CODESPLIT>SELECT GRADE , NAME FROM HIGHSCHOOLER ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the names of countries whose language is not " var0 " .<CODESPLIT>SELECT GRADE FROM HIGHSCHOOLER ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What grade is var0 in ?<CODESPLIT>SELECT GRADE FROM HIGHSCHOOLER WHERE NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return the name and gender of the staff who was assigned in 2016 .<CODESPLIT>SELECT NAME FROM HIGHSCHOOLER WHERE GRADE = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ID of the high schooler named var0 .<CODESPLIT>SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.LOGIN_NAME FROM STUDENTS AS STUDENTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many high schoolers are there in grade var0 or var1 ?<CODESPLIT>SELECT ADDRESSalias0.ADDRESS , CUSTOMERalias0.EMAIL FROM CUSTOMER AS CUSTOMERalias0 JOIN ADDRESS AS ADDRESSalias0 ON CUSTOMERalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE CUSTOMERalias0.FIRST_NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the number of high schoolers for each grade .<CODESPLIT>SELECT COUNT( * ) , GRADE FROM HIGHSCHOOLER GROUP BY GRADE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average age of students who are living in the dorm with the largest capacity .<CODESPLIT>SELECT GRADE FROM HIGHSCHOOLER GROUP BY GRADE ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the average price of hotels for each star rating code .<CODESPLIT>SELECT GRADE FROM HIGHSCHOOLER GROUP BY GRADE HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the student IDs and numbers of friends corresponding to each .<CODESPLIT>SELECT COUNT( * ) , FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 GROUP BY FRIENDalias0.STUDENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the people that have been governor the most times .<CODESPLIT>SELECT COUNT( * ) , DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the code of the school where the accounting department belongs to ?<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of high schoolers who have at least var0 friends .<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of all of the high schooler var0's friends .<CODESPLIT>SELECT DERIVED_TABLEalias1.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID JOIN HIGHSCHOOLER AS DERIVED_TABLEalias1 ON FRIENDalias0.FRIEND_ID = DERIVED_TABLEalias1.ID WHERE DERIVED_TABLEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which vocal type did the musician with last name " var0 " played in the song with title " var1 " ?<CODESPLIT>SELECT COUNT( * ) FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many classes are professor whose last name is var0 has ?<CODESPLIT>SELECT ID FROM HIGHSCHOOLER EXCEPT SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show names of all high school students who do not have any friends .<CODESPLIT>SELECT NAME FROM HIGHSCHOOLER EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the ids of high schoolers who have friends and are also liked by someone else .<CODESPLIT>SELECT COUNTRYalias0.POPULATION , COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show name of all students who have some friends and also are liked by someone else .<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID INTERSECT SELECT DERIVED_TABLEalias1.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias1 ON LIKESalias0.LIKED_ID = DERIVED_TABLEalias1.ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Count the number of likes for each student id .<CODESPLIT>SELECT COUNT( LIKESalias0.* ) , LIKESalias0.STUDENT_ID FROM LIKES AS LIKESalias0 GROUP BY LIKESalias0.STUDENT_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of high schoolers who have likes , and numbers of likes for each .<CODESPLIT>SELECT COUNT( LIKESalias0.* ) , DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of organization that has the greatest number of contact individuals ?<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID ORDER BY COUNT( LIKESalias0.* ) DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of students who have at least var0 likes .<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID HAVING COUNT( LIKESalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of students who have a grade higher than var0 and have at least var1 friends .<CODESPLIT>SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.GRADE > var0 GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many likes does var0 have ?<CODESPLIT>SELECT COUNT( LIKESalias0.* ) FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = "var0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of aircrafts with top three lowest distances .<CODESPLIT>SELECT AVG( GRADE ) FROM HIGHSCHOOLER WHERE ID IN ( SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the minimum grade of students who have no friends .<CODESPLIT>SELECT MIN( GRADE ) FROM HIGHSCHOOLER WHERE ID NOT IN ( SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which states have both owners and professionals living there ?<CODESPLIT>SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What parties have at least three representatives ?<CODESPLIT>SELECT AVG( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the color description of the product with name " var0 " ?<CODESPLIT>SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.LAST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = "var0" UNION SELECT PROFESSIONALSalias1.CELL_NUMBER , PROFESSIONALSalias1.LAST_NAME , PROFESSIONALSalias1.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias1.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which dogs have not cost their owner more than var0 for treatment ? List the dog names .<CODESPLIT>SELECT DOGSalias0.NAME FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 GROUP BY TREATMENTSalias0.DOG_ID HAVING SUM( TREATMENTSalias0.COST_OF_TREATMENT ) > var0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which grade is studying in var0 var1 ?<CODESPLIT>SELECT PROFESSIONALSalias0.FIRST_NAME FROM PROFESSIONALS AS PROFESSIONALSalias0 UNION SELECT OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 EXCEPT SELECT DOGSalias0.NAME FROM DOGS AS DOGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what are the major cities in var1<CODESPLIT>SELECT PROFESSIONALSalias0.EMAIL_ADDRESS , PROFESSIONALSalias0.PROFESSIONAL_ID , PROFESSIONALSalias0.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias0 EXCEPT SELECT PROFESSIONALSalias1.EMAIL_ADDRESS , PROFESSIONALSalias1.PROFESSIONAL_ID , PROFESSIONALSalias1.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which owner owns the most dogs ? List the owner id , first name and last name .<CODESPLIT>SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE AGE > ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = "var0" ) ORDER BY PERSONalias0.AGE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which professionals have done at least two treatments ? List the professional's id , role , and first name .<CODESPLIT>SELECT PROFESSIONALSalias0.FIRST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID , PROFESSIONALSalias0.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias0.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) >= var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the name of the breed with the most dogs ?<CODESPLIT>SELECT BREEDSalias0.BREED_NAME FROM BREEDS AS BREEDSalias0 JOIN DOGS AS DOGSalias0 ON DOGSalias0.BREED_CODE = BREEDSalias0.BREED_CODE GROUP BY BREEDSalias0.BREED_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name .<CODESPLIT>SELECT PERSONalias0.AGE FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = "var0" AND DERIVED_TABLEalias0.YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE NAME = "var1" ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all template type codes and descriptions .<CODESPLIT>SELECT TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENT_TYPES AS TREATMENT_TYPESalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE GROUP BY TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) ASC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which owner has paid the largest amount of money in total for their dogs ? Show the owner id and zip code .<CODESPLIT>SELECT OWNERSalias0.OWNER_ID , OWNERSalias0.ZIP_CODE FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID GROUP BY OWNERSalias0.OWNER_ID ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which professionals have done at least two types of treatments ? List the professional id and cell phone .<CODESPLIT>SELECT STORMalias0.MAX_SPEED , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ORDER BY COUNT( AFFECTED_REGIONalias0.* ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what states border var0 and have a major river<CODESPLIT>SELECT DISTINCT PROFESSIONALSalias0.FIRST_NAME , PROFESSIONALSalias0.LAST_NAME FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 WHERE TREATMENTSalias0.COST_OF_TREATMENT < ( SELECT AVG( TREATMENTSalias1.COST_OF_TREATMENT ) FROM TREATMENTS AS TREATMENTSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the date of each treatment , together with the first name of the professional who operated it .<CODESPLIT>SELECT PROFESSIONALSalias0.FIRST_NAME , TREATMENTSalias0.DATE_OF_TREATMENT FROM TREATMENTS AS TREATMENTSalias0 JOIN PROFESSIONALS AS PROFESSIONALSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the target user with the lowest trust score .<CODESPLIT>SELECT TREATMENTSalias0.COST_OF_TREATMENT , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENTS AS TREATMENTSalias0 JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List each owner's first name , last name , and the size of his for her dog .<CODESPLIT>SELECT DOGSalias0.SIZE_CODE , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List pairs of the owner's first name and the dogs's name .<CODESPLIT>SELECT DOGSalias0.NAME , OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of the party that has at least two records .<CODESPLIT>SELECT DOGSalias0.NAME , TREATMENTSalias0.DATE_OF_TREATMENT FROM DOGS AS DOGSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID WHERE DOGSalias0.BREED_CODE = ( SELECT DOGSalias1.BREED_CODE FROM DOGS AS DOGSalias1 GROUP BY BREED_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which dogs are owned by someone who lives in var0 ? List the owner's first name and the dog's name .<CODESPLIT>SELECT COUNT( DISTINCT LISTalias0.GRADE ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the arriving date and the departing date of the dogs who have gone through a treatment ?<CODESPLIT>SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many neighbourhoods have a business with rating var1 in var0 ?<CODESPLIT>SELECT OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID WHERE DOGSalias0.AGE = ( SELECT MAX( DOGSalias1.AGE ) FROM DOGS AS DOGSalias1 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the emails of the professionals who live in the state of var0 or the state of var1 .<CODESPLIT>SELECT PROFESSIONALSalias0.EMAIL_ADDRESS FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = "var0" OR PROFESSIONALSalias0.STATE = "var1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the student ID and login name of the student with the most course enrollments<CODESPLIT>SELECT DOGSalias0.DATE_ARRIVED , DOGSalias0.DATE_DEPARTED FROM DOGS AS DOGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many dogs went through any treatments ?<CODESPLIT>SELECT DISTINCT PAPERalias0.JOURNALID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = "var0" GROUP BY PAPERalias0.JOURNALID , PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professionals have performed any treatment to dogs ?<CODESPLIT>SELECT COUNT( DISTINCT TREATMENTSalias0.PROFESSIONAL_ID ) FROM TREATMENTS AS TREATMENTSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which professionals live in a city containing the substring ' var0 ' ? List his or her role , street , city and state .<CODESPLIT>SELECT PROFESSIONALSalias0.CITY , PROFESSIONALSalias0.ROLE_CODE , PROFESSIONALSalias0.STATE , PROFESSIONALSalias0.STREET FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.CITY LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which owners live in the state whose name contains the substring ' var0 ' ? List his first name , last name and email .<CODESPLIT>SELECT OWNERSalias0.EMAIL_ADDRESS , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 WHERE OWNERSalias0.STATE LIKE "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many dogs have an age below the average ?<CODESPLIT>SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.AGE < ( SELECT AVG( DOGSalias1.AGE ) FROM DOGS AS DOGSalias1 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the price ranges of hotels ?<CODESPLIT>SELECT TREATMENTSalias0.COST_OF_TREATMENT FROM TREATMENTS AS TREATMENTSalias0 ORDER BY TREATMENTSalias0.DATE_OF_TREATMENT DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different teams of technicians and the number of technicians in each team .<CODESPLIT>SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many owners temporarily do not have any dogs ?<CODESPLIT>SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.STATE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many professionals did not operate any treatment on dogs ?<CODESPLIT>SELECT COUNT( * ) FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.PROFESSIONAL_ID NOT IN ( SELECT TREATMENTSalias0.PROFESSIONAL_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name and phone of the customer without any mailshot .<CODESPLIT>SELECT DOGSalias0.AGE , DOGSalias0.NAME , DOGSalias0.WEIGHT FROM DOGS AS DOGSalias0 WHERE ABANDONED_YN = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average age of all the dogs ?<CODESPLIT>SELECT COUNT( * ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the age of the oldest dog ?<CODESPLIT>SELECT MAX( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How much does each charge type costs ? List both charge type and amount .<CODESPLIT>SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN ENROLLMENTS AS ENROLLMENTSalias0 ON ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE ENROLLMENTSalias0.FTE_AY > var2 AND ENROLLMENTSalias0.TOTALENROLLMENT_AY > var1 AND ENROLLMENTSalias0.YEAR = var0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the first name and last name of the instructor of course that has course name<CODESPLIT>SELECT MAX( CHARGESalias0.CHARGE_AMOUNT ) FROM CHARGES AS CHARGESalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the email , cell phone and home phone of all the professionals .<CODESPLIT>SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.EMAIL_ADDRESS , PROFESSIONALSalias0.HOME_PHONE FROM PROFESSIONALS AS PROFESSIONALSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the possible breed type and size type combinations ?<CODESPLIT>SELECT DISTINCT DOGSalias0.BREED_CODE , DOGSalias0.SIZE_CODE FROM DOGS AS DOGSalias0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the first name of all the professionals along with the description of the treatment they have done .<CODESPLIT>SELECT DISTINCT PROFESSIONALSalias0.FIRST_NAME , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many people live in the capital of var0<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS ASC ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the birth year and citizenship of singers ?<CODESPLIT>SELECT STAFF_ROLESalias0.ROLE_DESCRIPTION FROM STAFF_ROLES AS STAFF_ROLESalias0 WHERE STAFF_ROLESalias0.ROLE_CODE = "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of singers whose citizenship is not " var0 " .<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.CITIZENSHIP != "var0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the name of singers whose birth year is either var0 or var1 ?<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.BIRTH_YEAR = var0 OR SINGERalias0.BIRTH_YEAR = var1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the name of the tryout players who are from the college with largest size .<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show different citizenship of singers and the number of singers of each citizenship .<CODESPLIT>SELECT COUNT( * ) , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.CITIZENSHIP ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Please show the most common citizenship of singers .<CODESPLIT>SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY CITIZENSHIP ORDER BY COUNT( * ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show all main industry for all companies .<CODESPLIT>SELECT MAX( SINGERalias0.NET_WORTH_MILLIONS ) , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.CITIZENSHIP ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show titles of songs and names of singers .<CODESPLIT>SELECT SINGERalias0.NAME , SONGalias0.TITLE FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show distinct names of singers that have songs with sales more than var0 .<CODESPLIT>SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_CODE NOT IN ( SELECT DOCUMENT_SECTIONSalias0.DOCUMENT_CODE FROM DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ) ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show each school name , its budgeted amount , and invested amount in year var0 or after .<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID GROUP BY SINGERalias0.NAME HAVING COUNT( SONGalias0.* ) > var0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the names of singers and the total sales of their songs .<CODESPLIT>SELECT SINGERalias0.NAME , SUM( SONGalias0.SALES ) FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID GROUP BY SINGERalias0.NAME ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the name of singers that do not have any song .<CODESPLIT>SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SINGER_ID NOT IN ( SELECT SONGalias0.SINGER_ID FROM SONG AS SONGalias0 ) ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Show the citizenship shared by singers with birth year before var0 and after var1 .<CODESPLIT>SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 WHERE SINGERalias0.BIRTH_YEAR < var0 INTERSECT SELECT SINGERalias1.CITIZENSHIP FROM SINGER AS SINGERalias1 WHERE SINGERalias1.BIRTH_YEAR > var1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many available features are there in total ?<CODESPLIT>SELECT COUNT( * ) FROM OTHER_AVAILABLE_FEATURES AS OTHER_AVAILABLE_FEATURESalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the feature type name of feature var0 ?<CODESPLIT>SELECT DISTINCT TRACKalias0.LOCATION FROM TRACK AS TRACKalias0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average and maximum rating of all reviews .<CODESPLIT>SELECT DERIVED_TABLEalias0.PROPERTY_TYPE_DESCRIPTION FROM PROPERTIES AS PROPERTIESalias0 JOIN REF_PROPERTY_TYPES AS DERIVED_TABLEalias0 ON PROPERTIESalias0.PROPERTY_TYPE_CODE = DERIVED_TABLEalias0.PROPERTY_TYPE_CODE GROUP BY PROPERTIESalias0.PROPERTY_TYPE_CODE ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are the names of properties that are either houses or apartments with more than var2 room ?<CODESPLIT>SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.MARKET_VALUE_BILLION DESC ;0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 in " business_city0 " with more than business_review_count0 reviews<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING > business_rating0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all businesses with rating business_rating0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING = business_rating0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all user ids with name user_name0<CODESPLIT>SELECT USERalias0.USER_ID FROM USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name1 with category_name0 in business_city0 business_state0<CODESPLIT>SELECT BUSINESSalias0.STATE FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "business_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips have been written in tip_year0<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the cities of businesses rated below business_rating0<CODESPLIT>SELECT REVIEWalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 WHERE BUSINESSalias0.REVIEW_COUNT > business_review_count0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all cities which has a " business_name0 " .<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the reviews which rated a business less than review_rating0<CODESPLIT>SELECT TIPalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND TIPalias0.LIKES > tip_likes0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the category_name0 rated more than business_rating0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.RATING > business_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all cities which has a " business_name0 " category_name0<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the reviews by user_name0<CODESPLIT>SELECT REVIEWalias0.TEXT FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>list all the businesses which have a review by user_name0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in category_name0 category_name1 in " business_city0 " per day<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND REVIEWalias0.RATING = review_rating0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the reviews by user_name0 for category_name0 category_name1<CODESPLIT>SELECT REVIEWalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of reviews written for " business_name0 " category_name0 in business_state0<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in category_name1 category_name0 in " business_city0 "<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.RATING = business_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who reviewed category_name0 " business_name0 "<CODESPLIT>SELECT NEIGHBORHOODalias0.NEIGHBORHOOD_NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the neighborhoods with category_name0 category_name1 rated less than business_rating0 in business_city0<CODESPLIT>SELECT SUM( CHECKINalias0.COUNT ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , CHECKIN AS CHECKINalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find all the category_name0 in business_state0<CODESPLIT>SELECT USERalias0.NAME FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 , USER AS USERalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND TIPalias0.YEAR = tip_year0 AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips has user_name0 written in tip_month0<CODESPLIT>SELECT REVIEWalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 WHERE BUSINESSalias0.REVIEW_COUNT > business_review_count0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 which have more than business_review_count0 reviews<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.REVIEW_COUNT > business_review_count0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the category_name0 in " business_city0 " ?<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 in " business_city0 " with more than business_review_count0 reviews<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.REVIEW_COUNT > business_review_count0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 in business_city0 with at least business_review_count0 reviews<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.BUSINESS_ID ) ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who reviewed category_name0 " business_name0 "<CODESPLIT>SELECT USERalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List the addresses of all business_name0 in " business_city0 "<CODESPLIT>SELECT BUSINESSalias0.FULL_ADDRESS FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 reviewed by user_name0 in " business_city0 "<CODESPLIT>SELECT REVIEWalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 WHERE BUSINESSalias0.RATING = business_rating0 AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the category_name0 rated more than business_rating0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 reviewed by user_name0 with at least business_rating0 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.RATING >= business_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who have written tips for " business_name0 " in tip_year0<CODESPLIT>SELECT USERalias0.NAME FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 , USER AS USERalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND TIPalias0.YEAR = tip_year0 AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total likes on tips from user_name0 about " business_name0 "<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING < business_rating0 AND BUSINESSalias0.STATE = "business_state0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all cities in which there is a category_name0 called " business_name0 "<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all reviews by user_name0 with a rating above review_rating0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.RATING > business_rating0 AND BUSINESSalias0.REVIEW_COUNT > business_review_count0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which category_name1 category_name0 in business_city0 has the most number of reviews ?<CODESPLIT>SELECT BUSINESSalias0.BUSINESS_ID FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many neighborhoods have a business with rating business_rating0 in business_city0 ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.RATING > business_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What neighborhood is category_name0 " business_name0 " in ?<CODESPLIT>SELECT NEIGHBORHOODalias0.NEIGHBORHOOD_NAME FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all tips about " business_name0 " that received more than tip_likes0 likes<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all cities which has a " business_name0 " .<CODESPLIT>SELECT REVIEWalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND REVIEWalias0.YEAR = review_year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who have written tips about businesses in business_city0<CODESPLIT>SELECT USERalias0.NAME FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of category_name0 in business_city0<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all business_city0 category_name0 with a rating above business_rating0<CODESPLIT>SELECT USERalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , TIP AS TIPalias0 , USER AS USERalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = TIPalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all reviews for category_name0 with rating less than review_rating0<CODESPLIT>SELECT REVIEWalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 WHERE BUSINESSalias0.RATING < review_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all users who have written tips about businesses in business_city0<CODESPLIT>SELECT NEIGHBORHOODalias0.NAME FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all tips for " business_name0 " in business_state0 .<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all users who reviewed businesses that are category_name0 .<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which business has the most number of checkins<CODESPLIT>SELECT TIPalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND TIPalias0.YEAR = tip_year0 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all users who reviewed businesses that are category_name0 in review_year0 .<CODESPLIT>SELECT USERalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND REVIEWalias0.YEAR = review_year0 AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the tips from a user who has written a review in review_year0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND NEIGHBORHOODalias0.NEIGHBORHOOD_NAME = "neighborhood_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all reviews for businesses rated business_rating0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of businesses user user_name0 reviews per month ?<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the number of category_name0 rated more than business_rating0<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.RATING > business_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in category_name1 category_name0 in " business_city0 "<CODESPLIT>SELECT SUM( CHECKINalias0.COUNT ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , CHECKIN AS CHECKINalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in category_name0 category_name1 in " business_city0 " on checkin_day0<CODESPLIT>SELECT COUNT( DISTINCT ( REVIEWalias0.TEXT ) ) FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE REVIEWalias0.YEAR = review_year0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the total checkins in category_name0 category_name1 in " business_city0 " per day<CODESPLIT>SELECT TIPalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>find the user with the most number of reviews<CODESPLIT>SELECT BUSINESSalias0.STATE , SUM( CHECKINalias0.COUNT ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , CHECKIN AS CHECKINalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CHECKINalias0.DAY = "checkin_day0" GROUP BY BUSINESSalias0.STATE ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many reviews has user_name0 written in review_year0<CODESPLIT>SELECT COUNT( DISTINCT ( REVIEWalias0.TEXT ) ) FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE REVIEWalias0.YEAR = review_year0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>what is the average rating given in user_name0 reviews<CODESPLIT>SELECT AVG ( REVIEWalias0.RATING ) FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all the tips from a user who has written a review in review_year0<CODESPLIT>SELECT CHECKINalias0.COUNT FROM BUSINESS AS BUSINESSalias0 , CHECKIN AS CHECKINalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CHECKINalias0.DAY = "checkin_day0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many users reviewed " business_name0 " in business_city0<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of category_name0 in business_city0 rated business_rating0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips have been written in tip_year0<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 WHERE TIPalias0.YEAR = tip_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 category_name1 in the neighborhood_name0 neighborhood of business_city0<CODESPLIT>SELECT SUM( TIPalias0.LIKES ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all users who reviewed businesses that are category_name0 in review_year0 .<CODESPLIT>SELECT SUM( TIPalias0.LIKES ) FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the total likes on tips from user_name0 about " business_name0 "<CODESPLIT>SELECT SUM( TIPalias0.LIKES ) FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 , USER AS USERalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips has user_name0 written in tip_year0<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE TIPalias0.YEAR = tip_year0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many tips has user_name0 written in tip_month0<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE TIPalias0.MONTH = "tip_month0" AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which business has the most number of checkins<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many category_name0 in " business_city0 " have a rating above business_rating0 ?<CODESPLIT>SELECT SUM( CHECKINalias0.COUNT ) FROM CHECKIN AS CHECKINalias0 WHERE CHECKINalias0.DAY = "checkin_day0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many people reviewed the category_name0 " business_name0 " in business_city0 business_state0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many people reviewed " business_name0 " in review_year0 ?<CODESPLIT>SELECT BUSINESSalias0.STATE FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "business_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many category_name0 are there in the neighborhood_name0 district of business_city0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE TIPalias0.MONTH = "tip_month0" AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many business_name0 are there in business_city0 business_state0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.BUSINESS_ID ) ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the reviews which rated a business less than review_rating0<CODESPLIT>SELECT BUSINESSalias0.REVIEW_COUNT FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "business_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the average number of checkins in category_name0 " business_name0 " per day<CODESPLIT>SELECT AVG ( CHECKINalias0.COUNT ) , CHECKINalias0.DAY FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CHECKIN AS CHECKINalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY CHECKINalias0.DAY ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many businesses are there in the " neighborhood_name0 " neighborhood in business_city0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND NEIGHBORHOODalias0.NEIGHBORHOOD_NAME = "neighborhood_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the number of businesses user user_name0 reviews per month ?<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many reviews has user_name0 written ?<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE TIPalias0.YEAR = tip_year0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many reviews has user_name0 written in review_month0 review_year0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( REVIEWalias0.TEXT ) ) FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE REVIEWalias0.MONTH = "review_month0" AND REVIEWalias0.YEAR = review_year0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many businesses has user_name0 reviewed in review_year0 ?<CODESPLIT>SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the neighborhoods with category_name0 category_name1 in business_city0<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND REVIEWalias0.YEAR = review_year0 AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all reviews by user_name0 with a rating above review_rating0<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.BUSINESS_ID ) ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.NAME = "business_name0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many users have reviewed category_name0 in business_city0 ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What is the average rating of reviews written in year review_year0 ?<CODESPLIT>SELECT AVG ( REVIEWalias0.RATING ) FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.YEAR = review_year0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>how many users reviewed " business_name0 " in business_city0<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND REVIEWalias0.YEAR = review_year0 AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>List all the reviews by user_name0 for category_name0 category_name1<CODESPLIT>SELECT SUM( BUSINESSalias0.REVIEW_COUNT ) FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND NEIGHBORHOODalias0.NEIGHBORHOOD_NAME = "neighborhood_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of users called user_name0<CODESPLIT>SELECT COUNT( DISTINCT ( USERalias0.NAME ) ) FROM USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of businesses that are category_name0 .<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of cities that has " business_name0 " .<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.CITY ) ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = "business_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Return me the number of tips that are written by user_name0 .<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total checkins in " neighborhood_name0 " neighborhood<CODESPLIT>SELECT SUM( CHECKINalias0.COUNT ) FROM BUSINESS AS BUSINESSalias0 , CHECKIN AS CHECKINalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND NEIGHBORHOODalias0.NEIGHBORHOOD_NAME = "neighborhood_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the total checkins in checkin_day0<CODESPLIT>SELECT SUM( CHECKINalias0.COUNT ) FROM CHECKIN AS CHECKINalias0 WHERE CHECKINalias0.DAY = "checkin_day0" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which category_name1 category_name0 in business_city0 has the most number of reviews ?<CODESPLIT>SELECT COUNT( DISTINCT ( REVIEWalias0.TEXT ) ) FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.MONTH = "review_month0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the number of tips written in each month<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) , TIPalias0.MONTH FROM TIP AS TIPalias0 GROUP BY TIPalias0.MONTH ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many neighborhoods have a business with rating business_rating0 in business_city0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( NEIGHBORHOODalias0.NEIGHBORHOOD_NAME ) ) FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.RATING = business_rating0 AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Give me all the category_name0 category_name1 in business_state0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which category_name1 category_name0 has the most number of reviews<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ORDER BY BUSINESSalias0.REVIEW_COUNT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>which business has the most number of checkins<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CHECKIN AS CHECKINalias0 WHERE CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY BUSINESSalias0.NAME ORDER BY SUM( CHECKINalias0.COUNT ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the category_name0 in " business_city0 " ?<CODESPLIT>SELECT USERalias0.NAME FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE USERalias0.USER_ID = REVIEWalias0.USER_ID GROUP BY USERalias0.NAME ORDER BY COUNT( DISTINCT ( REVIEWalias0.TEXT ) ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many neighborhoods have a business with rating business_rating0 in business_city0 ?<CODESPLIT>SELECT NEIGHBORHOODalias0.NEIGHBORHOOD_NAME FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY NEIGHBORHOODalias0.NEIGHBORHOOD_NAME ORDER BY COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which neighborhood in business_city0 has the category_name1 category_name0 with the highest stars<CODESPLIT>SELECT NEIGHBORHOODalias0.NEIGHBORHOOD_NAME FROM BUSINESS AS BUSINESSalias0 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY NEIGHBORHOODalias0.NEIGHBORHOOD_NAME ORDER BY COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) DESC LIMIT 1 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 category_name1 in business_city0 with at least business_rating0 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE BUSINESSalias0.RATING >= business_rating0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = REVIEWalias0.USER_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name1 with category_name0 in business_city0 business_state0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.STATE = "business_state0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 category_name1 in the neighborhood_name0 neighborhood of business_city0<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 , NEIGHBORHOOD AS NEIGHBORHOODalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" AND NEIGHBORHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND NEIGHBORHOODalias0.NEIGHBORHOOD_NAME = "neighborhood_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find all category_name0 in " business_city0 " with at least business_review_count0 reviews and average rating above business_rating0 stars<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE BUSINESSalias0.CITY = "business_city0" AND BUSINESSalias0.RATING > business_rating0 AND BUSINESSalias0.REVIEW_COUNT > business_review_count0 AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>How many category_name1 category_name0 are there in business_city0 ?<CODESPLIT>SELECT COUNT( DISTINCT ( BUSINESSalias0.NAME ) ) FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which category_name0 category_name1 in business_city0 has the highest rating ?<CODESPLIT>SELECT TIPalias0.TEXT FROM BUSINESS AS BUSINESSalias0 , TIP AS TIPalias0 WHERE BUSINESSalias0.NAME = "business_name0" AND BUSINESSalias0.STATE = "business_state0" AND TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Which category_name1 category_name0 in business_city0 has the most number of reviews ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 , CATEGORY AS CATEGORYalias1 WHERE BUSINESSalias0.CITY = "business_city0" AND CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias0.CATEGORY_NAME = "category_name0" AND CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID AND CATEGORYalias1.CATEGORY_NAME = "category_name1" ORDER BY BUSINESSalias0.REVIEW_COUNT DESC LIMIT 1 ;
1<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find users whose average review rating is below review_rating0<CODESPLIT>SELECT USERalias0.NAME FROM REVIEW AS REVIEWalias0 , USER AS USERalias0 WHERE USERalias0.USER_ID = REVIEWalias0.USER_ID GROUP BY USERalias0.NAME HAVING AVG ( REVIEWalias0.RATING ) < review_rating0 ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>Find the business with the most number of reviews in review_month0<CODESPLIT>SELECT COUNT( DISTINCT ( TIPalias0.TEXT ) ) FROM TIP AS TIPalias0 , USER AS USERalias0 WHERE USERalias0.NAME = "user_name0" AND USERalias0.USER_ID = TIPalias0.USER_ID ;
0<CODESPLIT>nothing<CODESPLIT>nothing<CODESPLIT>What are all the category_name0 in " business_city0 " ?<CODESPLIT>SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 , CATEGORY AS CATEGORYalias0 WHERE CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY BUSINESSalias0.NAME ORDER BY COUNT( DISTINCT ( CATEGORYalias0.CATEGORY_NAME ) ) DESC LIMIT 1 ;